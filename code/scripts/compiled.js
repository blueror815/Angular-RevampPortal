<<<<<<< HEAD
!function(){"use strict";angular.module("revapm.Portal.Config",[])}(),function(){"use strict";angular.module("revapm.Portal.Config").constant("$config",{SERVER_URL:"",API_URL:window.API_URL||"https://testsjc20-api01.revsw.net/v1",STATUS:{OK:200,BAD_REQUEST:400,UNAUTHORIZED:401,TWO_FACTOR_AUTH_REQUIRED:403,SUBSCRIPTION_REQUIRED:418},ROLE:{USER:"user",RESELLER:"reseller",ADMIN:"admin",REVADMIN:"revadmin"},EVENTS:{DOMAIN_CHANGED:"domain_changed",FILTER_CHANGED:"filter_changed"},DOMAIN_STAGING_STATUS_ICONS:{InProgress:"glyphicon-refresh spin",Published:"glyphicon-ok-sign text-success",Modified:"glyphicon-ok-sign text-primary"},DOMAIN_PRODUCTION_STATUS_ICONS:{InProgress:"glyphicon-refresh spin",Published:"glyphicon-ok-circle text-success",Modified:"glyphicon-ok-circle text-primary"},APP_STATUS_REFRESH_INTERVAL:15e3,DOMAIN_STATUS_REFRESH_INTERVAL:15e3,SSL_CERT_STAGING_STATUS_ICONS:{InProgress:"glyphicon-refresh spin",Published:"glyphicon-ok-sign text-success",Modified:"glyphicon-ok-sign text-primary"},SSL_CERT_PRODUCTION_STATUS_ICONS:{InProgress:"glyphicon-refresh spin",Published:"glyphicon-ok-circle text-success",Modified:"glyphicon-ok-circle text-primary"},SSL_CERT_STATUS_REFRESH_INTERVAL:15e3,LOGSHIPPERS_SOURCE_TYPES:{domain:"Domain",app:"Application"},LOGSHIPPERS_DESTINATIONA_TYPES:{Syslog:"Syslog",s3:"S3",ftp:"FTP",sftp:"SFTP",logstash:"Logstash",elasticsearch:"Elasticsearch"},LOGSHIPPERS_STAGING_STATUS_ICONS:{InProgress:"glyphicon-refresh spin",stop:"glyphicon-stop text-warning",active:"glyphicon-play text-success",pause:"glyphicon-pause text-primary"},LOGSHIPPERS_OPERATIONAL_MODES:{active:"Active",pause:"Pause",stop:"Stop"},LOGSHIPPERS_GENERAL_JOB_STATUSIES:{actived:"Actived",stopped:"Stopped",pause:"Pause",paused_with_log_piling:"Paused With Log_piling",Paused_by_revadmin:"Paused by Rev Admin"},LOGSHIPPERS_STATUS_REFRESH_INTERVAL:25e3,INTRO_IS_ACTIVE:!0,ENABLE_SIMPLIFIED_SIGNUP_PROCESS:!0})}(),function(){"use strict";angular.module("revapm.Portal.Config").constant("ActivityPhrase",{ACTIVITY_TYPE:{add:"Added",modify:"Modified","delete":"Deleted",publish:"Published",login:"Logged In",purge:"Purged"},ACTIVITY_TARGET:{user:"User",account:"Company",domain:"Domain",purge:"Cache",apikey:"API Key",team:"Team",app:"App",sslcert:"SSL Certificate",logshippingjob:"Log Shipping Job",object:"Object"}})}(),function(){"use strict";angular.module("revapm.Portal.Shared",["ngTouch","ui.bootstrap.tpls","ui.bootstrap.modal","daterangepicker","ui.router"])}(),function(){"use strict";function revAPIHttpInterceptor($q,$config,$rootScope){function endsWith(str,suffix){return-1!==str.indexOf(suffix,str.length-suffix.length)}return{responseError:function(rejection){return"POST"===rejection.config.method&&endsWith(rejection.config.url,"/2fa/enable")?$q.reject(rejection):(rejection.status===$config.STATUS.UNAUTHORIZED&&$rootScope.$emit("unauthorized"),rejection.status||$rootScope.$emit("not.connected"),$q.reject(rejection))}}}revAPIHttpInterceptor.$inject=["$q","$config","$rootScope"],angular.module("revapm.Portal.Shared").factory("revAPIHttpInterceptor",revAPIHttpInterceptor)}(),function(){"use strict";function AlertService($interval){function add(alert,timeout){var exists=!1;angular.forEach(alerts,function(record){record.message===alert.message&&record.type===alert.type&&(exists=!0)}),exists||(alerts.push(alert),timeout&&$interval(remove.bind(this,alert),timeout,1))}function success(msg,timeout){angular.isUndefined(timeout)&&(timeout=5e3),add({type:"success",message:msg||""},timeout)}function danger(msg,timeout){angular.isUndefined(timeout)&&(timeout=5e3),angular.isObject(msg)&&(msg=403===msg.status?"Access denied. Do you have a read-only user account?":msg&&msg.data&&msg.data.message?msg.data.message:"Something wrong..."),add({type:"danger",message:msg||""},timeout)}function remove(alert){var idx=alerts.indexOf(alert);~idx&&alerts.splice(idx,1)}function clear(){alerts.splice(0,alerts.length)}var alerts=[];return{alerts:alerts,success:success,danger:danger,add:add,remove:remove,clear:clear}}AlertService.$inject=["$interval"],angular.module("revapm.Portal.Shared").factory("AlertService",AlertService)}(),function(){"use strict";function alertListDirective(AlertService){return{transclude:!0,template:'<alert type="{{i.type}}" ng-repeat="i in as.alerts">{{i.message}}</alert>',controller:["$scope",function($scope){$scope.as=AlertService}]}}alertListDirective.$inject=["AlertService"],angular.module("revapm.Portal.Shared").directive("alertList",alertListDirective)}(),function(){"use strict";function alertDirective(){return{transclude:!0,template:'<div ng-class="class" ng-transclude></div>',scope:{type:"@"},controller:["$scope",function($scope){$scope["class"]="alert",$scope.type&&($scope["class"]="alert alert-"+$scope.type)}]}}angular.module("revapm.Portal.Shared").directive("alert",alertDirective)}(),function(){"use strict";function ConfirmModalInstanceCtrl($scope,$uibModalInstance,model){$scope.model=model,$scope.ok=function(){$uibModalInstance.close(!0)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}ConfirmModalInstanceCtrl.$inject=["$scope","$uibModalInstance","model"],angular.module("revapm.Portal.Shared").controller("ConfirmModalInstanceCtrl",ConfirmModalInstanceCtrl)}(),function(angular,empty){"use strict";function CRUDController($config,$rootScope,AlertService,$q,User,$anchorScroll,$uibModal,$filter,$timeout){function CRUDControllerImpl($scope,$stateParams){function saveAnchorScrollIndex($index){$scope.elementIndexForAnchorScroll=$index}$scope.auth=User,$scope.alertService=AlertService,$scope._loading=!1,$scope.state="",$scope.params=$stateParams,$scope.resourse=null,$scope.records=[],$scope.filteredRecords=[],$scope.model=null,$scope.quickFilter="",$scope.deniedFields=[],$scope._baseFilter=!1,$scope.page={hasPrevPage:!1,hasNextPage:!0,current:1,pages:[1]},$scope.filter={filter:"",limit:25,skip:0,predicate:"",reverse:!1},$scope.filterKeys=[],$scope._delayTimeout=null,$scope._applyFilter=function(){var filtered,i,res,compareValue;filtered=_.isString($scope.filter.filter)&&$scope.filter.filter.length>0&&$scope.filterKeys.length>0?_.filter($scope.records,function(record){for(i=0;i<$scope.filterKeys.length;i++)if(compareValue=record[$scope.filterKeys[i]],compareValue&&(moment(compareValue,moment.ISO_8601).isValid()&&(compareValue=new Date(compareValue)),res=-1!==compareValue.toString().toLowerCase().indexOf($scope.filter.filter.toLowerCase())),res)return res}):$filter("filter")($scope.records,$scope.filter.filter),$scope.filteredRecords=$filter("orderBy")(filtered,$scope.filter.predicate,$scope.filter.reverse),$scope._checkPagination()},$scope.filterList=function(){$scope._delayTimeout&&($timeout.cancel($scope._delayTimeout),$scope._delayTimeout=null),$scope._delayTimeout=$timeout($scope._applyFilter,300)},$scope.$watch("filter",function(){$scope.filterList()},!0),$scope.confirm=function(template,resolve){angular.isObject(template)&&(resolve=template,template=""),angular.isObject(resolve)&&(resolve={model:resolve});var modalInstance=$uibModal.open({animation:!0,templateUrl:template||"parts/modal/confirmDelete.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:resolve||{}});return modalInstance.result},$scope.loading=function(loading){return angular.isUndefined(loading)?$scope._loading:void($scope._loading=Boolean(loading))},$scope.setState=function(state){if(!state)throw new Error("Wrong state provided.");$scope.state=state},$scope.clearQuickFilter=function(filter){filter?filter="":$scope.quickFilter=""},$scope.clearModel=function(model){model||(model=$scope.model),angular.forEach(model,function(val,key){model[key]=""}),model=null},$scope.clearList=function(){$scope.records.splice(0,$scope.records.length),$scope.filteredRecords.splice(0,$scope.filteredRecords.length)},$scope.setResource=function(resource){$scope.resource=resource},$scope.setDeniedFields=function(fields){angular.isArray(fields)&&($scope.deniedFields=fields)},$scope.scrollTop=function(){$anchorScroll("top")},$scope.order=function(predicate){$scope.filter.reverse=$scope.filter.predicate===predicate?!$scope.filter.reverse:!1,$scope.filter.predicate=predicate},$scope.checkFilterPage=function(){$scope.filter.skip>0&&$scope.goToPage(1)},$scope._checkPagination=function(){$scope.filteredRecords.length<$scope.filter.limit+$scope.filter.skip?$scope.page.hasNextPage=!1:$scope.page.hasNextPage=!0,$scope.filter.skip>0?$scope.page.hasPrevPage=!0:$scope.page.hasPrevPage=!1;var pages=Math.ceil($scope.filteredRecords.length/$scope.filter.limit);$scope.page.pages.splice(0,$scope.page.pages.length);for(var i=1;pages>=i;i++)$scope.page.pages.push(i);$scope.page.current=Math.ceil($scope.filter.skip/$scope.filter.limit)+1},$scope.nextPage=function(){$scope.page.hasNextPage&&$scope.page.current!==$scope.page.pages.length&&($scope.filter.skip+=$scope.filter.limit,$scope._checkPagination(),$scope.scrollTop())},$scope.prevPage=function(){$scope.page.hasPrevPage&&($scope.filter.skip-=$scope.filter.limit,$scope.filter.skip<0&&($scope.filter.skip=0),$scope._checkPagination(),$scope.scrollTop())},$scope.goToPage=function(page){$scope.page.current!==page&&($scope.page.current=page,$scope.filter.skip=page*$scope.filter.limit-$scope.filter.limit,$scope._checkPagination(),$scope.scrollTop())},$scope.list=function(){if(!$scope.resource)throw new Error("No resource provided.");return $scope.loading(!0),$scope.resource.query(function(data){return $scope._baseFilter?$scope.records=$filter("filter")(data,$scope._baseFilter,!0):$scope.records=data,$scope.filterList(),$scope._checkPagination(),data}).$promise["finally"](function(){$scope.loading(!1)})},$scope["delete"]=function(model){if(model){if(!angular.isFunction(model.$remove))throw new Error("Wrong model provided.");return model.loading=!0,model.$remove().then(function(data){$rootScope.$broadcast("update:searchData");var idx=$scope.records.indexOf(model);return data.statusCode===$config.STATUS.OK&&$scope.records.splice(idx,1),idx=$scope.filteredRecords.indexOf(model),data.statusCode===$config.STATUS.OK&&$scope.filteredRecords.splice(idx,1),data})["finally"](function(){model.loading=!1})}},$scope.create=function(model){if(!$scope.resource)throw new Error("No resource provided.");$scope.alertService.clear(),$scope.loading(!0);var record=new $scope.resource(model);return record.$save().then(function(data){return $rootScope.$broadcast("update:searchData"),$scope.list(),$scope.clearModel(model),data})["catch"](function(data){return data.status===$config.STATUS.BAD_REQUEST&&data.data&&data.data.message&&$scope.alertService.danger(data.data.message,5e3),$q.reject(data)})["finally"](function(){$scope.loading(!1)})},$scope.get=function(id){if(!$scope.resource)throw new Error("No resource provided.");return $scope.clearModel(),$scope.alertService.clear(),$scope.loading(!0),$scope.resource.get({id:id}).$promise.then(function(record){return $scope.model=record,record})["finally"](function(){$scope.loading(!1)})},$scope.update=function(params,model){angular.isObject(params)&&!model&&(model=params,params=void 0);var id=model.id;return params||(params={id:id}),angular.forEach($scope.deniedFields,function(val){model[val]&&delete model[val]}),$scope.alertService.clear(),$scope.loading(!0),$scope.resource.update(params,model).$promise.then(function(data){return $rootScope.$broadcast("update:searchData"),$scope.list(),$scope.$emit("list"),data})["finally"](function(){$scope.loading(!1)})},$scope.$on("list",function(){$scope.list()}),$scope.saveAnchorScrollIndex=saveAnchorScrollIndex,$scope.elementIndexForAnchorScroll=empty}return CRUDControllerImpl}CRUDController.$inject=["$config","$rootScope","AlertService","$q","User","$anchorScroll","$uibModal","$filter","$timeout"],angular.module("revapm.Portal.Shared").factory("CRUDController",CRUDController)}(angular),function(){"use strict";function crudPaginationDirective(){return{restrict:"AE",templateUrl:"parts/shared/crud/pagination.html"}}angular.module("revapm.Portal.Shared").directive("crudPagination",crudPaginationDirective)}(),function(){"use strict";function listFilterDirective(){return{restrict:"AE",template:'<form class="form-inline"><div class="form-group"><label for="search">Search:&nbsp;</label><input type="text" class="form-control" id="search" placeholder="" ng-model="filter.filter" ng-change="checkFilterPage()">&nbsp;&nbsp;<i class="glyphicon glyphicon-remove" ng-show="filter.filter != \'\'" ng-click="filter.filter = \'\'"></i></div></form>'}}angular.module("revapm.Portal.Shared").directive("listFilter",listFilterDirective)}(),function(){"use strict";function UtilFactory(){function convertValue(val,suffix){return val>1e9||"G"===suffix?Math.round(val/1e7)/100+"G":val>1e6||"M"===suffix?Math.round(val/1e4)/100+"M":val>1e3||"K"===suffix?Math.round(val/10)/100+"K":val}function convertTraffic(bps){if(!bps)return"0 Bps";if(1>bps)return bps.toFixed(2)+" Bps";var sizes=["Bps","Kbps","Mbps","Gbps","Tbps"],i=Math.floor(Math.log(bps)/Math.log(1024)),result=Math.round(100*bps/Math.pow(1024,i))/100+" "+(sizes[i]||"");return result||""}function convertTrafficMbps(bps,pr){return!bps||1>bps?"0 Mbps":(bps/1048576).toFixed(pr||2)+" Mbps"}function formatNumber(num,fixed){return(void 0!==fixed?num.toFixed(fixed):num.toString()).replace(/\B(?=(\d{3})+(?!\d))/g,"'")}function humanFileSize(size,pr){if(!size)return"0 B";var i=Math.floor(Math.log(size)/Math.log(1024));return 1*(size/Math.pow(1024,i)).toFixed(pr||2)+" "+["B","kB","MB","GB","TB"][i]}function humanFileSizeInGB(size,pr){return size?1*(size/1073741824).toFixed(pr||2)+" GB":"0 GB"}return{convertValue:convertValue,convertTraffic:convertTraffic,convertTrafficMbps:convertTrafficMbps,formatNumber:formatNumber,humanFileSize:humanFileSize,humanFileSizeInGB:humanFileSizeInGB}}angular.module("revapm.Portal.Shared").factory("Util",UtilFactory)}(),function(angular){"use strict";function uiSrefActiveIf(){var directive={restrict:"A",scope:{uiSrefActiveIf:"=",uiSrefActiveIfParams:"="},controller:UiSrefActiveIfCtrl};return directive}function UiSrefActiveIfCtrl($state,$rootScope,$scope,$element,$attr){function update(){if($state.includes(state)||$state.is(state)){if(!ifParams)return $element.addClass(classname),$rootScope.menuExpandedNodes[state]=!0,void($rootScope.menuExpandedNodes.current=state);if(_.find([$state.params],ifParams))return $element.addClass(classname),$rootScope.menuExpandedNodes[state]=!0,void($rootScope.menuExpandedNodes.current=state)}}$rootScope.menuExpandedNodes||($rootScope.menuExpandedNodes={});var state=null,classname="active",attr=$scope.uiSrefActiveIf,ifParams=$scope.uiSrefActiveIfParams;attr?(state=attr.state,classname=attr["class"]):state=$attr.uiSrefActiveIf,$scope.$on("$stateChangeSuccess",update),update()}angular.module("revapm.Portal.Shared").directive("uiSrefActiveIf",uiSrefActiveIf),uiSrefActiveIf.$inject=[],UiSrefActiveIfCtrl.$inject=["$state","$rootScope","$scope","$element","$attrs"]}(angular),function(angular){"use strict";function menuToggle(){var directive={restrict:"A",scope:{menuToggle:"="},controller:MenuToggleCtrl};return directive}function MenuToggleCtrl($scope){function update(hide){if(void 0!==hide){var drawer=$("#drawer"),main=$("#main");drawer.is(":visible")&&!hide?hide=!0:!drawer.is(":visible")&&hide&&(hide=!1),hide?(drawer.css("display","none"),main.css("left","0px")):(main.css("left","210px"),drawer.css("display","block"))}}$scope.$watch("menuToggle",update),window.onresize=function(){$(window).width()<980?($("#drawer").css("display","block"),$("#menuToggleBtn").css("display","none")):$("#menuToggleBtn").css("display","block")}}angular.module("revapm.Portal.Shared").directive("menuToggle",menuToggle),menuToggle.$inject=[],MenuToggleCtrl.$inject=["$scope"]}(angular),function(angular){"use strict";angular.module("revapm.Portal.Shared").directive("typeaheadToggle",["$rootScope",function($rootScope){return{require:"ngModel",link:function(scope,element,attr,ctrl){element.bind("click",function(){ctrl.$setViewValue($rootScope.searchTerm||" ")}),element.bind("blur",function(){ctrl.$setViewValue()})}}}])}(angular),function(angular){"use strict";angular.module("revapm.Portal.Shared").directive("focusMe",["$timeout",function($timeout){return{link:function(scope,element,attrs){scope.$watch(attrs.focusMe,function(value){value&&$timeout(function(){element[0].focus()})})}}}])}(angular),function(angular){"use strict";angular.module("revapm.Portal.Shared").constant("filterGeneratorConst",{COUNTRIES:"countries",OS:"os",DEVICES:"devices"})}(angular),function(angular,moment,_){"use strict";function filterGenerator(filterGeneratorService,filterGeneratorConst){function link(scope,elem,attr,ngModel){function init(){scope.$watch("ngModel",function(){generateFilterListMenu()}),scope.$watch("domain",function(){generateFilterListMenu()}),scope.$on("$destroy",function(){filterChangeTimeout&&clearTimeout(filterChangeTimeout)})}function addFilter(filter){toggleFilterShownState(filter),scope.filters.push(filter),hideMenu()}function generateFilterListMenu(){var domainId=scope.domain.id;filtersAddMenu=[],scope.filters=[],filterChangeTimeout&&clearTimeout(filterChangeTimeout),_.forEach(ngModel.$modelValue,function(filterKey){var filter=filterGeneratorService.getFilterByFilterKey(filterKey);filter.get&&filter.get(domainId).then(function(data){filter.vals=data.labels}),filtersAddMenu.push(filter)})}function showMenu(){scope.addFilterMenu.show=!0}function hideMenu(){scope.addFilterMenu.show=!1}function getFiltersToAdd(){return _.filter(filtersAddMenu,function(filter){return!filter.isShown})}function toggleFilterShownState(filter){filter.isShown=!filter.isShown}function removeShownFilter(filter,$index){filter.selected="",toggleFilterShownState(filter),scope.filters.splice($index,1),filterChange()}function filterChange(){startFilterChangeEventTimeout()}function startFilterChangeEventTimeout(){filterChangeTimeout&&clearTimeout(filterChangeTimeout),filterChangeTimeout=setTimeout(function(){sendFilterChangeEvent(),scope.$apply()},FILTER_EVENT_TIMEOUT)}function sendFilterChangeEvent(){var filterSelected={from_timestamp:scope.datePicker.date.startDate.toDate().getTime(),to_timestamp:scope.datePicker.date.endDate.toDate().getTime()};_.forEach(scope.filters,function(filter){filter.selected&&(filterSelected[filter.key]=filter.selected)}),filterGeneratorService.broadcastFilterChangeEvent(filterSelected)}function overlayClickHandler(){var datePicker=elem.querySelectorAll(DATE_PICKER_SELECTOR)[0];scope.datePicker.overlay.show=!1,datePicker.focus(),subscribeOnDatePickerHide()}function daterangepickerBlur(datePicker){updateOverlayValue(datePicker)}function subscribeOnDatePickerHide(){var datePicker=elem.querySelectorAll(DATE_PICKER_SELECTOR);datePicker.bind("hide.daterangepicker",function(){datePicker.unbind("hide.daterangepicker"),daterangepickerBlur(datePicker),scope.$digest()})}function updateOverlayValue(datePicker){var key=_.findKey(ranges,function(obj){var objStartDate=obj[0].toDate().getTime(),objEndDate=obj[1].toDate().getTime(),selStartDate=scope.datePicker.date.startDate.toDate().getTime(),selEndDate=scope.datePicker.date.endDate.toDate().getTime();return objStartDate===selStartDate&&objEndDate===selEndDate});key||(key=datePicker.val()),""!==scope.datePicker.overlay.val&&filterChange(),scope.datePicker.overlay.val=key,scope.datePicker.overlay.show=!0}function refreshFilter(){filterChangeTimeout&&clearTimeout(filterChangeTimeout),sendFilterChangeEvent()}var filterChangeTimeout,FILTER_EVENT_TIMEOUT=2e3,DATE_PICKER_SELECTOR=".date-picker",LAST_DAY="Last 1 Day",LAST_WEEK="Last 7 Days ",LAST_MONTH="Last 30 Days",ranges={},filtersAddMenu=[],countryFilterObject=filterGeneratorService.getFilterByFilterKey(filterGeneratorConst.COUNTRIES);ranges[LAST_DAY]=[moment().subtract(1,"days"),moment()],ranges[LAST_WEEK]=[moment().subtract(7,"days"),moment()],ranges[LAST_MONTH]=[moment().subtract(30,"days"),moment()],scope.datePicker={overlay:{show:!0,val:LAST_DAY},options:{timePicker:!0,timePickerIncrement:30,ranges:ranges},date:{startDate:ranges[LAST_DAY][0],endDate:ranges[LAST_DAY][1]}},scope.constants={country:countryFilterObject.name},scope.filters=[],scope.actions={showMenu:showMenu,addFilter:addFilter,removeShownFilter:removeShownFilter,hideMenu:hideMenu,refreshFilter:refreshFilter},scope.handlers={filterChange:filterChange,overlayClickHandler:overlayClickHandler,daterangepickerBlur:daterangepickerBlur},scope.addFilterMenu={show:!1,filters:getFiltersToAdd},init()}var directive={require:"ngModel",restrict:"E",scope:{ngModel:"=",domain:"="},templateUrl:"parts/shared/filter-generator/filter-generator.html",link:{post:link}};return directive}angular.module("revapm.Portal.Shared").directive("filterGenerator",filterGenerator),filterGenerator.$inject=["filterGeneratorService","filterGeneratorConst"]}(angular,moment,_),function(angular){"use strict";function filterGeneratorService($rootScope,$config,filterGeneratorConst,Countries,Stats){function broadcastFilterChangeEvent(values){$rootScope.$emit($config.EVENTS.FILTER_CHANGED,{data:values})}function subscribeOnFilterChangeEvent($scope,callback){var event=$rootScope.$on($config.EVENTS.FILTER_CHANGED,callback);$scope.$on("$destroy",function(){event()})}function getFilterByFilterKey(filterKey){var filters={};return filters[filterGeneratorConst.COUNTRIES]={name:"Country",allTitle:"Countries",vals:Countries.query(),key:"country"},filters[filterGeneratorConst.OS]={name:"OS",allTitle:"OS",get:getOs,vals:[],key:"os"},filters[filterGeneratorConst.DEVICES]={name:"Device",allTitle:"Devices",get:getDevices,vals:[],key:"device"},filters[filterKey]}function getDevices(domainId){return Stats.device({domainId:domainId}).$promise.then(defaultResponseHandler)}function getOs(domainId){return Stats.os({domainId:domainId}).$promise.then(defaultResponseHandler)}function getProtocol(domainId){return Stats.protocol({domainId:domainId}).$promise.then(function(data){var formattedData={labels:[],data:[]};return data.data&&data.data.length>0&&_.forEach(data.data,function(os){var protocol="Unknows";80===os.key&&(protocol="HTTP"),443===os.key&&(protocol="HTTPS"),formattedData.labels.push(protocol),formattedData.data.push(os.count)}),formattedData})}function getHttpMethod(domainId){return Stats.httpMethod({domainId:domainId}).$promise.then(defaultResponseHandler)}function getHttpProtocol(domainId){return Stats.httpProtocol({domainId:domainId}).$promise.then(defaultResponseHandler)}function getCountry(domainId){return Stats.country({domainId:domainId}).$promise.then(defaultResponseHandler)}function defaultResponseHandler(response){var formattedData={labels:[],data:[]};return response.data&&response.data.length>0&&_.forEach(response.data,function(data){formattedData.labels.push(data.key),formattedData.data.push(data.count)}),formattedData}var api={broadcastFilterChangeEvent:broadcastFilterChangeEvent,subscribeOnFilterChangeEvent:subscribeOnFilterChangeEvent,getFilterByFilterKey:getFilterByFilterKey,getDevices:getDevices,getOs:getOs,getProtocol:getProtocol,getHttpMethod:getHttpMethod,getHttpProtocol:getHttpProtocol,getCountry:getCountry};return api}angular.module("revapm.Portal.Shared").service("filterGeneratorService",filterGeneratorService),filterGeneratorService.$inject=["$rootScope","$config","filterGeneratorConst","Countries","Stats"]}(angular),function(angular,_){"use strict";angular.module("revapm.Portal.Shared").directive("search",["$location","$localStorage","$state","$rootScope","DomainsConfig","Companies","Users","User","Apps","DashboardSrv","ApiKeys",function($location,$localStorage,$state,$rootScope,DomainsConfig,Companies,Users,User,Apps,DashboardSrv,ApiKeys){return{restrict:"AE",templateUrl:"parts/shared/search/search.html",scope:{},link:function(scope){function init(){scope.list=[],scope.list.length=0,DomainsConfig.query().$promise.then(function(data){data.forEach(function(item){item.searchType="domain",item.domain_name+=" ",scope.list.push(item)})}),Companies.query().$promise.then(function(data){data.forEach(function(item){item.searchType="company",item.companyName+=" ",scope.list.push(item)})}),Users.query().$promise.then(function(data){data.forEach(function(item){item.searchType="user",scope.list.push(item)})}),Apps.query().$promise.then(function(data){data.forEach(function(item){item.searchType="app",item.app_name+=" ",scope.list.push(item)})}),ApiKeys.query().$promise.then(function(data){data.forEach(function(item){item.searchType="apiKey",item.key_name+=" ",scope.list.push(item)})}),DashboardSrv.getAll().then(function(data){data.forEach(function(item){item.searchType="dashboard",item.title+=" ",scope.list.push(item)})})}function selectDomain(domain){$localStorage.selectedDomain=domain}function selectApp(app){var newApp={app_id:app.id,id:app.id,app_name:app.app_name,sdk_key:app.sdk_key};$localStorage.selectedApplication=newApp}function selectAccount(account){$localStorage.selectedAccount={acc_name:account.companyName,acc_id:account.id}}scope.list=[],scope.searchTerm=$rootScope.searchTerm,User.isAuthed()&&init(),scope.getFilteredList=function(term){scope.searchTerm=term,$rootScope.searchTerm=term;var results=[];term=(term||"").toLowerCase();var list=angular.copy(scope.list);return list.forEach(function(item){switch(item.searchType){case"domain":if((item.domain_name||"").toLowerCase().indexOf(term)>=0){item.searchBarText=item.domain_name+" (Edit Domain)",item.searchDisplayText=item.domain_name,item.searchAction="edit",results.push(item);var copy=angular.copy(item);copy.searchBarText=copy.domain_name+" (Web Analytics)",copy.searchAction="analytics",results.push(copy);var purgeCopy=angular.copy(item);purgeCopy.searchBarText=purgeCopy.domain_name+" (Purge Cache)",purgeCopy.searchAction="purge",results.push(purgeCopy)}break;case"company":if((item.companyName||"").toLowerCase().indexOf(term)>=0){item.searchBarText=item.companyName+" (Edit Account)",item.searchDisplayText=item.companyName,item.searchAction="edit",results.push(item);var companyCopy=angular.copy(item);companyCopy.searchBarText=companyCopy.companyName+" (Usage Report)",companyCopy.searchAction="usage",results.push(companyCopy)}break;case"user":var fullName=item.firstname+" "+item.lastname,searchString=fullName+" "+item.email;(searchString||"").toLowerCase().indexOf(term)>=0&&(item.searchBarText=fullName+" (Edit User)",item.searchDisplayText=fullName,item.searchAction="edit",results.push(item));break;case"app":if((item.app_name||"").toLowerCase().indexOf(term)>=0){item.searchBarText=item.app_name+" (Edit App)",item.searchDisplayText=item.app_name,item.searchAction="edit",results.push(item);var appCopy=angular.copy(item);appCopy.searchBarText=appCopy.app_name+" (Mobile Analytics)",appCopy.searchAction="analytics",results.push(appCopy)}break;case"apiKey":(item.key_name||"").toLowerCase().indexOf(term)>=0&&(item.searchBarText=item.key_name+" (Edit API Key)",item.searchDisplayText=item.key_name,item.searchAction="edit",results.push(item));break;case"dashboard":(item.title||"").toLowerCase().indexOf(term)>=0&&(item.searchBarText=item.title+" (Dashboard)",item.searchDisplayText=item.title,item.searchAction="edit",results.push(item))}}),results},scope.searchItemSelected=function(item){switch(item.searchBarText=item.searchDisplayText.trim(),scope.searchTerm=item.searchBarText,$rootScope.searchTerm=item.searchBarText,item.searchType){case"domain":"edit"===item.searchAction?$location.path("domains/edit/"+item.id):"analytics"===item.searchAction?(selectDomain(item),-1!==$location.path().indexOf("reports/proxy")?$state.reload():$location.path("reports/proxy")):"purge"===item.searchAction&&(selectDomain(item),-1!==$location.path().indexOf("cache/purge")?$state.reload():$location.path("cache/purge"));break;case"company":"edit"===item.searchAction?$location.path("companies/edit/"+item.id):"usage"===item.searchAction&&(selectAccount(item),"/usage"===$location.path()?$state.reload():$location.path("usage"));break;case"user":"edit"===item.searchAction&&$location.path("users/edit/"+item.user_id);break;case"app":if("edit"===item.searchAction){var path="apps/"+item.app_platform.toLowerCase()+"/edit/"+item.id;$location.path(path)}else"analytics"===item.searchAction&&(selectApp(item),-1!==$location.path().indexOf("mobile/traffic")?$state.reload():$location.path("mobile/traffic"));break;case"apiKey":"edit"===item.searchAction&&$location.path("keys/edit/"+item.id);break;case"dashboard":"edit"===item.searchAction&&$location.path("dashboard/"+item.id)}},scope.clearSearchBar=function(){scope.searchTerm="",$rootScope.searchTerm=""},scope.showClear=function(){return($rootScope.searchTerm||"").trim().length},scope.$on("update:searchData",function(){init()})}}}])}(angular,_),function(){"use strict";angular.module("revapm.Portal.Resources",["ngResource","revapm.Portal.Shared","revapm.Portal.Config"])}(),function(){"use strict";function ResourceConfig($httpProvider){$httpProvider.interceptors.push("revAPIHttpInterceptor")}ResourceConfig.$inject=["$httpProvider"],angular.module("revapm.Portal.Resources").config(ResourceConfig)}(),function(){"use strict";function ResourceFactory($resource){return function(url,params,methods){var defaults={update:{method:"PUT",isArray:!1},create:{method:"POST"}};methods=angular.extend(defaults,methods);var resource=$resource(url,params,methods);return resource.prototype.$save=function(){return this.id?this.$update():this.$create()},resource}}ResourceFactory.$inject=["$resource"],angular.module("revapm.Portal.Resources").factory("Resource",ResourceFactory)}(),function(){"use strict";function CompaniesResource(Resource,$config){return Resource($config.API_URL+"/accounts/:id",{id:"@id",statement:"@statement",billing_handle:"@billing_handle"},{createBillingProfile:{url:$config.API_URL+"/accounts/:id/billing_profile",method:"POST"},statements:{url:$config.API_URL+"/accounts/:id/statements",method:"GET",isArray:!0},statement:{url:$config.API_URL+"/accounts/:id/statements/:statement",method:"GET",isArray:!1},getPdfStatement:{url:$config.API_URL+"/accounts/:id/statements/:statement/pdf",method:"GET",headers:{accept:"application/pdf"},responseType:"arraybuffer",cache:!1,transformResponse:function(data){var pdf;return data&&(pdf=new Blob([data],{type:"application/pdf"})),{response:pdf}}},transactions:{url:$config.API_URL+"/accounts/:id/transactions",method:"GET",isArray:!0},subscriptionPreview:{url:$config.API_URL+"/accounts/:id/subscription_preview/:billing_handle",method:"GET",isArray:!1},subscriptionSummary:{url:$config.API_URL+"/accounts/:id/subscription_summary",method:"GET",isArray:!1}})}CompaniesResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("Companies",CompaniesResource)}(),function(){"use strict";function DomainsResource(Resource,$config){return Resource($config.API_URL+"/domain_configs/:id",{id:"@id"},{status:{url:$config.API_URL+"/domain_configs/:id/config_status",method:"GET",isArray:!1},versions:{url:$config.API_URL+"/domain_configs/:id/versions",method:"GET",isArray:!0}})}DomainsResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("DomainsConfig",DomainsResource)}(),function(){"use strict";function UsersResource(Resource,$config){return Resource($config.API_URL+"/users/:id",{id:"@user_id",token:"@token",email:"@email"},{myself:{url:$config.API_URL+"/users/myself",method:"GET"},signup:{url:$config.API_URL+"/signup",method:"POST"},signupShort:{url:$config.API_URL+"/signup2",method:"POST"},verify:{url:$config.API_URL+"/signup/verify/:token",method:"GET"},resend:{url:$config.API_URL+"/signup/resend/:email",method:"GET"}})}UsersResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("Users",UsersResource)}(),function(){"use strict";function CacheResource(Resource,$config){return Resource($config.API_URL+"/purge/:requestId",{requestId:""},{purge:{method:"POST",isArray:!1},status:{method:"GET",isArray:!1}})}CacheResource.$inject=["Resource","$config"],
angular.module("revapm.Portal.Resources").factory("Cache",CacheResource)}(),function(){"use strict";function StatsResource(Resource,$config){return Resource($config.API_URL+"/stats/:domainId",{},{os:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"os",count:10}},device:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"device",count:10}},country:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"country",count:10}},protocol:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"protocol"}},httpProtocol:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"http_protocol"}},httpMethod:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"http_method"}},statusCode:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"status_code"}},contentType:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"content_type"}},cacheStatus:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"cache_status"}},requestStatus:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"request_status"}},quic:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"QUIC"}},http2:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"http2"}},top5xx:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"top5xx"}},traffic:{method:"GET"},referer:{url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"referer"}},topObjects:{method:"GET",url:$config.API_URL+"/stats/top_objects/:domainId",params:{}},lm_rtt_country:{method:"GET",url:$config.API_URL+"/stats/lastmile_rtt/:domainId",params:{report_type:"country",count:10}},gbt_country:{method:"GET",url:$config.API_URL+"/stats/gbt/:domainId",params:{report_type:"country",count:10}},fbt_average:{method:"GET",url:$config.API_URL+"/stats/fbt/average/:domainId",params:{}},fbt_distribution:{method:"GET",url:$config.API_URL+"/stats/fbt/distribution/:domainId",params:{}},fbt_heatmap:{method:"GET",url:$config.API_URL+"/stats/fbt/heatmap/:domainId",params:{}},sdk_dirs:{method:"GET",url:$config.API_URL+"/stats/sdk/dirs",params:{}},sdk_flow:{method:"GET",url:$config.API_URL+"/stats/sdk/flow",params:{}},sdk_agg_flow:{method:"GET",url:$config.API_URL+"/stats/sdk/agg_flow",params:{}},sdk_top_hits:{method:"GET",url:$config.API_URL+"/stats/sdk/top_requests",params:{}},sdk_top_users:{method:"GET",url:$config.API_URL+"/stats/sdk/top_users",params:{}},sdk_top_gbt:{method:"GET",url:$config.API_URL+"/stats/sdk/top_gbt",params:{}},sdk_distributions:{method:"GET",url:$config.API_URL+"/stats/sdk/distributions",params:{}},sdk_top_objects:{method:"GET",url:$config.API_URL+"/stats/sdk/top_objects",params:{}},sdk_top_objects_time:{method:"GET",url:$config.API_URL+"/stats/sdk/top_objects/slowest",params:{}},sdk_top_objects_5xx:{method:"GET",url:$config.API_URL+"/stats/sdk/top_objects/5xx",params:{}},sdk_ab_fbt:{method:"GET",url:$config.API_URL+"/stats/sdk/ab/fbt",params:{}},sdk_ab_fbt_distribution:{method:"GET",url:$config.API_URL+"/stats/sdk/ab/fbt_distribution",params:{}},sdk_ab_errors:{method:"GET",url:$config.API_URL+"/stats/sdk/ab/errors",params:{}},sdk_ab_speed:{method:"GET",url:$config.API_URL+"/stats/sdk/ab/speed",params:{}},usage_web:{method:"GET",url:$config.API_URL+"/usage_reports/web",params:{only_overall:!0,keep_samples:!1}}})}StatsResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("Stats",StatsResource)}(),function(){"use strict";function CountriesResource(Resource,$config){return Resource($config.API_URL+"/countries/list",{},{query:{isArray:!1}})}function CountriesService($q,$http,$config){var deffer=$q.defer(),refCountries=$q.defer();return{query:function(){if(refCountries.isLoad!==!0){$http.get($config.API_URL+"/countries/list").then(function(data){angular.extend(refCountries,data.data),refCountries.isLoad=!0,refCountries.resolve(refCountries)},function(err){deffer.reject(err)})}else refCountries.resolve(refCountries);return refCountries.promise}}}CountriesResource.$inject=["Resource","$config"],CountriesService.$inject=["$q","$http","$config"],angular.module("revapm.Portal.Resources").factory("Countries",CountriesResource)}(),function(){"use strict";function ActivityResource(Resource,$config){return Resource($config.API_URL+"/activity/:action",{action:""},{query:{method:"GET",isArray:!1},summary:{method:"GET",isArray:!1}})}ActivityResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("Activity",ActivityResource)}(),function(){"use strict";function TwoFactorAuthResource(Resource,$config){return Resource($config.API_URL+"/2fa/:action/:userId",{action:"",userId:""},{init:{method:"GET",isArray:!1,params:{action:"init"}},enable:{method:"POST",isArray:!1,params:{action:"enable"}},disable:{method:"POST",isArray:!1,params:{action:"disable"}}})}TwoFactorAuthResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("TwoFactorAuth",TwoFactorAuthResource)}(),function(){"use strict";function KeysResource(Resource,$config){return Resource($config.API_URL+"/api_keys/:id",{id:"@id"},{})}KeysResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("ApiKeys",KeysResource)}(),function(){"use strict";function LogShippingJobs(Resource,$config){return Resource($config.API_URL+"/log_shipping_jobs/:id",{id:"@id"},{status:{url:$config.API_URL+"/log_shipping_jobs/:id/status",method:"GET",isArray:!1}})}LogShippingJobs.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("LogShippingJobs",LogShippingJobs)}(),function(){"use strict";function SSL_certsResource(Resource,$config){return Resource($config.API_URL+"/ssl_certs/:id",{id:"@id"},{status:{url:$config.API_URL+"/ssl_certs/:id/config_status",method:"GET",isArray:!1}})}SSL_certsResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("SSL_certs",SSL_certsResource)}(),function(){"use strict";function SSL_conf_profiles(Resource,$config){return Resource($config.API_URL+"/ssl_conf_profiles",{},{})}SSL_conf_profiles.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("SSL_conf_profiles",SSL_conf_profiles)}(),function(){"use strict";function AppsResource(Resource,$config){return Resource($config.API_URL+"/apps/:id",{id:"@id"},{status:{url:$config.API_URL+"/apps/:id/config_status",method:"GET",isArray:!1},sdkReleases:{url:$config.API_URL+"/apps/sdk_releases",method:"GET"},versions:{url:$config.API_URL+"/apps/:id/versions",method:"GET",isArray:!0}})}AppsResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("Apps",AppsResource)}(),function(){"use strict";function authRun($http,$localStorage){$localStorage.Authorization&&($http.defaults.headers.common.Authorization=$localStorage.Authorization)}authRun.$inject=["$http","$localStorage"],angular.module("revapm.Portal.Auth",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","base64","ui.router"]).run(authRun)}(),function(){"use strict";function configure($httpProvider){}configure.$inject=["$httpProvider"],angular.module("revapm.Portal.Auth").config(configure)}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("login",{url:"/login",views:{layout:{controller:"LoginController",templateUrl:"parts/auth/login.html"}}}).state("index.restore",{url:"/password/reset/:token",views:{page:{controller:"PasswordRestoreController",templateUrl:"parts/auth/reset-password.html"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Auth").config(routesConfig)}(),function(){"use strict";function AuthRun($rootScope,$state){$rootScope.$on("unauthorized",function(){console.log("No logged in"),$state.go("login")}),$rootScope.$on("not.connected",function(){"login"!==$state.current.name&&$state.go("login")})}AuthRun.$inject=["$rootScope","$state"],angular.module("revapm.Portal.Auth").run(AuthRun)}(),function(){"use strict";function User($localStorage,$http,$config,$q,DomainsConfig){function clearAll(){localStorage&&localStorage.clear()}function getToken(){return $localStorage.Authorization||!1}function setToken(token){token&&($localStorage.Authorization=token)}function isAuthed(){var token=getToken();return!!token}function addAuthHeaderForAPI(token){$localStorage.Authorization="Bearer "+token,$http.defaults.headers.common.Authorization="Bearer "+token,$http.defaults.headers.common["Content-Type"]="application/json"}function clearAuthHeaderForAPI(){$localStorage.Authorization=void 0,delete $http.defaults.headers.common.Authorization}function _successGetUserMyself(data){if(!data||data.status!==$config.STATUS.OK)throw new Error(data.response);var res=data.data;if(res.role!==$config.ROLE.USER&&res.role!==$config.ROLE.ADMIN&&res.role!==$config.ROLE.RESELLER&&res.role!==$config.ROLE.REVADMIN)throw new Error("You do not have permission");return $localStorage.isLoggedIn=!0,$localStorage.isCAdmin=!0,$localStorage.user=res,domains=[],$localStorage.last_user_id!==res.user_id&&(apps=[],selectApplication(null),accounts=[],getUserAccounts(!1).then(function(res){selectAccount(res[0])}),$localStorage.last_user_id=res.user_id),data}function login(email,password,oneTimePassword){if(!email||!password)throw new Error("Please fill email and password");var authData={email:email,password:password};return oneTimePassword&&(authData.oneTimePassword=oneTimePassword),$http.post($config.API_URL+"/authenticate",authData).then(function(data){return data.status===$config.STATUS.OK?(setToken(data.data.token),addAuthHeaderForAPI(data.data.token),$http.get($config.API_URL+"/users/myself").then(_successGetUserMyself)):data})["catch"](function(err){return clearAuthHeaderForAPI(),$q.reject(err)})}function logout(){setToken(),$localStorage.user=void 0,clearAuthHeaderForAPI(),clearAll()}function getUser(){return $localStorage.user||null}function isAdmin(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.ADMIN)}function isReseller(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.RESELLER)}function isRevadmin(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.REVADMIN)}function isUser(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.USER)}function hasBillingPlan(){var account=getSelectedAccount();return Boolean(account.billing_plan)}function reloadUser(){return $http.get($config.API_URL+"/users/myself").then(function(data){if(!data||data.status!==$config.STATUS.OK)throw new Error(data.response);return $localStorage.user=data.data,data})}function forgotPassword(email){return $http.post($config.API_URL+"/forgot",{email:email}).then(function(data){if(data&&data.status!==$config.STATUS.OK)throw new Error(data.response);return data})}function resetPassword(token,password){return $http.post($config.API_URL+"/reset/"+token,{password:password}).then(function(data){if(data&&data.status!==$config.STATUS.OK)throw new Error(data.response);return data})}function updatePassword(currentPassword,newPassword){var user=getUser();if(!isAuthed()||!user.user_id)throw new Error("User not authentificated");return $http.put($config.API_URL+"/users/password/"+user.user_id,{current_password:currentPassword,new_password:newPassword}).then(function(data){if(data&&data.status!==$config.STATUS.OK)throw new Error(data.response);return login(user.email,newPassword).then(function(){return data})})}function getUserDomains(reload){return $q(function(resolve,reject){return domains&&domains.length>0&&!reload?resolve(domains):void DomainsConfig.query().$promise.then(function(data){domains=data,resolve(domains)})["catch"](function(err){domains=[],resolve(domains)})}.bind(this))}function selectDomain(domain){domainSelected=domain}function getSelectedDomain(){return domainSelected}function getUserApps(reload){return $q(function(resolve,reject){return apps.length>0&&!reload?resolve(apps):void $http.get($config.API_URL+"/apps").then(function(data){if(data&&data.status===$config.STATUS.OK){apps=data.data.map(function(item){return{app_name:item.app_name,app_id:item.id,id:item.id,sdk_key:item.sdk_key}}).sort(function(lhs,rhs){return lhs.app_name.localeCompare(rhs.app_name)});var user=getUser();apps.length&&user&&user.companyId[0]&&apps.unshift({app_id:"",app_name:"All Applications"}),resolve(apps)}else reject(new Error(data.response))})})}function selectApplication(app){$localStorage.selectedApplication=app,appSelected=app}function getSelectedApplication(){return $localStorage.selectedApplication||appSelected}function getUserAccounts(reload){return $q(function(resolve,reject){return accounts.length>0&&!reload?resolve(accounts):void $http.get($config.API_URL+"/accounts").then(function(data){if(data&&data.status===$config.STATUS.OK){accounts=data.data.map(function(item){return{acc_name:item.companyName,acc_id:item.id,plan_id:item.billing_plan,billing_plan:item.billing_plan}}).sort(function(lhs,rhs){return lhs.acc_name.localeCompare(rhs.acc_name)});var user=getUser();accounts.length>1&&user&&accounts.unshift({acc_id:"",acc_name:"All Accounts"}),resolve(accounts)}else reject(new Error(data.response))})["catch"](function(err){console.log(err)})})}function selectAccount(acc){$localStorage.selectedAccount=acc,accSelected=acc}function getSelectedAccount(){return accSelected||$localStorage.selectedAccount}function updateToken(token){var def=$q.defer();return token?(setToken(token),addAuthHeaderForAPI(token),$http.get($config.API_URL+"/users/myself").then(_successGetUserMyself).then(function(data){def.resolve(data)})):def.reject({message:"Token not correct"}),def.promise}function deleteAccountProfile(account_id,data){var def=$q.defer(),config={method:"DELETE",url:$config.API_URL+"/accounts/"+account_id,data:data,headers:{"Content-Type":"application/json;charset=utf-8"}};return $http(config).then(function(data){logout(),def.resolve(data)},def.reject),def.promise}var domains=[],domainSelected=null,apps=[],appSelected=null,accounts=[],accSelected=null;return{getToken:getToken,setToken:setToken,updateToken:updateToken,isAuthed:isAuthed,login:login,logout:logout,getUser:getUser,isAdmin:isAdmin,isReseller:isReseller,isRevadmin:isRevadmin,isUser:isUser,reloadUser:reloadUser,forgotPassword:forgotPassword,resetPassword:resetPassword,updatePassword:updatePassword,getUserDomains:getUserDomains,selectDomain:selectDomain,getSelectedDomain:getSelectedDomain,getUserApps:getUserApps,selectApplication:selectApplication,getSelectedApplication:getSelectedApplication,getUserAccounts:getUserAccounts,selectAccount:selectAccount,getSelectedAccount:getSelectedAccount,hasBillingPlan:hasBillingPlan,deleteAccountProfile:deleteAccountProfile}}User.$inject=["$localStorage","$http","$config","$q","DomainsConfig"],angular.module("revapm.Portal.Auth").factory("User",User)}(),function(){"use strict";function selectAccountDomain(User,$rootScope,$config){return{restrict:"AE",templateUrl:"parts/auth/menu/select-account-domain.html",controller:["$scope",function($scope){$scope.domain=User.getSelectedDomain(),$scope._loading=!0,$scope.onDomainChange=function(){User.selectDomain($scope.domain),$rootScope.$broadcast($config.EVENTS.DOMAIN_CHANGED,{domain:$scope.domain})},User.getUserDomains().then(function(domains){$scope.domains=domains,$scope._loading=!1})}]}}selectAccountDomain.$inject=["User","$rootScope","$config"],angular.module("revapm.Portal.Auth").directive("selectAccountDomain",selectAccountDomain)}(),function(){"use strict";function disableTwoFactorAuthDirective(User,Users,TwoFactorAuth,AlertService,$uibModal){return{restrict:"AE",replace:!0,templateUrl:"parts/auth/2fa/disable-two-factor-auth.html",scope:{ngUserId:"="},controller:["$scope",function($scope){$scope._loading=!1,$scope.currentUser=User.getUser(),$scope.twoFactorAuthEnabled=!1,$scope.isMyUser=!1,$scope.loadUserDetails=function(){return $scope.isMyUser=!1,$scope.ngUserId?($scope.twoFactorAuthEnabled=!1,$scope._loading=!0,void Users.get({id:$scope.ngUserId}).$promise.then(function(data){$scope.twoFactorAuthEnabled=Boolean(data.two_factor_auth_enabled),$scope.isMyUser=Boolean($scope.ngUserId===data.user_id)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})):void console.log("You did not provide userId. User ng-user-id for directive !")},$scope._disable=function(oneTimePassword){if($scope.twoFactorAuthEnabled){if(!$scope.ngUserId)return void console.log("You did not provide userId. User ng-user-id for directive !");$scope._loading=!0;var data={};TwoFactorAuth.disable({userId:$scope.ngUserId},data).$promise.then(function(data){$scope.currentUser.user_id===$scope.ngUserId&&User.reloadUser(),AlertService.success(data.message),$scope.twoFactorAuthEnabled=!1})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})}},$scope.disable=function(){$scope.confirm().then($scope._disable)},$scope.confirm=function(){var modalInstance=$uibModal.open({animation:!0,templateUrl:"confirm2FaDisable.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:{model:{isMyUser:$scope.isMyUser,user:$scope.currentUser}}});return modalInstance.result},$scope.$watch("ngUserId",function(){$scope.ngUserId&&$scope.loadUserDetails()})}]}}disableTwoFactorAuthDirective.$inject=["User","Users","TwoFactorAuth","AlertService","$uibModal"],angular.module("revapm.Portal.Auth").directive("disableTwoFactorAuth",disableTwoFactorAuthDirective)}(),function(){"use strict";function PasswordRestoreController($scope,User,$stateParams,AlertService,$timeout,$state){$scope.alerts=AlertService,$scope.token=$stateParams.token,$scope.password="",$scope.passwordRepeat="",$scope.loading=!1,$scope.reset=function(){return AlertService.clear(),$scope.password&&$scope.passwordRepeat&&$scope.password===$scope.passwordRepeat?($scope.loading=!0,void User.resetPassword($scope.token,$scope.password).then(function(data){data.data&&data.data.message&&(AlertService.success(data.data.message,5e3),$timeout(function(){$state.go("login")},3e3))})["catch"](function(err){err.data&&err.data.message&&AlertService.danger(err.data.message,5e3)})["finally"](function(){$scope.loading=!1})):void AlertService.danger("Passwords did not match",5e3)}}PasswordRestoreController.$inject=["$scope","User","$stateParams","AlertService","$timeout","$state"],angular.module("revapm.Portal.Auth").controller("PasswordRestoreController",PasswordRestoreController)}(),function(){"use strict";function resendRegistrationEmailController($scope,$uibModalInstance,User,Users,AlertService,auth){$scope.data=auth,$scope.data.loading=!1,$scope.close=function(){$scope.data.loading=!1,$uibModalInstance.dismiss()},$scope.onResendEmail=function(){$scope.data.email?($scope.data.loading=!0,Users.resend({email:$scope.data.email}).$promise.then(function(data){data&&data.message&&(AlertService.success(data.message,6e3),$uibModalInstance.close(data.message))},function(err){AlertService.danger(err.data.message)})["catch"](function(err){AlertService.danger(err.data.message)})["finally"](function(){$scope.data.loading=!1})):AlertService.danger("Wrong email address")}}resendRegistrationEmailController.$inject=["$scope","$uibModalInstance","User","Users","AlertService","auth"],angular.module("revapm.Portal.Auth").controller("resendRegistrationEmailController",resendRegistrationEmailController)}(),function(){"use strict";function ForgotPasswordController($scope,$uibModalInstance,$config,$uibModal,User,AlertService){$scope.data={email:"",loading:!1},$scope.close=function(){$scope.data.loading=!1,$uibModalInstance.dismiss()},$scope.forgot=function(){$scope.data.email?($scope.data.loading=!0,User.forgotPassword($scope.data.email).then(function(data){data&&data.data&&data.data.message&&$uibModalInstance.close(data.data.message)})["catch"](function(err){err.status===$config.STATUS.SUBSCRIPTION_REQUIRED?$scope.resendRegistrationEmail($scope.data.email):AlertService.danger(err.data.message)})["finally"](function(){$scope.data.loading=!1})):AlertService.danger("Wrong email address")},$scope.resendRegistrationEmail=function(email,password){var modalInstance=$uibModal.open({templateUrl:"parts/auth/resend-subscription-info.html",controller:"resendRegistrationEmailController",size:"md",resolve:{auth:function(){return{email:email,password:password}}}});modalInstance.result.then(function(data){$uibModalInstance.close()})}}ForgotPasswordController.$inject=["$scope","$uibModalInstance","$config","$uibModal","User","AlertService"],angular.module("revapm.Portal.Auth").controller("ForgotPasswordController",ForgotPasswordController)}(),function(){"use strict";function TwoFactorAuthCodeModalController($scope,$uibModalInstance,auth,User,AlertService,$config){$scope.data={code:"",loading:!1},$scope.close=function(){$scope.data.loading=!1,$uibModalInstance.dismiss()},$scope.login=function(){if(!$scope.data.code)return void AlertService.danger("Please enter One Time Password",3e3);AlertService.clear(),$scope.data.loading=!0;try{User.login(auth.email,auth.password,$scope.data.code).then(function(data){$uibModalInstance.close(data)})["catch"](function(err){err.status===$config.STATUS.UNAUTHORIZED&&AlertService.danger("Wrong one Time Password",5e3),err.data.message&&AlertService.danger(err.data.message,5e3)})["finally"](function(){$scope.data.loading=!1})}catch(e){AlertService.danger(e.message),$scope.data.loading=!1}}}TwoFactorAuthCodeModalController.$inject=["$scope","$uibModalInstance","auth","User","AlertService","$config"],angular.module("revapm.Portal.Auth").controller("TwoFactorAuthCodeModalController",TwoFactorAuthCodeModalController)}(),function(){"use strict";function LoginController($scope,User,$state,AlertService,DashboardSrv,$config,$uibModal,$location){document.querySelector("body").style.paddingTop="0",$scope._loading=!1,$scope.style={height:document.documentElement.clientHeight+"px"};var images=["images/bg/bay_bridge.jpg","images/bg/burney_falls.jpg","images/bg/golden_gate.jpg","images/bg/mirror_lake.jpg","images/bg/painted_ladies.jpg","images/bg/tunnel_view.jpg","images/bg/twin_peaks.jpg","images/bg/yosemite_hill.jpg","images/bg/yosemite_valley.jpg"];$scope.randomImage=images[Math.floor(Math.random()*images.length)],$scope.randomImageStyle={"background-image":"url("+$scope.randomImage+")"},$scope.login=function(email,pass){AlertService.clear(),$scope._loading=!0;try{User.login(email,pass).then(function(data){DashboardSrv.getAll().then(function(dashboards){dashboards&&dashboards.length?$location.path("dashboard/"+dashboards[0].id):$state.go("index.reports.proxy")})})["catch"](function(err){!err.status,err.status===$config.STATUS.TWO_FACTOR_AUTH_REQUIRED&&$scope.enter2faCode(email,pass),err.status===$config.STATUS.SUBSCRIPTION_REQUIRED&&$scope.resendRegistrationEmail(email,pass),err.status===$config.STATUS.UNAUTHORIZED&&AlertService.danger("Wrong username or password",5e3),err.data?err.data.message&&err.status!==$config.STATUS.SUBSCRIPTION_REQUIRED&&AlertService.danger(err.data.message,5e3):AlertService.danger("Something get wrong",5e3)})["finally"](function(){$scope._loading=!1})}catch(e){AlertService.danger(e.message),$scope._loading=!1}},localStorage&&localStorage.email&&localStorage.password&&$scope.login(localStorage.email,localStorage.password),$scope.enter2faCode=function(email,password){var modalInstance=$uibModal.open({templateUrl:"parts/auth/two-factor-auth-code.html",controller:"TwoFactorAuthCodeModalController",size:"md",resolve:{auth:function(){return{email:email,password:password}}}});modalInstance.result.then(function(data){$state.go("index")})},$scope.forgotPassword=function(){var modalInstance=$uibModal.open({templateUrl:"parts/auth/forgot-password.html",controller:"ForgotPasswordController",size:"md"});modalInstance.result.then(function(message){message&&AlertService.success(message,5e3)})},$scope.resendRegistrationEmail=function(email,password){var modalInstance=$uibModal.open({templateUrl:"parts/auth/resend-subscription-info.html",controller:"resendRegistrationEmailController",size:"md",resolve:{auth:function(){return{email:email,password:password}}}});modalInstance.result.then(function(data){})}}LoginController.$inject=["$scope","User","$state","AlertService","DashboardSrv","$config","$uibModal","$location"],angular.module("revapm.Portal.Auth").controller("LoginController",LoginController)}(),function(){"use strict";function userLoginLogoutDirective(User,$state){return{restrict:"AE",replace:!0,templateUrl:"parts/auth/block/user-login-logout.html",scope:{},link:function($scope){$scope.isAuthorized=User.isAuthed(),$scope.user=User.getUser(),$scope.logout=function(){User.logout(),$state.go("login")},$scope.$watch(User.getUser,function(newVal,oldVal){$scope.user=newVal})}}}userLoginLogoutDirective.$inject=["User","$state"],angular.module("revapm.Portal.Auth").directive("userLoginLogout",userLoginLogoutDirective)}(),function(){"use strict";angular.module("revapm.Portal.Signup",["ngStorage","revapm.Portal.Auth","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","base64","ui.router"])}(),function(){"use strict";function SignupBillingPlansController($scope,Users,AlertService,$stateParams,$localStorage,Countries,$uibModal){"ngInject";var billing_plan_handler=$stateParams.billing_plan_handler,$ctrl=this;this.isRegistryFinish=!1,this.countries=Countries.query(),this.model={billing_plan:billing_plan_handler,country:"US"},this.onSignUp=function(model){if(this._loading=!0,model){if(model.passwordConfirm!==model.password)return void AlertService.danger("Passwords did not match",5e3);$scope.userData=_.clone(model),AlertService.clear(),Users.signup(model).$promise.then(function(data){$ctrl.user=model,$ctrl.isRegistryFinish=!0})["catch"](function(err){AlertService.danger(err,5e3)})}},this.onSignUpShort=function(model){this._loading=!0,model&&($scope.userData=_.clone(model),AlertService.clear(),Users.signupShort(model).$promise.then(function(data){$ctrl.user=model,$ctrl.isRegistryFinish=!0})["catch"](function(err){AlertService.danger(err,5e3)}))},this.onRepeatSendRegistrationEmail=function(email,password){var modalInstance=$uibModal.open({templateUrl:"parts/auth/resend-subscription-info.html",controller:"resendRegistrationEmailController",size:"md",resolve:{auth:function(){return{email:email,password:password}}}});modalInstance.result.then(function(data){})},this._loading=!1}SignupBillingPlansController.$inject=["$scope","Users","AlertService","$stateParams","$localStorage","Countries","$uibModal"],angular.module("revapm.Portal.Signup").controller("SignupBillingPlansController",SignupBillingPlansController)}(),function(){"use strict";function SignupController($scope,Users,$localStorage,User,Companies,BillingPlans,CRUDController,Countries,$state,AlertService,$injector){$injector.invoke(CRUDController,this,{$scope:$scope}),$scope.$on("$stateChangeSuccess",function(state){$state.is("signup")&&($scope.model=_.clone(User.getUser()),$scope.model.country="US")}),$scope.chooseBillingPlan=function(bp){$state.go("signup.contact_info",{billing_plan_handler:bp.chargify_handle})},$scope.initBillingPlans=function(){$scope.newUser={},$scope.setResource(BillingPlans),$scope.list()},$scope.initLoginRedirect=function(){setTimeout(function(){$state.go("login")},1e4)},$scope.countries=Countries.query(),$scope.getQueryString=function(model){var q="?first_name="+encodeURIComponent(model.firstname?model.firstname:"")+"&last_name="+encodeURIComponent(model.lastname?model.lastname:"")+"&email="+encodeURIComponent(model.email?model.email:"")+"&phone="+encodeURIComponent(model.phone_number?model.phone_number:"")+"&reference="+encodeURIComponent(model.user_id?model.user_id:"")+"&organization="+encodeURIComponent(model.companyName?model.companyName:"")+"&billing_address="+encodeURIComponent(model.address1?model.address1:"")+"&billing_address_2="+encodeURIComponent(model.address2?model.address2:"")+"&billing_city="+encodeURIComponent(model.city?model.city:"")+"&billing_zip="+encodeURIComponent(model.zipcode?model.zipcode:"")+"&billing_country="+encodeURIComponent(model.country?model.country:"");$scope.query=q},$scope.zipRegex="[0-9]{1,10}",$scope.phoneRegex="[0-9, \\s, \\+, \\-, \\(, \\)]{1,20}",$scope.createUser=function(model){if(model){if(model.passwordConfirm!==model.password)return void $scope.alertService.danger("Passwords did not match",5e3);$scope.userData=_.clone(model),$scope.alertService.clear(),Users.signup(model).$promise.then(function(data){$localStorage.user.email=model.email,$state.go("email_sent")})["catch"](function(err){model.passwordConfirm=model.password,console.log(err),AlertService.danger(err,5e3)})}},$scope._loading=!1}SignupController.$inject=["$scope","Users","$localStorage","User","Companies","BillingPlans","CRUDController","Countries","$state","AlertService","$injector"],angular.module("revapm.Portal.Signup").controller("SignupController",SignupController)}(),function(){"use strict";function VerifyController($scope,Users,User,$stateParams,$state,AlertService,$localStorage,$timeout,$window){var $ctrl=this;$scope.user=User.getUser(),$scope.resendToken=function(model){Users.resend({email:model.email}).$promise.then(function(){AlertService.success("Verification link is sent to "+model.email,5e3)})["catch"](AlertService.danger)},$ctrl.redirectToIndex=function(){$scope.steps="verify-token-success",$timeout(function(){$state.go("index")},5e3)},$stateParams.token&&($scope.steps="verify-token",Users.verify({token:$stateParams.token}).$promise.then(function(res){return $localStorage.user={email:res.email},AlertService.success("Verification was successful",5e3),User.updateToken(res.token).then(User.reloadUser).then(function(){},function(err){AlertService.danger(err.message)})["finally"]($ctrl.redirectToIndex)})["catch"](function(err){$timeout(function(){$scope.steps="verify-token-error"},3e3)}))}VerifyController.$inject=["$scope","Users","User","$stateParams","$state","AlertService","$localStorage","$timeout","$window"],angular.module("revapm.Portal.Signup").controller("VerifyController",VerifyController)}(),function(){"use strict";function routesConfig($stateProvider,$urlRouterProvider,$config){$urlRouterProvider.when("/signup","/signup/plans"),$config.ENABLE_SIMPLIFIED_SIGNUP_PROCESS===!0?$urlRouterProvider.when("/signup/to/:billing_plan_handler","/signup/:billing_plan_handler"):$urlRouterProvider.when("/signup/:billing_plan_handler","/signup/to/:billing_plan_handler"),$stateProvider.state("signup",{"abstract":!1,url:"/signup",views:{layout:{templateUrl:"parts/signup/signup.html"}}}).state("signup.billing_plans",{url:"/plans",views:{form:{controller:"SignupController",templateUrl:"parts/signup/form-billing-plans.tpl.html"}}}).state("signup.contact_info",{url:"/to/:billing_plan_handler",views:{form:{controller:"SignupBillingPlansController",controllerAs:"$ctrl",templateUrl:"parts/signup/form-contact-info.tpl.html"}}}).state("signup.contact_info2",{url:"/:billing_plan_handler",views:{form:{controller:"SignupBillingPlansController",controllerAs:"$ctrl",templateUrl:"parts/signup/form-short-signup.tpl.html"}}}).state("success",{url:"/signup/success",views:{layout:{controller:"SignupController",templateUrl:"parts/signup/end.html"}}}).state("email_sent",{url:"/signup/email",views:{layout:{controller:"VerifyController",templateUrl:"parts/signup/email_sent.html"}}}).state("verify",{url:"/profile/verify/:token",views:{layout:{controller:"VerifyController",templateUrl:"parts/signup/verify.html"}}}).state("resend_token",{url:"/profile/verify/resend_token",views:{layout:{controller:"VerifyController",templateUrl:"parts/signup/resend.html"}}})}routesConfig.$inject=["$stateProvider","$urlRouterProvider","$config"],angular.module("revapm.Portal.Signup").config(routesConfig)}(),function(){
"use strict";function BillingPlansResource(Resource,$config){return Resource($config.API_URL+"/billing_plans/:id",{id:"@id"},{hosted_page:{url:$config.API_URL+"/billing_plans/:id/hosted_page",method:"GET"}})}BillingPlansResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("BillingPlans",BillingPlansResource)}(),function(){"use strict";angular.module("revapm.Portal.Profile",["ui.router","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","revapm.Portal.Companies","datatables","datatables.bootstrap","ngFileSaver"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.profile",{url:"/profile",views:{main:{controller:"ProfileEditController",templateUrl:"parts/profile/edit.html"}}}).state("index.accountSettings.company",{url:"/profile/company",views:{main:{controller:"CompanyProfileEditController",templateUrl:"parts/profile/edit-company.html"}}}).state("index.billing.plans",{url:"/profile/plans",views:{main:{controller:"BillingController",templateUrl:"parts/profile/billing.html"}}}).state("index.billing.statements",{url:"/profile/statements",views:{main:{controller:"StatementsController",templateUrl:"parts/profile/statements.html"}}}).state("index.billing.statement",{url:"/profile/statements/:id",views:{main:{controller:"StatementsController",templateUrl:"parts/profile/statement.html"}}}).state("index.accountSettings.activitylog",{url:"/activitylog",views:{main:{controller:"ActivityLogController",templateUrl:"parts/profile/activity-log.html"}}}).state("index.accountSettings.2fa",{url:"/2fa",views:{main:{controller:"TwoFactorAuthController",templateUrl:"parts/profile/two-factor-auth.html"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Profile").config(routesConfig)}(),function(angular){"use strict";angular.module("revapm.Portal.Profile").filter("firstUpper",function(){return function(input,scope){return input?input.substring(0,1).toUpperCase()+input.substring(1).toLowerCase():""}}).directive("subscriptionSummary",function(){return{restrict:"EA",replace:!0,scope:{subscription:"=ngModel"},templateUrl:"/parts/profile/directives/subscription-summary.tpl.html"}})}(angular),function(){"use strict";function ProfileEditController($scope,User,AlertService){$scope.user=User.getUser(),$scope.pass={current_password:"",new_password:"",confirm_password:""},$scope.clearPassword=function(){$scope.pass={current_password:"",new_password:"",confirm_password:""}},$scope.updatePassword=function(){return _.trim($scope.pass.current_password)&&_.trim($scope.pass.new_password)?$scope.pass.new_password!==$scope.pass.confirm_password?void AlertService.danger("Passwords did not match",5e3):User.updatePassword($scope.pass.current_password,$scope.pass.new_password).then(function(data){return $scope.clearPassword(),AlertService.success("Your password updated",5e3),data})["catch"](function(err){err.data&&err.data.message?AlertService.danger(err.data.message):AlertService.danger("Something goes wrong")}):void AlertService.danger("Please fill all fields. (New password should be at least 8 charecters length)",5e3)},$scope.updateProfile=function(user){$scope.updatePassword()},$scope.disableSubmit=function(pass){return $scope._loading||!pass.current_password||!pass.new_password||!pass.confirm_password}}ProfileEditController.$inject=["$scope","User","AlertService"],angular.module("revapm.Portal.Profile").controller("ProfileEditController",ProfileEditController)}(),function(){"use strict";function ActivityLogController($scope,CRUDController,Activity,$injector,$stateParams,ActivityPhrase,$uibModal){$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Activity),$scope.setState("index.accountSettings.companies"),$scope.list=function(){if(!$scope.resource)throw new Error("No resource provided.");return $scope.loading(!0),$scope.resource.query(function(data){return $scope.records=data.data,$scope.filterList(),$scope._checkPagination(),data}).$promise["finally"](function(){$scope.loading(!1)})},$scope.list(),$scope.getActivityType=function(val){return ActivityPhrase.ACTIVITY_TYPE&&ActivityPhrase.ACTIVITY_TYPE[val]?ActivityPhrase.ACTIVITY_TYPE[val]:"Unknown activity type: "+val},$scope.getActivityTarget=function(log){if(!ActivityPhrase.ACTIVITY_TARGET||!ActivityPhrase.ACTIVITY_TARGET[log.activity_target])return"Unknown activity target: "+log.activity_target;var target="";return log.target_name&&(target=" ("+log.target_name+")"),ActivityPhrase.ACTIVITY_TARGET[log.activity_target]+target},$scope.showDetails=function(log){var log2=angular.copy(log);log2.target_object=JSON.stringify(log2.target_object,null,"    "),log2.activity=$scope.getActivityType(log2.activity_type),log2.activity+=" "+$scope.getActivityTarget(log2);var modalInstance=$uibModal.open({animation:!0,templateUrl:"activityDetails.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:{model:log2}});return modalInstance.result},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()}}ActivityLogController.$inject=["$scope","CRUDController","Activity","$injector","$stateParams","ActivityPhrase","$uibModal"],angular.module("revapm.Portal.Profile").controller("ActivityLogController",ActivityLogController)}(),function(){"use strict";function TwoFactorAuthController($scope,User,TwoFactorAuth,AlertService,$uibModal){$scope._loading=!1,$scope.user=User.getUser(),$scope.twoFAEnabled=$scope.user&&$scope.user.two_factor_auth_enabled,$scope.qrImg="",$scope.asciiCode="",$scope.showDisable=!1,$scope.clearCodes=function(){$scope.qrImg="",$scope.asciiCode="",$scope.oneTimePassword="",$scope.hideDisablePart()},$scope.updateUserProfile=function(enabled){$scope.twoFAEnabled=enabled,$scope.clearCodes(),User.reloadUser()},$scope.init=function(){$scope._loading=!0,TwoFactorAuth.init().$promise.then(function(data){data.google_auth_qr&&($scope.qrImg=data.google_auth_qr),data.ascii&&($scope.asciiCode=data.ascii)})["catch"](function(err){AlertService.danger(err,5e3)})["finally"](function(){$scope._loading=!1})},$scope.enable=function(oneTimePassword){return oneTimePassword?($scope._loading=!0,void TwoFactorAuth.enable({oneTimePassword:oneTimePassword}).$promise.then(function(data){AlertService.success(data.message),$scope.updateUserProfile(!0)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})):(AlertService.danger("Please enter your One Time Password"),void angular.element("#one-time-password").focus())},$scope.showDisablePart=function(){$scope.showDisable=!0},$scope.hideDisablePart=function(){$scope.showDisable=!1},$scope._disable=function(){$scope._loading=!0,TwoFactorAuth.disable({userId:$scope.user.user_id},{}).$promise.then(function(data){AlertService.success(data.message),$scope.updateUserProfile(!1)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})},$scope.confirm=function(){var modalInstance=$uibModal.open({animation:!0,templateUrl:"confirm2FaDisable.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:{model:{isMyUser:$scope.isMyUser,user:$scope.currentUser}}});return modalInstance.result},$scope.disable=function(){$scope.confirm().then($scope._disable)}}TwoFactorAuthController.$inject=["$scope","User","TwoFactorAuth","AlertService","$uibModal"],angular.module("revapm.Portal.Profile").controller("TwoFactorAuthController",TwoFactorAuthController)}(),function(){"use strict";function CompanyProfileEditController($scope,$q,$timeout,User,BillingPlans,Apps,Companies,Countries,CRUDController,$injector,$state,$stateParams,AlertService){$scope.countries=Countries.query(),$scope.billing_plans=[{id:null,name:"Manual"}],BillingPlans.query().$promise.then(function(bp){angular.forEach(bp,function(item){$scope.billing_plans.push(item)})}),$scope.zipRegex="[0-9]{1,10}",$scope.phoneRegex="[0-9, \\s, \\+, \\-, \\(, \\)]{1,20}",$scope.user=User.getUser(),$scope.user.isAdmin=User.isAdmin(),$scope._disabled=$scope.user.access_control_list.readOnly?$scope.user.access_control_list.readOnly:!1,$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Companies),$scope.getCompany=function(id){$scope.get(id).then(function(){$scope.model.subscription_id?$scope.billing_plans.shift():$scope.billing_plans.selected=$scope.billing_plans[0]})["catch"](function(err){$scope.alertService.danger("Could not load company details")})},$scope.initEditCompany=function(){$stateParams.id?$scope.getCompany($stateParams.id):$scope.getCompany($scope.user.companyId)},$scope.updateCompany=function(company){$scope.confirm("confirmUpdateModal.html",company).then(function(){$scope._loading=!0,$scope.update({id:company.id},company).then(function(){AlertService.success("Successfully updated company profile")})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})})},$scope.createBillingProfile=function(company){$scope.confirm("confirmCreateBillingProfileModal.html",company).then(function(){$scope._loading=!0,$scope.update({id:company.id},company).then(function(data){return Companies.createBillingProfile({id:company.id},company).$promise}).then(function(account){$scope.model.billing_id=account.billing_id,AlertService.success("Successfully created billing profile")})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})})},$scope.deleteCompanyProfile=function(company){$scope._loading=!0,$q.all([User.getUserDomains(!0),Apps.query().$promise,BillingPlans.get({id:company.billing_plan}).$promise]).then(function(results){var _model={company:company,domains:results[0],apps:results[1],bp:results[2],isCanBeDeleted:0===results[0].length&&0===results[1].length};$scope.confirm("confirmDeleteModal.html",_model).then(function(data){$scope._loading=!0,User.deleteAccountProfile(company.id,{cancellation_message:_model.cancellation_message}).then(function(){AlertService.success("Successfully deleted account profile"),$timeout(function(){$state.go("index")},10)})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})})})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})},$scope.isCanDeleteCompanyProfile=function(){var model=$scope.model;return model.self_registered===!0&&model.billing_plan.length>0&&("trialing"===model.subscription_state||"trialing"!==model.subscription_state&&model.valid_payment_method_configured===!0)}}CompanyProfileEditController.$inject=["$scope","$q","$timeout","User","BillingPlans","Apps","Companies","Countries","CRUDController","$injector","$state","$stateParams","AlertService"],angular.module("revapm.Portal.Profile").controller("CompanyProfileEditController",CompanyProfileEditController)}(),function(){"use strict";function BillingController($scope,$state,User,Companies,BillingPlans,CRUDController,$injector,$stateParams,AlertService){$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.accounts=[],$scope.account=User.getSelectedAccount(),$scope.onAccountSelect=function(acc){$scope._loading=!0,User.selectAccount(acc),$scope.account=acc,$scope.account=User.getSelectedAccount(),$state.reload()},$scope.initBillingInfo=function(){User.getUserAccounts().then(function(accs){return $scope._loading=!0,$scope.accounts=accs.length>1?accs.slice(1):accs,$scope.account&&$scope.account.acc_id||($scope.account=$scope.accounts[0]),$scope.user=User.getUser(),$scope.setResource(BillingPlans),$scope.list()})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})},$scope.isSelectedPlan=function(id){return $scope.account.plan_id===id},$scope.chooseBillingPlan=function(plan,account){function CompaniesUpdate(){$scope._loading=!0,Companies.update({id:account.acc_id,billing_plan:plan.id,companyName:account.acc_name}).$promise.then(function(){User.getUserAccounts(!0).then(function(accs){AlertService.success("Successfully changed the billing plan",5e3),accs.forEach(function(acc){acc.acc_id===account.acc_id&&(User.selectAccount(acc),$scope.account=User.getSelectedAccount())})})})["catch"](function(err){var message="Oops! Something went wrong";err.data&&err.data.message&&(message=err.data.message),AlertService.danger(message)})["finally"](function(){$scope._loading=!1})}Companies.subscriptionPreview({id:account.acc_id,billing_handle:plan.chargify_handle}).$promise.then(function(data){$scope.confirm("confirmModalUpgrade.html",{plan:plan,migration:data.migration,credit_card:data.credit_card}).then(CompaniesUpdate)},function(){$scope.confirm("confirmModal.html",plan).then(CompaniesUpdate)})["catch"](function(err){var message="Oops! Something went wrong";err.data&&err.data.message&&(message=err.data.message),AlertService.danger(message),$scope._loading=!1})}}BillingController.$inject=["$scope","$state","User","Companies","BillingPlans","CRUDController","$injector","$stateParams","AlertService"],angular.module("revapm.Portal.Profile").controller("BillingController",BillingController).filter("AbsUnit",function(){return function(amount){return Math.abs(amount)}}).filter("MonetaryUnit",function(){return function(amount){return(amount/100).toFixed(2)}})}(),function(){"use strict";function StatementsController($scope,$state,FileSaver,User,Companies,DTOptionsBuilder,DTColumnDefBuilder,AlertService,$stateParams){$scope.params=$stateParams,$scope.user=User.getUser(),$scope._error=!1,$scope.account=User.getSelectedAccount();var pageLength=10;$scope.statementsDtOptions=DTOptionsBuilder.newOptions().withPaginationType("full_numbers").withDisplayLength(10).withBootstrap().withDOM('<<"pull-left"pl>f<t>i<"pull-left"p>>'),$scope.onAccountSelect=function(acc){User.selectAccount(acc),$scope.account=acc,$state.reload()},$scope.initStatements=function(){$scope._loading=!0,User.getUserAccounts().then(function(accs){return $scope.accounts=accs.length>1?accs.slice(1):accs,$scope.account&&$scope.account.acc_id||($scope.account=$scope.accounts[0]),Companies.statements({id:$scope.account.acc_id}).$promise}).then(function(statements){return $scope.statements=statements,Companies.transactions({id:$scope.account.acc_id}).$promise}).then(function(transactions){$scope.transactions=transactions.map(function(t){return t.transaction_type=_.capitalize(t.transaction_type),t.success=JSON.parse(t.success),t})}).then(function(){return Companies.subscriptionSummary({id:$scope.account.acc_id}).$promise.then(function(subscription){return $scope.summary=subscription,subscription})})["catch"](function(err){$scope._loading=!1,$scope._error=err.data,AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope.transactionsDtOptions=DTOptionsBuilder.newOptions().withPaginationType("full_numbers").withDisplayLength(pageLength).withBootstrap().withDOM('<<"pull-left"pl>f<t>i<"pull-left"p>>').withOption("paging",$scope.transactions.length>pageLength),$scope.statementsDtOptions=DTOptionsBuilder.newOptions().withPaginationType("full_numbers").withDisplayLength(pageLength).withBootstrap().withDOM('<<"pull-left"pl>f<t>i<"pull-left"p>>').withOption("paging",$scope.statements.length>pageLength),$scope._loading=!1})},$scope.initStatement=function(){$scope._loading=!0,User.getUserAccounts().then(function(accs){return $scope.accounts=accs.length>1?accs.slice(1):accs,$scope.account&&$scope.account.acc_id||($scope.account=$scope.accounts[0]),Companies.statement({id:$scope.account.acc_id,statement:$stateParams.id}).$promise}).then(function(statement){$scope.statement=statement})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})},$scope.savePdfStatement=function(id){Companies.getPdfStatement({id:$scope.account.acc_id,statement:$stateParams.id}).$promise.then(function(res){FileSaver.saveAs(res.response,id+".pdf")})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})}}StatementsController.$inject=["$scope","$state","FileSaver","User","Companies","DTOptionsBuilder","DTColumnDefBuilder","AlertService","$stateParams"],angular.module("revapm.Portal.Profile").controller("StatementsController",StatementsController)}(),function(){"use strict";angular.module("revapm.Portal.Users",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.users",{url:"/users",views:{main:{controller:"UsersCrudController",templateUrl:"parts/users/list.html"}}}).state("index.accountSettings.users.new",{url:"/new",views:{page:{templateUrl:"parts/users/new.html"}}}).state("index.accountSettings.users.edit",{url:"/edit/:id",views:{page:{controller:"UsersCrudController",templateUrl:"parts/users/edit.html"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Users").config(routesConfig)}(),function(){"use strict";function UsersCrudController($scope,$q,CRUDController,Users,User,$injector,$state,$stateParams,Companies,DomainsConfig,$anchorScroll){function initModel(){$scope.model={theme:"light",access_control_list:{dashBoard:!0,reports:!1,configure:!1,test:!1,readOnly:!1}}}function dependencies(){return $q.all([Companies.query().$promise,DomainsConfig.query().$promise]).then(function(dataRefs){$scope.companies=dataRefs[0],$scope.domains=dataRefs[1]})}return $injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.auth.isUser()?void $state.go("index.accountSettings.profile"):("index.accountSettings.users.new"===$state.current.name&&dependencies(),$scope.setState("index.accountSettings.users"),$scope.setResource(Users),$scope.roles=["user","admin"],($scope.auth.isRevadmin()||$scope.auth.isReseller())&&$scope.roles.push("reseller"),$scope.companies=[],$scope.domains=[],$scope.model||initModel(),$scope.getUser=function(id){$scope._loading=!0,$scope.get(id).then(dependencies).then(function(){return $scope.model.domain=_.intersection(_.findByValues($scope.domains,"account_id",$scope.model.companyId).map(function(item){return item.domain_name}),$scope.model.domain),$scope.model.domain})["catch"](function(err){$scope.alertService.danger("Could not load user details")})["finally"](function(){$scope._loading=!1})},$scope.deleteUser=function(model){$scope.confirm("confirmModal.html",model).then(function(){$scope["delete"](model)["catch"]($scope.alertService.danger)})},$scope.updateUser=function(model){model&&($scope.alertService.clear(),model.id=model.user_id,$scope.update(model).then(function(data){model.user_id===User.getUser().user_id&&User.reloadUser(),$scope.alertService.success("User updated",5e3)})["catch"]($scope.alertService.danger))},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.createUser=function(model){if(model){if(model.passwordConfirm!==model.password)return void $scope.alertService.danger("Passwords did not match",5e3);$scope.alertService.clear(),delete model.passwordConfirm,model.access_control_list.dashBoard=!0,$scope.create(model).then(function(data){initModel(),$scope.alertService.success("User created",5e3)})["catch"]($scope.alertService.danger)}},$scope.disableSubmit=function(model,isEdit){return(User.isRevadmin()||User.isReseller())&&!model.companyId||model.companyId&&0===model.companyId.length?!0:isEdit?$scope._loading||!model.email||!model.access_control_list||!model.firstname||!model.lastname||!model.role:$scope._loading||!model.email||!model.access_control_list||!model.firstname||!model.lastname||!model.password||!model.passwordConfirm||!model.role},$scope.$on("$stateChangeSuccess",function(state){$scope.list().then(dependencies).then(function(){if(!$scope.auth.isReseller()&&!$scope.auth.isRevadmin())return $q.when();var list=$scope.companies;_.forEach($scope.records,function(item){if(1===item.companyId.length){var index=_.findIndex(list,{id:item.companyId[0]});index>=0&&(item.companyName=list[index].companyName)}else item.companyId.length>1&&(item.companyName="",angular.forEach(item.companyId,function(account_id,key){var index=_.findIndex(list,{id:account_id});index>=0&&(key!==item.companyId.length&&0!==key&&(item.companyName=item.companyName+", "),item.companyName=item.companyName+list[index].companyName)}))}),$q.when(list)}).then(function(){$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500)})}),_.mixin({findByValues:function(collection,property,values){return _.filter(collection,function(item){return _.contains(values,item[property])})}}),$scope.getAccountDomainNameList=function(account_id){account_id||(account_id=$scope.model.companyId);var data=_.findByValues($scope.domains,"account_id",account_id);return data},$scope.getDomainPlaceholder=function(){var list=$scope.getAccountDomainNameList();return list.length>0?"Select domains...":"Domains list is empty..."},void $scope.$watch("model.companyId",function(newVal,oldVal){if(void 0!==newVal&&void 0!==oldVal){var data=_.findByValues($scope.domains,"account_id",$scope.model.companyId).map(function(item){return item.domain_name});$scope.model.domain=_.intersection(data,$scope.model.domain)}}))}UsersCrudController.$inject=["$scope","$q","CRUDController","Users","User","$injector","$state","$stateParams","Companies","DomainsConfig","$anchorScroll"],angular.module("revapm.Portal.Users").controller("UsersCrudController",UsersCrudController)}(),function(){"use strict";angular.module("revapm.Portal.Apps",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","ng.jsoneditor","ngSanitize"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.apps.android",{url:"/android",data:{platform:"Android",platform_code:"Android",list:!0},views:{main:{controller:"AppsController",templateUrl:"parts/apps/list.html"}}}).state("index.apps.ios",{url:"/ios",data:{platform:"iOS",platform_code:"iOS",list:!0},views:{main:{controller:"AppsController",templateUrl:"parts/apps/list.html"}}}).state("index.apps.windows_mobile",{url:"/windows_mobile",data:{platform:"Windows Mobile",platform_code:"Windows_Mobile",list:!0},views:{main:{templateUrl:"parts/apps/list.html",controller:"AppsController"}}}).state("index.apps.ios.new",{url:"/new",views:{page:{templateUrl:"parts/apps/new.html",controller:"AppsController"}}}).state("index.apps.ios.configure",{url:"/configure/:id",views:{page:{templateUrl:"parts/apps/configure.html",controller:"AppsController"}}}).state("index.apps.ios.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/apps/edit.html",controller:"AppEditController"}}}).state("index.apps.ios.versions",{url:"/versions/:id/",views:{page:{templateUrl:"parts/apps/versions.html",controller:"AppVersionsController"}}}).state("index.apps.android.new",{url:"/new",views:{page:{templateUrl:"parts/apps/new.html",controller:"AppsController"}}}).state("index.apps.android.configure",{url:"/configure/:id",views:{page:{templateUrl:"parts/apps/configure.html",controller:"AppsController"}}}).state("index.apps.android.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/apps/edit.html",controller:"AppEditController"}}}).state("index.apps.android.versions",{url:"/versions/:id/",views:{page:{templateUrl:"parts/apps/versions.html",controller:"AppVersionsController"}}}).state("index.apps.windows_mobile.new",{url:"/new",views:{page:{templateUrl:"parts/apps/new.html",controller:"AppsController"}}}).state("index.apps.windows_mobile.configure",{url:"/configure/:id",views:{page:{templateUrl:"parts/apps/configure.html",controller:"AppsController"}}}).state("index.apps.windows_mobile.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/apps/edit.html",controller:"AppEditController"}}}).state("index.apps.windows_mobile.versions",{url:"/versions/:id/",views:{page:{templateUrl:"parts/apps/versions.html",controller:"AppVersionsController"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Apps").config(routesConfig)}(),function(){"use strict";function AppsController($scope,$timeout,$anchorScroll,User,Companies,Apps,CRUDController,$injector,$state,$stateParams,AlertService,$localStorage,$q){function setAccountName(){return $scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){_.forEach($scope.records,function(item){var index=_.findIndex(list,{id:item.account_id});index>=0&&(item.companyName=list[index].companyName)})}):$q.when()}$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Apps),$scope.$state=$state,$scope._baseFilter={app_platform:$state.current.data.platform_code},$scope.$on("$stateChangeSuccess",function(state){$scope.list().then(setAccountName).then(function(){$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500)})}),$scope.companies=[],$scope.model={configs:[{}]},$scope.copyForEditor={},$scope.obj={data:{},options:{mode:"code",modes:["code","view"],error:function(err){alert(err.toString())}}},$scope.filterKeys=["app_name","app_platform","companyName","last_app_published_version","updated_at"],$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.model.account_id=$scope.auth.getUser().companyId[0],User.getUserDomains(!0).then(function(domains){$scope.domainList=domains.map(function(d){return d.domain_name})}),$scope.fetchCompanies=function(companyIds){var promises=[];companyIds.forEach(function(id){promises.push(Companies.get({id:id}).$promise)}),$q.all(promises).then(function(data){$scope.companies=data})},$scope["switch"]=function(item){item.show===!0?item.show=!1:item.show=!0},$scope.initEdit=function(id){$scope.get(id).then(function(){$timeout(function(){$scope.copyForEditor=_.clone($scope.model),delete $scope.copyForEditor.$promise,delete $scope.copyForEditor.$resolved,delete $scope.copyForEditor.id,delete $scope.copyForEditor.account_id,delete $scope.copyForEditor.app_platform,delete $scope.copyForEditor.sdk_key,delete $scope.copyForEditor.created_at,delete $scope.copyForEditor.updated_at,delete $scope.copyForEditor.updated_by,delete $scope.copyForEditor.created_by},2e3)})["catch"](function(err){$scope.alertService.danger("Could not load app details")})},$scope.initNew=function(){$scope.platforms=[{name:"iOS",code:"iOS",disabled:!1},{name:"Android",code:"Android",disabled:!1},{name:"Windows Mobile",code:"Windows_Mobile",disabled:!1}];var idx=_.findIndex($scope.platforms,{code:$state.current.data.platform_code});$scope.model.app_platform=$scope.platforms[idx]},$scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){$scope.companies=list,1===$scope.companies.length&&($scope.model.account_id=$scope.companies[0].id)}):angular.isArray($scope.auth.getUser().companyId)?1===$scope.auth.getUser().companyId.length?$scope.model.account_id=$scope.auth.getUser().companyId[0]:$scope.fetchCompanies($scope.auth.getUser().companyId):$scope.model.account_id=$scope.auth.getUser().companyId,$scope.getApp=function(id){$scope.get(id)["catch"](function(err){$scope.alertService.danger("Could not load app details")})},$scope.createApp=function(model){var modelCopy=_.clone(model);delete modelCopy.configs,modelCopy.app_platform=model.app_platform.code,$scope.create(modelCopy).then(function(){model.app_name="",$scope.alertService.success("App registered",5e3)})},$scope.cleanModel=function(model){var modelCopy=_.clone(model);({id:model.id});return modelCopy.account_id=$scope.model.account_id,delete modelCopy.$promise,delete modelCopy.$resolved,delete modelCopy.id,delete modelCopy.app_platform,delete modelCopy.sdk_key,delete modelCopy.created_at,delete modelCopy.updated_at,delete modelCopy.updated_by,delete modelCopy.created_by,modelCopy},$scope.updateApp=function(model){$scope.confirm("confirmUpdateModal.html",model).then(function(){$scope._loading=!0;var params={id:$scope.model.id};$scope.update(params,$scope.cleanModel(model)).then(function(){$scope.alertService.success("App updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something went wrong",5e3)})["finally"](function(){delete model.$promise,delete model.$resolved,delete model.$rejected,_.assign($scope.model,model),$scope._loading=!1})})},$scope.verify=function(model){return $scope.model.id?($scope._loading=!0,void Apps.update({id:$scope.model.id,options:"verify_only"},$scope.cleanModel(model)).$promise.then(function(data){$scope.alertService.success("App configuration is correct",5e3)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})):void AlertService.danger("Please select app first")},$scope.publish=function(model){return $scope.model.id?void $scope.confirm("confirmPublishModal.html",model).then(function(){$scope._loading=!0,Apps.update({id:$scope.model.id,options:"publish"},$scope.cleanModel(model)).$promise.then(function(data){$scope.alertService.success("App configuration is published",5e3)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){_.assign($scope.model,model),$scope._loading=!1})}):void AlertService.danger("Please select app first")},$scope.deleteApp=function(model){$scope.confirm("confirmModal.html",model).then(function(){var appName=model.app_name;$scope["delete"](model).then(function(data){$scope.alertService.success("App "+appName+" deleted.")})["catch"](function(err){$scope.alertService.danger(err)})["finally"](function(){$scope.page.current>$scope.page.pages.length&&$scope.prevPage()})})},$scope.storeToStorage=function(app){var newApp={app_id:app.id,id:app.id,app_name:app.app_name,sdk_key:app.sdk_key};$localStorage.selectedApplication=newApp},$scope.jsonEditorEvent=function(instance){$scope.jsonEditorInstance=instance},$scope.$watch("jsonEditorInstance.getText()",function(val){if(!val)return void($scope.jsonIsInvalid=!0);try{var json=JSON.parse(val);$scope.jsonIsInvalid=!json||!Object.keys(json).length}catch(err){$scope.jsonIsInvalid=!0}}),$scope.switchKeyVisibility=function(item){item.showKey=!item.showKey},$scope.copyCallback=function(err){err?$scope.alertService.danger("Copying failed, please try manual approach",2e3):$scope.alertService.success("The SDK key has been copied to the clipboard",2e3)}}AppsController.$inject=["$scope","$timeout","$anchorScroll","User","Companies","Apps","CRUDController","$injector","$state","$stateParams","AlertService","$localStorage","$q"],angular.module("revapm.Portal.Apps").controller("AppsController",AppsController)}(),function(){"use strict";function AppVersionsController($scope,Apps,$stateParams,AlertService,$timeout,$window,$filter){$scope._loading=!0,$scope.id=$stateParams.id,$scope.app=Apps.get({id:$stateParams.id}),$scope.versions=[],$scope.currentVersion={},$scope.initVersions=function(){$scope.obj={data:"Configuration will appear here",options:{mode:"code",modes:["code","view"],error:function(err){$window.alert(err.toString())}}}},$scope.format=function(item){item.updated_by?" Updated by "+item.updated_by:" Updated ";return"Version "+item.app_published_version+" Last updated at "+$filter("date")(new Date(item.updated_at),"MMM dd, yyyy H:mm:ss a")},$scope.onChangeVersion=function(){if(!$scope.currentVersion)return void($scope.obj.data="{}");var idx=_.findIndex($scope.versions,{updated_at:$scope.currentVersion});$scope._loading=!0,Apps.get({id:$stateParams.id,version:idx+1}).$promise.then(function(data){$scope.obj.data=JSON.stringify(data,null,2)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})},Apps.versions({id:$stateParams.id}).$promise.then(function(data){angular.isArray(data)&&($scope.versions=data)})["catch"](function(err){AlertService.danger(err);
})["finally"](function(){$scope._loading=!1}),$timeout(function(){$scope.obj.options.mode="code"},10)}AppVersionsController.$inject=["$scope","Apps","$stateParams","AlertService","$timeout","$window","$filter"],angular.module("revapm.Portal.Apps").controller("AppVersionsController",AppVersionsController)}(),function(){"use strict";function AppEditController($scope,$rootScope,Apps,User,CRUDController,$injector,$state,$stateParams,AlertService){$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Apps),$scope.$state=$state,$scope.model={configs:[{}]},$scope.SDKVersionsInConfigs=[],$scope.configuration={},$scope.domainsListPlaceholder="Add domains...",$scope.fieldsToShow=[],$scope.model.configs.domains_white_list=[],$scope.model.configs.domains_black_list=[],$scope.domainList=[],$scope.allUserDomains=[],$scope.protocols=["standard","quic","rmp"],$scope.initEdit=function(id){$scope._loading=!0,$scope.get(id).then(function(){$scope.configuration=$scope.model.configs[0],$scope.SDKVersionsInConfigs=$scope.model.configs.map(function(config){return config.sdk_release_version})}).then(function(){Apps.sdkReleases().$promise.then(function(data){$scope.availableSDKVersions=_.xor(data[$state.current.data.platform],$scope.SDKVersionsInConfigs)}),$scope.selectedSDKVersion=$scope.SDKVersionsInConfigs[0],$scope.fieldsToShow=_.keys($scope.model.configs[0]),$scope.auth.isReseller()||$scope.auth.isRevadmin()?User.getUserDomains(!0).then(function(domains){$scope.allUserDomains=domains;var domainList=_.filter($scope.allUserDomains,{account_id:$scope.model.account_id}).map(function(d){return d.domain_name});$scope.domainList=_.uniq(domainList)}):User.getUserDomains(!0).then(function(domains){$scope.allUserDomains=domains,$scope.domainList=domains.map(function(d){return d.domain_name})})})["catch"](function(err){$scope.alertService.danger("Could not load app details")})["finally"](function(){$scope.$watch("selectedSDKVersion",function(){onSelectedSDKVersionChange()}),$scope._loading=!1})};var onSelectedSDKVersionChange=function(){var idx=_.findIndex($scope.model.configs,{sdk_release_version:$scope.selectedSDKVersion});$scope.configuration=$scope.model.configs[idx],$scope.configuration.allowed_transport_protocols||($scope.configuration.allowed_transport_protocols=[]),$scope.configuration.domains_white_list||($scope.configuration.domains_white_list=[]),$scope.configuration.domains_black_list||($scope.configuration.domains_black_list=[]),$scope.fieldsToShow=_.keys($scope.model.configs[idx])};$scope.toggleProtocolSelection=function(protocol,model){var idx=model.allowed_transport_protocols.indexOf(protocol);idx>-1?model.allowed_transport_protocols.splice(idx,1):model.allowed_transport_protocols.push(protocol)},$scope.isVersion=function(version){return version===$scope.selectedSDKVersion},$scope.isShown=function(name){return $scope.fieldsToShow.findIndex(name)>-1},$scope.addNewSDKConfig=function(version,model){$scope.availableSDKVersions=_.without($scope.availableSDKVersions,version),model.configs.push({sdk_release_version:version}),$scope.SDKVersionsInConfigs.push(version),$scope.selectedSDKVersion=version,$scope.configuration={sdk_release_version:version,allowed_transport_protocols:[],domains_white_list:[],domains_black_list:[]}},$scope.updateConfig=function(model,config){$scope.confirm("confirmUpdateModal.html",model).then(function(){var idx=_.findIndex(model.configs,{sdk_release_version:config.sdk_release_version});model.configs[idx]=config,$scope.update({id:model.id},$scope.cleanModel(model)).then(function(){$scope.alertService.success("App updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something went wrong",5e3)})})},$scope.verify=function(model,config){var idx=_.findIndex(model.configs,{sdk_release_version:config.sdk_release_version});model.configs[idx]=config,$scope._loading=!0,$scope.update({id:model.id,options:"verify_only"},$scope.cleanModel(model)).then(function(data){$scope.alertService.success("App configuration is correct",5e3)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})},$scope.publish=function(model,config){return model.id?void $scope.confirm("confirmPublishModal.html",model).then(function(){var idx=_.findIndex(model.configs,{sdk_release_version:config.sdk_release_version});model.configs[idx]=config,$scope._loading=!0,Apps.update({id:model.id,options:"publish"},$scope.cleanModel(model)).$promise.then(function(data){$rootScope.$broadcast("update:searchData"),$scope.alertService.success("App configuration is published",5e3)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})}):void AlertService.danger("Please select app first")},$scope.cleanModel=function(model){var modelCopy=_.clone(model);({id:model.id});return delete modelCopy.$promise,delete modelCopy.$resolved,delete modelCopy.id,delete modelCopy.app_platform,delete modelCopy.sdk_key,delete modelCopy.created_at,delete modelCopy.updated_at,delete modelCopy.updated_by,delete modelCopy.created_by,modelCopy},$scope.getAccountDomainNameList=function(account_id){return account_id||(account_id=$scope.model.account_id),_.filter($scope.allUserDomains,{account_id:account_id}).map(function(d){return d.domain_name})},$scope.onAccountSelect=function(){$scope.configuration.domains_provisioned_list=[]}}AppEditController.$inject=["$scope","$rootScope","Apps","User","CRUDController","$injector","$state","$stateParams","AlertService"],angular.module("revapm.Portal.Apps").controller("AppEditController",AppEditController)}(),function(){"use strict";function appStagingStatus(Apps,$config,$interval,$rootScope,$state){return{template:'<i class="glyphicon" ng-class="iconStaging" uib-tooltip="{{tooltipStaging}}"></i>&nbsp;&nbsp;&nbsp;<i class="glyphicon" ng-class="iconGlobal" uib-tooltip="{{tooltipGlobal}}"></i>',scope:{ngId:"="},controller:["$scope",function($scope){var intervalPromise,appId;$scope.iconStaging="glyphicon-refresh spin",$scope.tooltipStaging="Staging Status",$scope.iconGlobal="glyphicon-refresh spin",$scope.tooltipGlobal="Global Status",$scope.shouldRefresh=!0,$scope.startRefresh=function(){!appId||!$scope.shouldRefresh||$state.includes("index.apps.*.new")||$state.includes("index.apps.*.edit")||$state.includes("index.apps.*.configure")||$state.includes("index.apps.*.versions")||(intervalPromise=$interval($scope.fetchStatus,$config.APP_STATUS_REFRESH_INTERVAL,1))},$scope.stopRefresh=function(){angular.isDefined(intervalPromise)&&($interval.cancel(intervalPromise),intervalPromise=void 0,$scope.shouldRefresh=!1)},$scope.fetchStatus=function(id){(id||appId)&&(!id&&appId&&(id=appId),Apps.status({id:id}).$promise.then(function(data){$config.DOMAIN_STAGING_STATUS_ICONS[data.staging_status]&&($scope.iconStaging=$config.DOMAIN_STAGING_STATUS_ICONS[data.staging_status]),$scope.tooltipStaging="Staging Status: "+data.staging_status,$config.DOMAIN_PRODUCTION_STATUS_ICONS[data.global_status]&&($scope.iconGlobal=$config.DOMAIN_PRODUCTION_STATUS_ICONS[data.global_status]),$scope.tooltipGlobal="Global Status: "+data.global_status,$scope.startRefresh()})["catch"](function(err){$scope.iconStaging="glyphicon-remove text-danger",$scope.tooltipStaging="Staging Status: Error",$scope.iconGlobal="glyphicon-remove text-danger",$scope.tooltipGlobal="Global Status: Error",$scope.stopRefresh()}))},$scope.$on("$destroy",function(){$scope.stopRefresh()}),$rootScope.$on("$stateChangeStart",function(event){$scope.stopRefresh()}),$scope.$watch("ngId",function(newValue){newValue&&(appId=newValue,$scope.shouldRefresh=!0,$scope.fetchStatus(newValue))})}]}}appStagingStatus.$inject=["Apps","$config","$interval","$rootScope","$state"],angular.module("revapm.Portal.Apps").directive("appStagingStatus",appStagingStatus)}(),function(){"use strict";function appSelectDirective(User,AlertService){return{restrict:"AE",templateUrl:"parts/apps/app-select.html",scope:{ngModel:"=",onSelect:"&"},controller:["$scope",function($scope){$scope.apps=[],$scope._loading=!0,$scope.onAppSelect=function(app){$scope.ngModel=app,User.selectApplication(app)},!$scope.ngModel&&User.getSelectedApplication()&&($scope.ngModel=User.getSelectedApplication()),User.getUserApps().then(function(apps){$scope.apps=apps})["catch"](function(){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1}),$scope.$watch("ngModel",function(){$scope.onSelect&&$scope.onSelect()})}]}}appSelectDirective.$inject=["User","AlertService"],angular.module("revapm.Portal.Apps").directive("appSelect",appSelectDirective)}(),function(){"use strict";angular.module("revapm.Portal.Domains",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","ng.jsoneditor","ngSanitize","toggle-switch"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.webApp.domains",{url:"/domains",views:{main:{controller:"DomainsCrudController",templateUrl:"parts/domains/list.html"}}}).state("index.webApp.domains.advanced",{url:"/configure/:id",views:{page:{controller:"DomainsConfigureAdvancedController",templateUrl:"parts/domains/configure_advanced.html"}}}).state("index.webApp.domains.new",{url:"/new",views:{page:{templateUrl:"parts/domains/new.html"}}}).state("index.webApp.domains.edit",{url:"/edit/:id?isAdvanced",views:{page:{templateUrl:"parts/domains/edit.html",controller:"DomainsCrudController"}}}).state("index.webApp.domains.versions",{url:"/versions/:id",views:{page:{controller:"DomainVersionsController",templateUrl:"parts/domains/versions.html"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Domains").config(routesConfig)}(),function(){"use strict";angular.module("revapm.Portal.Domains").constant("DomainsCachingRuleDefault",{version:1,url:{is_wildcard:!0,value:""},edge_caching:{new_ttl:0,override_no_cc:!1,override_origin:!1,query_string_list_is_keep:!1,query_string_keep_or_remove_list:[]},browser_caching:{force_revalidate:!1,new_ttl:0,override_edge:!1},cookies:{ignore_all:!1,keep_or_ignore_list:[],list_is_keep:!1,override:!1,remove_ignored_from_request:!1,remove_ignored_from_response:!1},$cachingRuleState:{isCollapsed:!0}})}(),function(){"use strict";function domainSelectDirective(User,$localStorage,AlertService){return{restrict:"AE",templateUrl:"parts/domains/domain-select/domain-select.html",scope:{selectOne:"=",ngModel:"=",onSelect:"&"},controller:["$scope",function($scope){$scope.domains=[],$scope._loading=!0,$scope.data={model:""},$scope.ngDomain=$scope.ngModel,$scope.onModelSelect=function($model){$scope.ngModel=$model,$localStorage.selectedDomain=$model},User.getUserDomains(!0).then(function(domains){if($scope.domains=domains,(!$scope.ngModel||!$scope.ngModel.id)&&(1===domains.length&&$scope.selectOne&&($scope.onModelSelect($scope.domains[0]),$scope.ngDomain=$scope.domains[0]),$localStorage.selectedDomain&&$localStorage.selectedDomain.id)){var ind=_.findIndex(domains,function(d){return d.id===$localStorage.selectedDomain.id});$scope.onModelSelect($scope.domains[ind]),$scope.ngDomain=$scope.domains[ind]}})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.$watch("ngModel",function(){$scope.onSelect()})}]}}domainSelectDirective.$inject=["User","$localStorage","AlertService"],angular.module("revapm.Portal.Domains").directive("domainSelect",domainSelectDirective)}(),function(){"use strict";function domainStagingStatus(DomainsConfig,$config,$interval,$rootScope,$state){return{template:'<i class="glyphicon" ng-class="iconStaging" uib-tooltip="{{tooltipStaging}}"></i>&nbsp;&nbsp;&nbsp;<i class="glyphicon" ng-class="iconGlobal" uib-tooltip="{{tooltipGlobal}}"></i>',scope:{ngId:"="},controller:["$scope",function($scope){var intervalPromise,domainId;$scope.iconStaging="glyphicon-refresh spin",$scope.tooltipStaging="Staging Status",$scope.iconGlobal="glyphicon-refresh spin",$scope.tooltipGlobal="Global Status",$scope.shouldRefresh=!0,$scope.startRefresh=function(){!domainId||!$scope.shouldRefresh||$state.includes("index.webApp.domains.new")||$state.includes("index.webApp.domains.edit")||$state.includes("index.webApp.domains.advanced")||$state.includes("index.webApp.domains.versions")||(intervalPromise=$interval($scope.fetchStatus,$config.DOMAIN_STATUS_REFRESH_INTERVAL,1))},$scope.stopRefresh=function(){angular.isDefined(intervalPromise)&&($interval.cancel(intervalPromise),intervalPromise=void 0,$scope.shouldRefresh=!1)},$scope.fetchStatus=function(id){(id||domainId)&&(!id&&domainId&&(id=domainId),DomainsConfig.status({id:id}).$promise.then(function(data){$config.DOMAIN_STAGING_STATUS_ICONS[data.staging_status]&&($scope.iconStaging=$config.DOMAIN_STAGING_STATUS_ICONS[data.staging_status]),$scope.tooltipStaging="Staging Status: "+data.staging_status,$config.DOMAIN_PRODUCTION_STATUS_ICONS[data.global_status]&&($scope.iconGlobal=$config.DOMAIN_PRODUCTION_STATUS_ICONS[data.global_status]),$scope.tooltipGlobal="Global Status: "+data.global_status,$scope.startRefresh()})["catch"](function(err){console.log(err),$scope.iconStaging="glyphicon-remove text-danger",$scope.tooltipStaging="Staging Status: Error",$scope.iconGlobal="glyphicon-remove text-danger",$scope.tooltipGlobal="Global Status: Error",$scope.stopRefresh()}))},$scope.$on("$destroy",function(){$scope.stopRefresh()}),$rootScope.$on("$stateChangeStart",function(event){$scope.stopRefresh()}),$scope.$watch("ngId",function(newValue){newValue&&(domainId=newValue,$scope.shouldRefresh=!0,$scope.fetchStatus(newValue))})}]}}domainStagingStatus.$inject=["DomainsConfig","$config","$interval","$rootScope","$state"],angular.module("revapm.Portal.Domains").directive("domainStagingStatus",domainStagingStatus)}(),function(){"use strict";function domainCachingRule(DomainsCachingRuleDefault){return{restrict:"E",replace:!0,scope:!0,bindToController:{rule:"=ngModel"},templateUrl:"parts/domains/domain-caching-rule/domain-caching-rule.tpl.html",controllerAs:"$ctrl",controller:["$scope",function($scope){"ngInject";var $ctrl=this;$ctrl.rule.cookies||($ctrl.rule.cookies={override:!1,ignore_all:!1,keep_or_ignore_list:[],list_is_keep:!1,remove_ignored_from_request:!1,remove_ignored_from_response:!1})}]}}domainCachingRule.$inject=["DomainsCachingRuleDefault"],angular.module("revapm.Portal.Domains").directive("domainCachingRule",domainCachingRule).run(["$templateRequest",function($templateRequest){"ngInject";$templateRequest("parts/domains/domain-caching-rule/domain-caching-rule.tpl.html",!0)}])}(),function(){"use strict";function originRequestHeaders(){return{restrict:"E",replace:!0,scope:!0,bindToController:{origin_request_headers:"=ngModel"},templateUrl:"parts/domains/origin-request-headers/origin-request-headers.tpl.html",controllerAs:"$ctrl",controller:["$scope","$uibModal",function($scope,$uibModal){"ngInject";var $ctrl=this;this.newOriginRequestHeader={operation:"add",header_name:"",header_value:""},this.onAddNew=function(newOriginRequestHeader){_.isArray($ctrl.origin_request_headers)||($ctrl.origin_request_headers=[]),$ctrl.origin_request_headers.push(_.clone(newOriginRequestHeader)),$ctrl.newOriginRequestHeader={operation:"add",header_name:"",header_value:""}},this.onDelete=function(index){var modalInstance=$uibModal.open({animation:!0,templateUrl:"parts/domains/modals/confirmDeleteHeaderInfo.tpl.html",controller:["$scope","$uibModalInstance","model",function($scope,$uibModalInstance,model){$scope.model=model,$scope.ok=function(){$uibModalInstance.close("ok")},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}],resolve:{model:function(){return $ctrl.origin_request_headers[index]}}});modalInstance.result.then(function(){$ctrl.origin_request_headers.splice(index,1)},function(){})}}]}}angular.module("revapm.Portal.Domains").directive("originRequestHeaders",originRequestHeaders)}(),function(){"use strict";function endUserResponseHeaders(){return{restrict:"E",replace:!0,scope:!0,bindToController:{end_user_response_headers:"=ngModel"},templateUrl:"parts/domains/end-user-response-headers/end-user-response-headers.tpl.html",controllerAs:"$ctrl",controller:["$scope","$uibModal",function($scope,$uibModal){"ngInject";var $ctrl=this;this.newEndUserResponseHeader={operation:"add"},this.onAddNew=function(newEndUserResponseHeader){_.isArray($ctrl.end_user_response_headers)||($ctrl.end_user_response_headers=[]),$ctrl.end_user_response_headers.push(_.clone(newEndUserResponseHeader)),$ctrl.newEndUserResponseHeader={operation:"add"}},this.onDelete=function(index){$ctrl.end_user_response_headers.splice(index,1)},this.onDelete=function(index){var modalInstance=$uibModal.open({animation:!0,templateUrl:"parts/domains/modals/confirmDeleteHeaderInfo.tpl.html",controller:["$scope","$uibModalInstance","model",function($scope,$uibModalInstance,model){$scope.model=model,$scope.ok=function(){$uibModalInstance.close("ok")},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}],resolve:{model:function(){return $ctrl.end_user_response_headers[index]}}});modalInstance.result.then(function(){$ctrl.end_user_response_headers.splice(index,1)},function(){})}}]}}angular.module("revapm.Portal.Domains").directive("endUserResponseHeaders",endUserResponseHeaders)}(),function(){"use strict";function DomainsCrudController($scope,$timeout,$localStorage,CRUDController,DomainsConfig,$injector,$stateParams,$config,Companies,$http,$q,$state,$anchorScroll,DomainsCachingRuleDefault,SSL_certs,SSL_conf_profiles){function setAccountName(){return $scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){_.forEach($scope.records,function(item){var index=_.findIndex(list,{id:item.account_id});index>=0&&(item.companyName=list[index].companyName)})}):$q.when()}function fetchSSL_certificates(){return $scope.SSL_certs.length=0,SSL_certs.query().$promise.then(function(list){$scope.auth.isReseller()||$scope.auth.isRevadmin(),$scope.SSL_certs=list}).$promise}function fetchSSL_conf_profiles(){return $scope.SSL_conf_profiles.length=0,SSL_conf_profiles.query().$promise.then(function(list){if($scope.SSL_conf_profiles=list,""===$scope.model.ssl_conf_profile)$scope.model.ssl_conf_profile=$scope.SSL_conf_profiles[0].id;else{var _conf_profile=_.find($scope.SSL_conf_profiles,{id:$scope.model.ssl_conf_profile});_conf_profile&&($scope.model.ssl_protocols=_conf_profile.ssl_protocols,$scope.model.ssl_ciphers=_conf_profile.ssl_ciphers,$scope.model.ssl_prefer_server_ciphers=_conf_profile.ssl_prefer_server_ciphers)}}).$promise}function syncSSL_conf_profile(id){var item=_.find($scope.SSL_conf_profiles,{id:id});item&&angular.extend($scope.model,{ssl_ciphers:item.ssl_ciphers,ssl_protocols:item.ssl_protocols,ssl_prefer_server_ciphers:item.ssl_prefer_server_ciphers})}$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.isAdvancedMode=$stateParams.isAdvanced||!1,$scope.jsoneditor={options:{mode:"code",modes:["code","view"],error:function(err){alert(err.toString())}}},$scope.setState("index.webApp.domains"),$scope.setResource(DomainsConfig),$scope.$on("$stateChangeSuccess",function(state){$state.is($scope.state)&&$scope.list().then(setAccountName).then(function(){$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500)})}),$scope.filterKeys=["domain_name","cname","companyName","updated_at"],$scope.locations=[],$scope.companies=[],$scope.model={},$scope.fetchLocations=function(){$http.get($config.API_URL+"/locations/firstmile").then(function(data){data.status===$config.STATUS.OK&&($scope.locations=data.data)})},$scope.fetchCompanies=function(companyIds){var promises=[];companyIds.forEach(function(id){promises.push(Companies.get({id:id}).$promise)}),$q.all(promises).then(function(data){$scope.companies=data})},$scope.prepareSimpleDomainUpdate=function(model_current){var model;if(model=void 0===model_current.toJSON?_.clone(model_current,!0):_.clone(model_current.toJSON(),!0),model.rev_component_bp&&(delete model.rev_component_bp.cache_opt_choice,delete model.rev_component_bp.certificate_urls,delete model.rev_component_bp.ssl_certificates,model.rev_component_bp.caching_rules&&angular.forEach(model.rev_component_bp.caching_rules,function(item){delete item.$$cachingRuleState})),model.domain_name&&delete model.domain_name,$scope.isCustomSSL_conf_profile)model.ssl_conf_profile="";else{var item=_.find($scope.SSL_conf_profiles,{id:model.ssl_conf_profile});item&&(model.ssl_ciphers=item.ssl_ciphers,model.ssl_protocols=item.ssl_protocols,model.ssl_prefer_server_ciphers=item.ssl_prefer_server_ciphers)}return null!==model.ssl_cert_id&&void 0!==model.ssl_cert_id||(model.ssl_cert_id=""),delete model.cname,delete model.origin_protocol,delete model.id,model},$scope.setAccountId=function(){$scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){$scope.companies=list,1===$scope.companies.length&&($scope.model.account_id=$scope.companies[0].id)}):angular.isArray($scope.auth.getUser().companyId)?1===$scope.auth.getUser().companyId.length?$scope.model.account_id=$scope.auth.getUser().companyId[0]:$scope.fetchCompanies($scope.auth.getUser().companyId):$scope.model.account_id=$scope.auth.getUser().companyId},$scope.setAccountId(),$scope.fetchLocations(),$scope.SSL_certs=[],$scope.SSL_conf_profiles=[],$scope.getDomain=function(id){function validateDomainProperties(domain){$timeout(function(){$scope.modelAdvance=angular.copy($scope.prepareSimpleDomainUpdate(domain))},2e3);var _domain_default_property={proxy_timeout:20,domain_aliases:[],origin_secure_protocol:"use_end_user_protocol",rev_component_co:{enable_rum:!1}};_.defaultsDeep($scope.model,_domain_default_property),delete $scope.model.domain_name,delete $scope.model.cname,delete $scope.model.id,angular.forEach($scope.model.rev_component_bp.caching_rules,function(item){angular.extend(item,{$$cachingRuleState:{isCollapsed:!0}}),item.edge_caching.query_string_keep_or_remove_list||(item.edge_caching.query_string_keep_or_remove_list=[])})}function saveNoChangingValue(model){return $scope.modelInfo={domain_name:model.domain_name,cname:model.cname},delete model.domain_name,delete model.cname,delete model.id,$q.when(model)}$scope.get(id).then(saveNoChangingValue).then(validateDomainProperties).then(function(){return""!==$scope.model.ssl_conf_profile?$scope.isCustomSSL_conf_profile=!1:$scope.isCustomSSL_conf_profile=!0,$q.all([fetchSSL_certificates(),fetchSSL_conf_profiles()])})["catch"](function(err){$scope.alertService.danger("Could not load domain details")})},$scope.deleteDomain=function(model){$scope.confirm("confirmModal.html",model).then(function(){var domainName=model.domain_name;$scope["delete"](model).then(function(data){$scope.alertService.success("Domain "+domainName+" deleted."),$scope.list().then(setAccountName)})["catch"](function(err){$scope.alertService.danger(err)})})},$scope.createDomain=function(model){$scope.create(model).then(function(){$scope.alertService.success("Domain created",5e3),$scope.setAccountId()})["catch"]($scope.alertService.danger)},$scope.publishDomain=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmPublishModal.html",model).then(function(){model=$scope.prepareSimpleDomainUpdate(model),$scope.update({id:modelId,options:"publish"},model).then(function(data){$scope.alertService.success("Domain configuration published",5e3)})["catch"](function(err){$scope.alertService.danger(err)})})}},$scope.validateDomain=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;model=$scope.prepareSimpleDomainUpdate(model),$scope.update({id:modelId,options:"verify_only"},model).then(function(data){$scope.alertService.success("The domain configuration is correct",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)})}},$scope.updateDomain=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmUpdateModal.html",model).then(function(){model=$scope.prepareSimpleDomainUpdate(model),$scope.update({id:modelId},model).then(function(){$scope.alertService.success("Domain updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)})})}},$scope.storeToStorage=function(model){$localStorage.selectedDomain=model},$scope.disableSubmit=function(model,isEdit){return isEdit?$scope._loading||!model.account_id||!model.origin_server||!model.origin_host_header||!model.origin_server_location_id||!model.proxy_timeout:$scope._loading||!model.domain_name||!model.account_id||!model.origin_server||!model.origin_host_header||!model.origin_server_location_id},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.jsonEditorEvent=function(instance){$scope.jsonEditorInstance=instance},$scope.$watch("jsonEditorInstance.getText()",function(val){if(!val)return void($scope.jsonIsInvalid=!0);try{var json=JSON.parse(val);$scope.jsonIsInvalid=!json||!Object.keys(json).length}catch(err){$scope.jsonIsInvalid=!0}}),$scope.onAddNewCachingRule=function(){var _newCachingRule={version:1,url:{is_wildcard:!0,value:""},edge_caching:{new_ttl:0,override_no_cc:!1,override_origin:!1,query_string_list_is_keep:!1,query_string_keep_or_remove_list:[]},browser_caching:{force_revalidate:!1,new_ttl:0,override_edge:!1},cookies:{ignore_all:!1,keep_or_ignore_list:[],list_is_keep:!1,override:!1,remove_ignored_from_request:!1,remove_ignored_from_response:!1},$$cachingRuleState:{isCollapsed:!0}};$scope.model.rev_component_bp.caching_rules.push(_newCachingRule),$scope.alertService.success("A new default caching rule has been added to the end of the list. Please configure the rule before saving the configuration.")},$scope.onRemoveCachingRule=function(index){$scope.confirm("confirmModalDeleteCachingRule.html",{url:$scope.model.rev_component_bp.caching_rules[index].url}).then(function(){$scope.model.rev_component_bp.caching_rules.splice(index,1),$scope.alertService.success("Caching Rule was deleted.")})},$scope.onUpCachingRule=function(element){var array=$scope.model.rev_component_bp.caching_rules,index=array.indexOf(element);return-1===index?!1:array[index-1]?void array.splice(index-1,2,array[index],array[index-1]):0},$scope.onDownCachingRule=function(element){var array=$scope.model.rev_component_bp.caching_rules,index=array.indexOf(element);return-1===index?!1:array[index+1]?void array.splice(index,2,array[index+1],array[index]):0},$scope.onCollapsAllCachingRule=function(){var _rules=$scope.model.rev_component_bp.caching_rules;angular.forEach(_rules,function(item){item.$$cachingRuleState.isCollapsed=!0})},$scope.onExpandAllCachingRule=function(){var _rules=$scope.model.rev_component_bp.caching_rules;angular.forEach(_rules,function(item){item.$$cachingRuleState.isCollapsed=!1})},$scope.onChangeModeView=function(){$scope.isAdvancedMode=!$scope.isAdvancedMode};var _id_ssl_conf_profile="";$scope.$watch("isAdvancedMode",function(newVal,oldVal){if(newVal!==oldVal&&newVal===!0){var newModel=$scope.prepareSimpleDomainUpdate($scope.model);_id_ssl_conf_profile=$scope.model.ssl_conf_profile,$scope.modelAdvance=angular.copy(newModel),$scope.isCustomSSL_conf_profile===!0&&($scope.modelAdvance.ssl_conf_profile="")}newVal!==oldVal&&newVal===!1&&(""!==_id_ssl_conf_profile&&($scope.modelAdvance.ssl_conf_profile=_id_ssl_conf_profile),_.merge($scope.model,$scope.modelAdvance),$scope.isCustomSSL_conf_profile===!1&&syncSSL_conf_profile($scope.model.ssl_conf_profile))}),$scope.$watch("model.ssl_conf_profile",function(newVal,oldVal){newVal!==oldVal&&newVal&&syncSSL_conf_profile(newVal)}),$scope.$watch("isCustomSSL_conf_profile",function(newVal,oldVal){newVal!==oldVal&&"undefuned"!==newVal&&newVal===!1&&syncSSL_conf_profile($scope.model.ssl_conf_profile)})}DomainsCrudController.$inject=["$scope","$timeout","$localStorage","CRUDController","DomainsConfig","$injector","$stateParams","$config","Companies","$http","$q","$state","$anchorScroll","DomainsCachingRuleDefault","SSL_certs","SSL_conf_profiles"],angular.module("revapm.Portal.Domains").controller("DomainsCrudController",DomainsCrudController)}(),function(){"use strict";function DomainVersionsController($scope,DomainsConfig,$stateParams,AlertService,$timeout,$window,$filter){$scope._loading=!0,$scope.id=$stateParams.id,$scope.domain=DomainsConfig.get({id:$stateParams.id}),$scope.versions=[],$scope.currentVersion={},$scope.obj={data:"Configuration will appear here",options:{mode:"code",modes:["code","view"],error:function(err){$window.alert(err.toString())}}},$scope.format=function(item){return"Version "+item.last_published_domain_version+" Last updated at "+$filter("date")(new Date(item.updated_at),"MMM dd, yyyy H:mm:ss a")},$scope.onChangeVersion=function(){return $scope.currentVersion?($scope._loading=!0,void DomainsConfig.get({id:$stateParams.id,version:$scope.currentVersion}).$promise.then(function(data){$scope.obj.data=JSON.stringify(data,null,2)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})):void($scope.obj.data="")},DomainsConfig.versions({id:$stateParams.id}).$promise.then(function(data){angular.isArray(data)&&($scope.versions=data)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1}),$timeout(function(){$scope.obj.options.mode="code"},10)}DomainVersionsController.$inject=["$scope","DomainsConfig","$stateParams","AlertService","$timeout","$window","$filter"],angular.module("revapm.Portal.Domains").controller("DomainVersionsController",DomainVersionsController)}(),function(){"use strict";angular.module("revapm.Portal.SSL_certs",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","ng.jsoneditor","ngSanitize","toggle-switch"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.webApp.ssl_certs",{url:"/ssl_certs",views:{main:{controller:"SSL_certsCrudController",templateUrl:"parts/ssl_certs/list.html"}}}).state("index.webApp.ssl_certs.new",{url:"/new",views:{page:{templateUrl:"parts/ssl_certs/new.html"}}}).state("index.webApp.ssl_certs.edit",{url:"/edit/:id?isAdvanced",views:{page:{templateUrl:"parts/ssl_certs/edit.html",controller:"SSL_certsCrudController"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.SSL_certs").config(routesConfig)}(),function(){"use strict";function SSL_certsCrudController($scope,$timeout,$localStorage,CRUDController,SSL_certs,$injector,$stateParams,$config,Companies,$http,$q,$state,$anchorScroll){function setAccountName(){return $scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){_.forEach($scope.records,function(item){var index=_.findIndex(list,{id:item.account_id});index>=0&&(item.companyName=list[index].companyName)})}):$q.when()}$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.isAdvancedMode=$stateParams.isAdvanced||!1,$scope.jsoneditor={options:{mode:"code",modes:["code","view"],error:function(err){alert(err.toString())}}},$scope.setState("index.webApp.ssl_certs"),$scope.setResource(SSL_certs),$scope.$on("$stateChangeSuccess",function(state){$state.is($scope.state)&&$scope.list().then(setAccountName).then(function(){$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500)})}),$scope.filterKeys=["cert_name","companyName","expires_at","domains","updated_at"],$scope.locations=[],$scope.companies=[],$scope.model={},$scope.certs_types=[{id:"shared",typeName:"Shared RevAPM Certificate"},{id:"private",typeName:"Private With Customer-Provided Key"}],$scope.fetchCompanies=function(companyIds){var promises=[];companyIds.forEach(function(id){promises.push(Companies.get({id:id}).$promise)}),
$q.all(promises).then(function(data){$scope.companies=data})},$scope.prepareSSL_certToUpdate=function(model_current){var model;return model=void 0===model_current.toJSON?_.clone(model_current,!0):_.clone(model_current.toJSON(),!0),delete model.id,delete model.created_by,delete model.created_at,delete model.updated_at,delete model.expires_at,delete model.domains,delete model.last_published_ssl_config_version,model},$scope.setAccountId=function(){$scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){$scope.companies=list,1===$scope.companies.length&&($scope.model.account_id=$scope.companies[0].id)}):angular.isArray($scope.auth.getUser().companyId)?1===$scope.auth.getUser().companyId.length?$scope.model.account_id=$scope.auth.getUser().companyId[0]:$scope.fetchCompanies($scope.auth.getUser().companyId):$scope.model.account_id=$scope.auth.getUser().companyId},$scope.setAccountId(),$scope.getSSL_cert=function(id){$scope.get(id)["catch"](function(err){$scope.alertService.danger("Could not load SSL certificate details")})},$scope.deleteSSL_cert=function(model){$scope.confirm("confirmModal.html",model).then(function(){var certName=model.cert_name;$scope["delete"](model).then(function(data){$scope.alertService.success("SSL certificate "+certName+" deleted."),$scope.list().then(setAccountName)})["catch"](function(err){$scope.alertService.danger(err)})})},$scope.createSSL_cert=function(model){model.cert_type="private",$scope.create(model).then(function(){$scope.alertService.success("SSL certificate created",5e3),$scope.setAccountId()})["catch"]($scope.alertService.danger)},$scope.publishSSL_cert=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmPublishModal.html",model).then(function(){model=$scope.prepareSSL_certToUpdate(model),$scope.update({id:modelId,options:"publish"},model).then(function(data){$scope.alertService.success("SSL certificate published",5e3)})["catch"](function(err){$scope.alertService.danger(err)})})}},$scope.validateSSL_cert=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;model=$scope.prepareSSL_certToUpdate(model),$scope.update({id:modelId,options:"verify_only"},model).then(function(data){$scope.alertService.success("The SSL certificate is correct",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something went wrong",5e3)})}},$scope.updateSSL_cert=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmUpdateModal.html",model).then(function(){model=$scope.prepareSSL_certToUpdate(model),$scope.update({id:modelId},model).then(function(){$scope.alertService.success("SSL certificate updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something went wrong",5e3)})})}},$scope.storeToStorage=function(model){$localStorage.selectedDomain=model},$scope.disableSubmit=function(model,isEdit){return isEdit?$scope._loading||!model.account_id&&!$scope.model.account_id||!model.public_ssl_cert||!model.private_ssl_key:$scope._loading||!model.cert_name||!model.account_id&&!$scope.model.account_id||!model.public_ssl_cert||!model.private_ssl_key},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()}}SSL_certsCrudController.$inject=["$scope","$timeout","$localStorage","CRUDController","SSL_certs","$injector","$stateParams","$config","Companies","$http","$q","$state","$anchorScroll"],angular.module("revapm.Portal.SSL_certs").controller("SSL_certsCrudController",SSL_certsCrudController)}(),function(){"use strict";function ssl_certStagingStatus(SSL_certs,$config,$interval,$rootScope,$state){return{template:'<i class="glyphicon" ng-class="iconStaging" uib-tooltip="{{tooltipStaging}}"></i>&nbsp;&nbsp;&nbsp;<i class="glyphicon" ng-class="iconGlobal" uib-tooltip="{{tooltipGlobal}}"></i>',scope:{ngId:"="},controller:["$scope",function($scope){var intervalPromise,certId;$scope.iconStaging="glyphicon-refresh spin",$scope.tooltipStaging="Staging Status",$scope.iconGlobal="glyphicon-refresh spin",$scope.tooltipGlobal="Global Status",$scope.shouldRefresh=!0,$scope.startRefresh=function(){!certId||!$scope.shouldRefresh||$state.includes("index.webApp.ssl_certs.new")||$state.includes("index.webApp.ssl_certs.edit")||$state.includes("index.webApp.ssl_certs.advanced")||$state.includes("index.webApp.ssl_certs.versions")||(intervalPromise=$interval($scope.fetchStatus,$config.SSL_CERT_STATUS_REFRESH_INTERVAL,1))},$scope.stopRefresh=function(){angular.isDefined(intervalPromise)&&($interval.cancel(intervalPromise),intervalPromise=void 0,$scope.shouldRefresh=!1)},$scope.fetchStatus=function(id){(id||certId)&&(!id&&certId&&(id=certId),SSL_certs.status({id:id}).$promise.then(function(data){$config.SSL_CERT_STAGING_STATUS_ICONS[data.staging_status]&&($scope.iconStaging=$config.SSL_CERT_STAGING_STATUS_ICONS[data.staging_status]),$scope.tooltipStaging="Staging Status: "+data.staging_status,$config.SSL_CERT_PRODUCTION_STATUS_ICONS[data.global_status]&&($scope.iconGlobal=$config.SSL_CERT_PRODUCTION_STATUS_ICONS[data.global_status]),$scope.tooltipGlobal="Global Status: "+data.global_status,$scope.startRefresh()})["catch"](function(err){console.log(err),$scope.iconStaging="glyphicon-remove text-danger",$scope.tooltipStaging="Staging Status: Error",$scope.iconGlobal="glyphicon-remove text-danger",$scope.tooltipGlobal="Global Status: Error",$scope.stopRefresh()}))},$scope.$on("$destroy",function(){$scope.stopRefresh()}),$rootScope.$on("$stateChangeStart",function(event){$scope.stopRefresh()}),$scope.$watch("ngId",function(newValue){newValue&&(certId=newValue,$scope.shouldRefresh=!0,$scope.fetchStatus(newValue))})}]}}ssl_certStagingStatus.$inject=["SSL_certs","$config","$interval","$rootScope","$state"],angular.module("revapm.Portal.Domains").directive("certStagingStatus",ssl_certStagingStatus)}(),function(){"use strict";angular.module("revapm.Portal.Companies",["ui.router","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","revapm.Portal.Profile"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.companies",{url:"/companies",views:{main:{controller:"CompaniesCrudController",templateUrl:"parts/companies/list.html"}}}).state("index.accountSettings.companies.new",{url:"/new",views:{page:{templateUrl:"parts/companies/new.html"}}}).state("index.accountSettings.companies.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/profile/edit-company.html",controller:"CompanyProfileEditController"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Companies").config(routesConfig)}(),function(){"use strict";function CompaniesCrudController($scope,CRUDController,Companies,User,BillingPlans,$injector,$stateParams,$config,$state,$anchorScroll){$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Companies),$scope.setState("index.accountSettings.companies"),$scope.$on("$stateChangeSuccess",function(state){$state.is($scope.state)&&$scope.list().then(function(){return void 0!==$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500),BillingPlans.query().$promise}).then(function(res){$scope.records=$scope.records.map(function(r){var idx=_.findIndex(res,{id:r.billing_plan});return idx>=0?(r.subscription_name=res[idx].name,r):(r.subscription_name="Manual",r)})})}),$scope.filterKeys=["companyName","comment","createdBy","updated_at","created_at"],$scope.getCompany=function(id){$scope.get(id)["catch"](function(err){$scope.alertService.danger("Could not load company details")})},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.deleteCompany=function(model){$scope.confirm("confirmModal.html",model).then(function(){return $scope["delete"](model)})["catch"]($scope.alertService.danger)},$scope.createCompany=function(model){model&&$scope.create(model).then(function(){$scope.alertService.success("Company created",5e3),$scope.auth.reloadUser()})["catch"]($scope.alertService.danger)},$scope.updateCompany=function(model){$scope.update(model).then(function(){$scope.alertService.success("Company updated",5e3)})["catch"]($scope.alertService.danger)},$scope.onGoToUsageReport=function(model){model.acc_id=model.id,model.acc_name=model.companyName,model.plan_id=model.billing_plan,model.billing_plan=model.billing_plan,User.selectAccount(model),$state.go("index.billing.usage")},$scope.onGoToBillingPlans=function(model){model.acc_id=model.id,model.acc_name=model.companyName,model.plan_id=model.billing_plan,model.billing_plan=model.billing_plan,User.selectAccount(model),$state.go("index.billing.plans")},$scope.onGoToBillingStatement=function(model){model.acc_id=model.id,model.acc_name=model.companyName,model.plan_id=model.billing_plan,model.billing_plan=model.billing_plan,User.selectAccount(model),$state.go("index.billing.statements")}}CompaniesCrudController.$inject=["$scope","CRUDController","Companies","User","BillingPlans","$injector","$stateParams","$config","$state","$anchorScroll"],angular.module("revapm.Portal.Companies").controller("CompaniesCrudController",CompaniesCrudController)}(),function(){"use strict";angular.module("revapm.Portal.Cache",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ng.jsoneditor"])}(),function(){"use strict";function CacheRoutingConfig($stateProvider){$stateProvider.state("index.webApp.cache",{url:"/cache/purge",views:{main:{controller:"CachePurgeController",templateUrl:"parts/cache/purge.html"}}}).state("index.webApp.advanced",{url:"/cache/advanced",views:{main:{controller:"CachePurgeController",templateUrl:"parts/cache/purge_advanced.html"}}})}CacheRoutingConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Cache").config(CacheRoutingConfig)}(),function(){"use strict";function CachePurgeController($scope,Cache,DomainsConfig,AlertService,$timeout,$uibModal){$scope._loading=!1,$scope.json={purges:[{url:{is_wildcard:!0,expression:"/images/*.png"}}]},$scope.text="",$scope.options={mode:"code",modes:["code","view"],error:function(err){alert(err.toString())}},$scope.purge=function(){if($scope.domain){var json=angular.copy($scope.json);json.domainName=$scope.domain.domain_name,$scope._loading=!0,Cache.purge({},json).$promise.then(function(data){AlertService.success("The request has been successfully submitted",5e3)})["catch"](function(err){var message="Oops something went wrong";err&&err.data&&err.data.message&&(message=err.data.message),AlertService.danger(message,5e3)})["finally"](function(){$scope._loading=!1})}},$scope.purgeText=function(){if($scope.text&&$scope.domain){var json={domainName:$scope.domain.domain_name,purges:[]},list=$scope.text.split("\n");list.forEach(function(val){json.purges.push({url:{is_wildcard:!0,expression:val}})}),$scope._loading=!0,Cache.purge({},json).$promise.then(function(data){console.log(data),AlertService.success("The request has been successfully submitted",5e3)})["catch"](function(err){var message="Oops something went wrong";err&&err.data&&err.data.message&&(message=err.data.message),AlertService.danger(message,5e3)})["finally"](function(){$scope._loading=!1})}},$scope.purgeDefaultText=function(){if($scope.domain){$scope.confirm("confirmModal.html",$scope.domain).then(function(){$scope.domain.domain_name;$scope._loading=!0,Cache.purge({},json).$promise.then(function(data){AlertService.success("The request has been successfully submitted",5e3)})["catch"](function(err){var message="Oops something went wrong";err&&err.data&&err.data.message&&(message=err.data.message),AlertService.danger(message,5e3)})["finally"](function(){$scope._loading=!1})});var json={domainName:$scope.domain.domain_name,purges:[{url:{is_wildcard:!0,expression:"/**/*"}},{url:{is_wildcard:!0,expression:"/"}},{url:{is_wildcard:!0,expression:"/**"}}]}}},$scope.jsonEditorEvent=function(instance){$scope.jsonEditorInstance=instance},$scope.$watch("jsonEditorInstance.getText()",function(val){if(val)try{var json=JSON.parse(val);$scope.jsonIsInvalid=!json||!Object.keys(json).length}catch(err){$scope.jsonIsInvalid=!0}}),$scope.confirm=function(template,resolve){angular.isObject(template)&&(resolve=template,template=""),angular.isObject(resolve)&&(resolve={model:resolve});var modalInstance=$uibModal.open({animation:!0,templateUrl:template||"parts/modal/confirmDelete.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:resolve||{}});return modalInstance.result}}CachePurgeController.$inject=["$scope","Cache","DomainsConfig","AlertService","$timeout","$uibModal"],angular.module("revapm.Portal.Cache").controller("CachePurgeController",CachePurgeController)}(),function(){"use strict";angular.module("revapm.Portal.ImportConfig",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ng.jsoneditor"])}(),function(){"use strict";function ImportConfigRoutingConfig($stateProvider){$stateProvider.state("index.webApp.importConfig",{url:"/import-config",views:{main:{controller:"ImportConfigController",templateUrl:"parts/import-config/import-config.html"}}})}ImportConfigRoutingConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.ImportConfig").config(ImportConfigRoutingConfig)}(),function(){"use strict";function ImportConfigController($scope,CRUDController,$injector){$injector.invoke(CRUDController,this,{$scope:$scope}),$scope._loading=!1,$scope.config={type:"acc"},$scope["import"]=function(){$scope.confirm("confirmImportConfig.html",$scope.domain||{}).then(function(){$scope.alertService.success("The provided configuration has been scheduled for processing.",5e3),$scope.config={type:"acc"}})}}ImportConfigController.$inject=["$scope","CRUDController","$injector"],angular.module("revapm.Portal.ImportConfig").controller("ImportConfigController",ImportConfigController)}(),function(){"use strict";angular.module("revapm.Portal.Reports",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","chart.js","angular-intro"])}(),function(){"use strict";function ReportsRoutes($stateProvider){$stateProvider.state("index.reports.general",{url:"/reports/general",views:{main:{controller:"GeneralCtrl",controllerAs:"vm",templateUrl:"parts/reports/general.html"}}}).state("index.reports.proxy",{url:"/reports/proxy",views:{main:{controller:"ReportsProxyTrafficController",templateUrl:"parts/reports/proxy.html"}}}).state("index.reports.edge-cache",{url:"/reports/edge-cache",views:{main:{controller:"EdgeCacheReportsController",controllerAs:"vm",templateUrl:"parts/reports/edge-cache.html"}}}).state("index.reports.topreports",{url:"/reports/topreports",views:{main:{controller:"TopReportsTrafficController",templateUrl:"parts/reports/top-reports.html"}}}).state("index.reports.top",{url:"/reports/top",views:{main:{controller:"TopObjectsController",templateUrl:"parts/reports/top.html"}}}).state("index.reports.fbt",{url:"/reports/fbt",views:{main:{controller:"FBTReportsController",templateUrl:"parts/reports/fbt.html"}}}).state("index.reports.mob",{url:"/reports/mobile",views:{main:{controller:"MobileReportsController",templateUrl:"parts/reports/mobile.html"}}}).state("index.reports.heatmaps",{url:"/reports/heatmaps",views:{main:{controller:"TrafficHeatmapsController",templateUrl:"parts/reports/heatmaps.html"}}}).state("index.reports.lm_rtt_heatmaps",{url:"/reports/lm_rtt_heatmaps",views:{main:{controller:"LMRTTHeatmapsController",templateUrl:"parts/reports/lm-rtt-heatmaps.html"}}})}ReportsRoutes.$inject=["$stateProvider"],angular.module("revapm.Portal.Domains").config(ReportsRoutes)}(),function(){"use strict";function D3ChartHelper(){function createSvgElement(element){return element=element||"body",d3.select(element).append("svg")}return{createSvgElement:createSvgElement}}angular.module("revapm.Portal.Reports").factory("D3ChartHelper",D3ChartHelper)}(),function(){"use strict";function ChartColorService(){function getRandomRgbPart(){return Math.floor(256*Math.random())}function randomColors(amount){if(!amount)return[];for(var result=[];amount--;){var rgb=d3.rgb(getRandomRgbPart(),getRandomRgbPart(),getRandomRgbPart());result.push(rgb.toString())}return result}function randomScaleOrdinalRange(amount){return d3.scale.ordinal().range(randomColors(amount))}return{randomColors:randomColors,randomScaleOrdinalRange:randomScaleOrdinalRange}}angular.module("revapm.Portal.Reports").factory("ChartColorService",ChartColorService)}(),function(){"use strict";function PieChartHelper(ChartColorService,D3ChartHelper){function drawPieChart(element,data,config){function change(data){function midAngle(d){return d.startAngle+(d.endAngle-d.startAngle)/2}var slice=svg.select(".slices").selectAll("path.slice").data(pie(data),key);slice.enter().insert("path").style("fill",function(d){return color(d.data.label)}).attr("class","slice"),slice.transition().duration(1e3).attrTween("d",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){return arc(interpolate(t))}}),slice.exit().remove();var text=svg.select(".labels").selectAll("text").data(pie(data),key);text.enter().append("text").attr("dy",".35em").text(function(d){return d.data.label}),text.transition().duration(1e3).attrTween("transform",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){var d2=interpolate(t),pos=outerArc.centroid(d2);return pos[0]=radius*(midAngle(d2)<Math.PI?1:-1),"translate("+pos+")"}}).styleTween("text-anchor",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){var d2=interpolate(t);return midAngle(d2)<Math.PI?"start":"end"}}),text.exit().remove();var polyline=svg.select(".lines").selectAll("polyline").data(pie(data),key);polyline.enter().append("polyline"),polyline.transition().duration(1e3).attrTween("points",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){var d2=interpolate(t),pos=outerArc.centroid(d2);return pos[0]=.95*radius*(midAngle(d2)<Math.PI?1:-1),[arc.centroid(d2),outerArc.centroid(d2),pos]}}),polyline.exit().remove()}angular.isArray(element)&&(data=element,element="body"),data=data||[];var width=$(element).width()||400,height=$(element).height()||200,radius=Math.min(width,height)/2,svg=D3ChartHelper.createSvgElement(element).attr("width",width).attr("height",height).append("g"),pie=d3.layout.pie().sort(null).value(function(d){return d.value}),key=function(d){return d.data.label};svg.append("g").attr("class","slices"),svg.append("g").attr("class","labels"),svg.append("g").attr("class","lines");var arc=d3.svg.arc().outerRadius(.8*radius).innerRadius(.05*radius),outerArc=d3.svg.arc().innerRadius(.9*radius).outerRadius(.9*radius);svg.attr("transform","translate("+width/2+","+height/2+")");var color=d3.scale.category20();return change(data),change}return{drawPieChart:drawPieChart}}PieChartHelper.$inject=["ChartColorService","D3ChartHelper"],angular.module("revapm.Portal.Reports").factory("PieChartHelper",PieChartHelper)}(),function(angular){"use strict";function reportsFilterService(Stats){function getDevices(domainId){return Stats.device({domainId:domainId}).$promise.then(defaultResponseHandler)}function getOs(domainId){return Stats.os({domainId:domainId}).$promise.then(defaultResponseHandler)}function getProtocol(domainId){return Stats.protocol({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){var protocol="Unknows";80===os.key&&(protocol="HTTP"),443===os.key&&(protocol="HTTPS"),$scope.protocol.labels.push(protocol),$scope.protocol.data.push(os.count)})})}function getHttpMethod(domainId){return Stats.httpMethod({domainId:domainId}).$promise.then(defaultResponseHandler)}function getHttpProtocol(domainId){return Stats.httpProtocol({domainId:domainId}).$promise.then(defaultResponseHandler)}function defaultResponseHandler(response){var formattedData={labels:[],data:[]};return response.data&&response.data.length>0&&_.forEach(response.data,function(data){formattedData.labels.push(data.key),formattedData.data.push(data.count)}),formattedData}var api={getDevices:getDevices,getOs:getOs,getProtocol:getProtocol,getHttpMethod:getHttpMethod,getHttpProtocol:getHttpProtocol};return api}angular.module("revapm.Portal.Reports").service("reportsFilterService",reportsFilterService),reportsFilterService.$inject=["Stats"]}(angular),function(){"use strict";function filterTimePeriods(){var directive={restrict:"AE",templateUrl:"parts/reports/filters/time-period.html",scope:{ngFilters:"=",onFilter:"&",flCountry:"=",flOs:"=",flDevice:"="},controller:FilterTimePeriodCtrl};return directive}function FilterTimePeriodCtrl($scope,filterGeneratorService){function callbackOnGlobalFilterChange($event,eventDataObject){$scope.ngFilters||($scope.ngFilters={}),_.forIn(eventDataObject.data,function(value,key){$scope.ngFilters[key]=value}),_.forIn($scope.ngFilters,function(value,key){eventDataObject.data[key]||delete $scope.ngFilters[key]}),$scope.onFilter()}function updateFilters(){$scope.ngFilters||($scope.ngFilters={}),$scope.ngFilters.from_timestamp=moment(Date.now()).subtract(parseInt($scope.delay),"days").valueOf(),$scope.ngFilters.to_timestamp=Date.now(),$scope.onFilter()}$scope.delay="1",$scope.updateFilters=updateFilters,filterGeneratorService.subscribeOnFilterChangeEvent($scope,callbackOnGlobalFilterChange)}angular.module("revapm.Portal.Reports").directive("filterTimePeriods",filterTimePeriods),FilterTimePeriodCtrl.$inject=["$scope","filterGeneratorService"]}(),function(){"use strict";function filterTopObjects(){return{restrict:"AE",templateUrl:"parts/reports/filters/top-objects-filter.html",scope:{ngFilters:"=",onFilter:"&",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","filterGeneratorService",function($scope,filterGeneratorService){function callbackOnGlobalFilterChange($event,eventDataObject){$scope.ngFilters||($scope.ngFilters={}),_.forIn(eventDataObject.data,function(value,key){$scope.ngFilters[key]=value}),_.forIn($scope.ngFilters,function(value,key){eventDataObject.data[key]||delete $scope.ngFilters[key]}),$scope.ngFilters.from_timestamp<moment().subtract(1,"days").valueOf()&&($scope.ngFilters.from_timestamp=moment().subtract(1,"days").valueOf()),$scope.ngFilters.to_timestamp>Date.now()&&($scope.ngFilters.to_timestamp=Date.now()),$scope.onFilter()}$scope.delay="24",$scope.ngFilters||($scope.ngFilters={}),$scope.ngFilters.count="20",filterGeneratorService.subscribeOnFilterChangeEvent($scope,callbackOnGlobalFilterChange),$scope.updateFilters=function(){$scope.ngFilters.from_timestamp=moment(Date.now()).subtract(parseInt($scope.delay),"hours").valueOf(),$scope.ngFilters.to_timestamp=Date.now(),$scope.onFilter()}}]}}angular.module("revapm.Portal.Reports").directive("filterTopObjects",filterTopObjects)}(),function(){"use strict";function mobileTrafficFilters(){return{restrict:"AE",templateUrl:"parts/reports/filters/mobile-traffic-filters.html",scope:{ngFilters:"=",onFilter:"&",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"="},controller:["$scope",function($scope){$scope.span="1",$scope.update=function(){$scope.ngFilters||($scope.ngFilters={}),$scope.ngFilters.from_timestamp=moment().subtract($scope.span,"days").valueOf(),$scope.ngFilters.to_timestamp=Date.now(),$scope.onFilter()}}]}}angular.module("revapm.Portal.Reports").directive("mobileTrafficFilters",mobileTrafficFilters)}(),function(){"use strict";function mobileTopObjectsFilters(){return{restrict:"AE",templateUrl:"parts/reports/filters/mobile-top-objects-filters.html",scope:{ngFilters:"=",onFilter:"&",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"="},controller:["$scope",function($scope){$scope.span="24",$scope.count="10",$scope.update=function(){$scope.ngFilters||($scope.ngFilters={}),$scope.ngFilters.count=parseInt($scope.count),$scope.ngFilters.from_timestamp=moment().subtract($scope.span,"hours").valueOf(),$scope.ngFilters.to_timestamp=Date.now(),$scope.onFilter()}}]}}angular.module("revapm.Portal.Reports").directive("mobileTopObjectsFilters",mobileTopObjectsFilters)}(),function(){"use strict";function pieChartDirective(){function link($scope,element,attrs){var el=element[0],chartOpts={chart:{renderTo:el,type:"pie"},title:!1,tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,0)+"% ("+Highcharts.numberFormat(this.y,0,".",",")+" requests)"}},plotOptions:{pie:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,format:"<b>{point.name}</b>: {point.percentage:.1f} %",style:{color:Highcharts.theme&&Highcharts.theme.contrastTextColor||"black"}},depth:45}},credits:{enabled:!1},series:[{data:[]}]},chart=new Highcharts.Chart(angular.merge(chartOpts,$scope.ngChartOptions||{}));$scope.$watch("ngData",function(value){value&&_.isArray(value)&&chart.series[0].setData(value)})}return{scope:{ngChartOptions:"=",ngData:"="},link:link}}angular.module("revapm.Portal.Reports").directive("pieChart",pieChartDirective)}(),function(){"use strict";function barChartDirective(){function link($scope,element,attrs){var el=element[0],chartOpts={chart:{renderTo:el,type:"bar"},title:!1,tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,0)+"% ("+Highcharts.numberFormat(this.y,0,".",",")+" requests)"}},plotOptions:{bar:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,format:"<b>{point.name}</b>: {point.percentage:.1f} %",style:{color:Highcharts.theme&&Highcharts.theme.contrastTextColor||"black"}},innerSize:100,depth:45}},credits:{enabled:!1},series:[{data:[]}]},chart=new Highcharts.Chart(angular.merge(chartOpts,$scope.ngChartOptions||{}));$scope.$watch("ngData",function(value){value&&_.isArray(value)&&chart.series[0].setData(value)})}return{scope:{ngChartOptions:"=",ngData:"="},link:link}}angular.module("revapm.Portal.Reports").directive("barChart",barChartDirective)}(),function(){"use strict";function lineChartDirective(){function link($scope,element,attrs){var el=element[0],chartOptions={chart:{renderTo:el,type:"areaspline"},title:{text:""},xAxis:{categories:[],tickInterval:4,crosshair:{width:1,color:"#000000"}},yAxis:{title:{text:"RPS"},plotLines:[{value:0,width:1,color:"#808080"}]},legend:{borderWidth:0},plotOptions:{areaspline:{marker:{enabled:!1}}},credits:{enabled:!1},series:[]},chart=new Highcharts.Chart(angular.merge(chartOptions,$scope.ngChartOptions||{}));$scope.reload=function(){chart.redraw()},$scope.clearChart=function(){chart.series.forEach(function(series){series.remove()}),$scope.reload()},$scope.$watch("ngData",function(value){if(value&&_.isObject(value)){if($scope.clearChart(),_.isArray(value.labels)){if(0===value.labels.length)return;chart.xAxis[0].setCategories(value.labels)}if(_.isArray(value.series)){if(0===value.series.length)return;value.series.forEach(function(val){chart.addSeries(val)})}$scope.reload()}}),$scope.$watch("xAxis",function(value){return value&&_.isArray(value)?0===value.length?void $scope.clearChart():void chart.xAxis[0].update(value):void 0})}return{scope:{ngChartOptions:"=",ngData:"="},link:link}}angular.module("revapm.Portal.Reports").directive("lineChart",lineChartDirective)}(),function(){"use strict";function d3PieChart(PieChartHelper){return{restrict:"AE",template:"<div></div>",scope:{ngData:"="},link:function(scope,element,attrs){scope.ngData||(scope.ngData=[]);var redraw=PieChartHelper.drawPieChart(element[0],[]);scope.$watch("ngData",function(){return scope.ngData&&0!==scope.ngData.length?void redraw(scope.ngData):void redraw([])})}}}d3PieChart.$inject=["PieChartHelper"],angular.module("revapm.Portal.Reports").directive("d3PieChart",d3PieChart)}(),function(){"use strict";function requestsChartDirective(){var directive={restrict:"AE",templateUrl:"parts/reports/charts/requests.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"="},controller:RequestsChartCtrl};return directive}function RequestsChartCtrl($scope,Stats,Util){function generateFilterParams(filters){var params={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};return _.forEach(filters,function(val,key){-1!==_.indexOf(_filters_field_list,key)?"-"!==val&&""!==val&&(params[key]=val):"count_last_day"===key&&(params.from_timestamp=moment().subtract(val,"days").valueOf(),params.to_timestamp=Date.now(),delete params.count_last_day)}),params}function reloadTrafficStats(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Incoming Bandwidth",data:[]},{name:"Outgoing Bandwidth",data:[]}]},Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters))).$promise.then(function(data){if(traffic_avg_=traffic_max_=traffic_total_=0,data.data&&data.data.length>0){var series=[{name:"Incoming Bandwidth",data:[]},{name:"Outgoing Bandwidth",data:[]}],interval=parseInt(data.metadata.interval_sec||1800),labels=[],offset=1e3*interval;data.data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label});var sent_bw=8*item.sent_bytes/interval;series[1].data.push(sent_bw),series[0].data.push(item.received_bytes/interval*8),traffic_total_+=item.sent_bytes,sent_bw>traffic_max_&&(traffic_max_=sent_bw),traffic_avg_+=sent_bw}),traffic_avg_/=data.data.length,$scope.traffic={labels:labels,series:series}}})["finally"](function(){$scope._loading=!1}))}var _filters_field_list=["from_timestamp","to_timestamp","country","device","os"];$scope._loading=!1,$scope.reloadTrafficStats=reloadTrafficStats,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets);var info_=null,traffic_avg_=0,traffic_max_=0,traffic_total_=0,tickInterval_=10;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('Traffic Level Avg <span style="font-weight: bold; color: #3c65ac;">'+Util.convertTraffic(traffic_avg_)+'</span> Max <span style="font-weight: bold; color: #3c65ac;">'+Util.convertTraffic(traffic_max_)+'</span><br>Traffic Total <span style="font-weight: bold; color: #3c65ac;">'+Util.humanFileSizeInGB(traffic_total_,3)+"</span>",this.xAxis[0].toPixels(0),3,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Bandwidth"},labels:{formatter:function(){return Util.convertTraffic(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": "+Util.convertTraffic(this.y)}}},$scope.traffic={labels:[],series:[{name:"Incoming Bandwidth",data:[]},{name:"Outgoing Bandwidth",data:[]}]},$scope.$watch("ngDomain",function(){$scope.ngDomain&&reloadTrafficStats()})}RequestsChartCtrl.$inject=["$scope","Stats","Util"],angular.module("revapm.Portal.Reports").directive("requestsChart",requestsChartDirective),requestsChartDirective.$inject=[]}(),function(){"use strict";function histCacheChartDirective(){return{restrict:"AE",
templateUrl:"parts/reports/charts/hits-cache.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"=",hideFilters:"="},controller:["$scope","Stats","$q","Util","filterGeneratorService",function($scope,Stats,$q,Util,filterGeneratorService){function generateFilterParams(filters){var params={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};return _.forEach(filters,function(val,key){-1!==_.indexOf(_filters_field_list,key)?"-"!==val&&""!==val&&(params[key]=val):"count_last_day"===key&&(params.from_timestamp=moment().subtract(val,"days").valueOf(),params.to_timestamp=Date.now(),delete params.count_last_day)}),params}function callbackOnGlobalFilterChange($event,eventDataObject){$scope.filters||($scope.filters={}),_.forIn(eventDataObject.data,function(value,key){$scope.filters[key]=value}),_.forIn($scope.filters,function(value,key){eventDataObject.data[key]||delete $scope.filters[key]}),$scope.reload()}var _filters_field_list=["from_timestamp","to_timestamp","country","device","os"];$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets),$scope.traffic={labels:[],series:[{name:"Cache Hit",data:[]},{name:"Cache Miss",data:[]}]};var info_=null,hit_=0,miss_=0,tickInterval_=10;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null);var rel_hit=0,rel_miss=0;miss_+hit_!==0&&(rel_hit=Math.round(1e3*hit_/(miss_+hit_))/10,rel_miss=Math.round(1e3*miss_/(miss_+hit_))/10),info_=this.renderer.label('Cache Hits <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(hit_)+'</span> Requests, <span style="font-weight: bold; color: #3c65ac;">'+rel_hit+'</span>%<br> Cache Miss <span style="font-weight: bold; color: darkred;">'+Util.formatNumber(miss_)+'</span> Requests, <span style="font-weight: bold; color: darkred;">'+rel_miss+"</span>%",this.xAxis[0].toPixels(0),3,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},filterGeneratorService.subscribeOnFilterChangeEvent($scope,callbackOnGlobalFilterChange),$scope.reload=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Cache Hit",data:[]},{name:"Cache Miss",data:[]}]},$q.all([Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters),{cache_code:"HIT"})).$promise,Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters),{cache_code:"MISS"})).$promise]).then(function(data){var interval=data[0].metadata.interval_sec||1800,offset=1e3*interval,labels=[],series=[{name:"Cache Hit",data:[]},{name:"Cache Miss",data:[]}];hit_=miss_=0,data[0].data&&data[0].data.length>0&&data[0].data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label}),hit_+=item.requests,series[0].data.push(item.requests/interval)}),data[1].data&&data[1].data.length>0&&data[1].data.forEach(function(item){miss_+=item.requests,series[1].data.push(item.requests/interval)}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("hitsCacheChart",histCacheChartDirective)}(),function(){"use strict";function httpStatusCodeChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/http-status-code.html",scope:{ngDomain:"=",statusCodes:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"="},controller:["$scope","Stats","$q","Util",function($scope,Stats,$q,Util){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets),$scope.traffic={labels:[],series:[]};var tickInterval_=10;$scope.chartOptions={yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reload=function(){if($scope.ngDomain&&$scope.ngDomain.id&&$scope.statusCodes&&$scope.statusCodes.length){$scope.traffic={labels:[],series:[]};var promises={},series=[],labels=[];$scope.statusCodes.forEach(function(code){code&&(promises[code]=Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{status_code:code})).$promise)}),$scope._loading=!0;var timeSet=!1;$q.all(promises).then(function(data){labels=[];var interval=1800;_.forEach(data,function(val,idx){data[idx].metadata.interval_sec&&(interval=data[idx].metadata.interval_sec);var offset=1e3*interval,results=[];data[idx].data&&data[idx].data.length>0&&(data[idx].data.forEach(function(item,idx,items){if(!timeSet){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label})}results.push(item.requests/interval)}),timeSet=!0),series.push({name:idx,data:results})}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.reload()}),$scope.$watch("statusCodes",function(){$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("httpStatusCodeChart",httpStatusCodeChartDirective)}(),function(){"use strict";function httpHttpsChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/http-https.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"="},controller:["$scope","Stats","$q","Util",function($scope,Stats,$q,Util){function generateFilterParams(filters){var params={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};return _.forEach(filters,function(val,key){-1!==_.indexOf(_filters_field_list,key)?"-"!==val&&""!==val&&(params[key]=val):"count_last_day"===key&&(params.from_timestamp=moment().subtract(val,"days").valueOf(),params.to_timestamp=Date.now(),delete params.count_last_day)}),params}var _filters_field_list=["from_timestamp","to_timestamp","country","device","os"];$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets),$scope.traffic={labels:[],series:[{name:"HTTP",data:[]},{name:"HTTPS",data:[]}]};var info_=null,https_=0,http_=0,tickInterval_=10;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null);var rel_http=0,rel_https=0;https_+http_!==0&&(rel_http=Math.round(1e3*http_/(https_+http_))/10,rel_https=Math.round(1e3*https_/(https_+http_))/10),info_=this.renderer.label('HTTPS <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(https_)+'</span> Requests, <span style="font-weight: bold; color: #3c65ac;">'+rel_https+'</span>%<br> HTTP <span style="font-weight: bold; color: black;">'+Util.formatNumber(http_)+'</span> Requests, <span style="font-weight: bold; color: black;">'+rel_http+"</span>%",this.xAxis[0].toPixels(0),3,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reload=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"HTTP",data:[]},{name:"HTTPS",data:[]}]},$q.all([Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters),{protocol:"HTTP"})).$promise,Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters),{protocol:"HTTPS"})).$promise]).then(function(data){var interval=data[0].metadata.interval_sec||1800,offset=1e3*interval,labels=[],series=[{name:"HTTP",data:[]},{name:"HTTPS",data:[]}];https_=http_=0,data[0].data&&data[0].data.length>0&&data[0].data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label}),http_+=item.requests,series[0].data.push(item.requests/interval)}),data[1].data&&data[1].data.length>0&&data[1].data.forEach(function(item){https_+=item.requests,series[1].data.push(item.requests/interval)}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("httpHttpsChart",httpHttpsChartDirective)}(),function(){"use strict";function requestStatusChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/request-status.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"="},controller:["$scope","Stats","$q","Util",function($scope,Stats,$q,Util){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets),$scope.traffic={labels:[],series:[{name:"Successful",data:[]},{name:"Failed",data:[]}]};var info_=null,success_=0,failure_=0,tickInterval_=10;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null);var rel_success=0,rel_failure=0;failure_+success_!==0&&(rel_success=Math.round(1e3*success_/(failure_+success_))/10,rel_failure=Math.round(1e3*failure_/(failure_+success_))/10),info_=this.renderer.label('Successful <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(success_)+'</span> Requests, <span style="font-weight: bold; color: #3c65ac;">'+rel_success+'</span>%<br> Failed <span style="font-weight: bold; color: darkred;">'+Util.formatNumber(failure_)+'</span> Requests, <span style="font-weight: bold; color: darkred;">'+rel_failure+"</span>%",this.xAxis[0].toPixels(0),3,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reload=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Successful",data:[]},{name:"Failed",data:[]}]},$q.all([Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{request_status:"OK"})).$promise,Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{request_status:"ERROR"})).$promise]).then(function(data){var interval=data[0].metadata.interval_sec||1800,offset=1e3*interval,labels=[],series=[{name:"Successful",data:[]},{name:"Failed",data:[]}];success_=failure_=0,data[0].data&&data[0].data.length>0&&data[0].data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label}),success_+=item.requests,series[0].data.push(item.requests/interval)}),data[1].data&&data[1].data.length>0&&data[1].data.forEach(function(item){failure_+=item.requests,series[1].data.push(item.requests/interval)}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("requestStatusChart",requestStatusChartDirective)}(),function(){"use strict";function proxyTrafficChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/proxy-traffic.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){function generateFilterParams(filters){var params={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};return _.forEach(filters,function(val,key){-1!==_.indexOf(_filters_field_list,key)?"-"!==val&&""!==val&&(params[key]=val):"count_last_day"===key&&(params.from_timestamp=moment().subtract(val,"days").valueOf(),params.to_timestamp=Date.now(),delete params.count_last_day)}),params}var _filters_field_list=["from_timestamp","to_timestamp","country","device","os"];$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets),$scope.traffic={labels:[],series:[{name:"Total",data:[]}]};var info_=null,rps_avg_=0,rps_max_=0,hits_total_=0,tickInterval_=10;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('RPS Avg <span style="font-weight: bold; color: #3c65ac;">'+Math.round(1e3*rps_avg_)/1e3+'</span> Max <span style="font-weight: bold; color: #3c65ac;">'+Math.round(1e3*rps_max_)/1e3+'</span><br>Hits Total <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(hits_total_)+"</span>",this.xAxis[0].toPixels(0),3,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reloadTrafficStats=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Total",data:[]}]},Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters))).$promise.then(function(data){if(rps_avg_=rps_max_=hits_total_=0,data.data&&data.data.length>0){var interval=data.metadata.interval_sec||1800,offset=1e3*interval,series=[{name:"Total",data:[]}],labels=[];data.data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label});var rps=item.requests/interval;rps_avg_+=rps,rps>rps_max_&&(rps_max_=rps),hits_total_+=item.requests,series[0].data.push(rps)}),rps_avg_/=data.data.length,$scope.traffic={labels:labels,series:series}}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reloadTrafficStats()})}]}}angular.module("revapm.Portal.Reports").directive("proxyTrafficChart",proxyTrafficChartDirective)}(),function(){"use strict";function fbtAverageChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/fbt-average.html",scope:{flCountry:"=",flOs:"=",flDevice:"=",ngDomain:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.delay="1",$scope.os="",$scope.country="",$scope.device="",$scope._loading=!1;var info_=null,avg_=0,median_=0,max_=0,tickInterval_=4;$scope.chartOptions={chart:{type:"column",events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('FBT Avg <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(avg_/1e3,1)+'</span> Median <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(median_/1e3,1)+'</span> Max <span style="font-weight: bold; color: black;">'+Util.formatNumber(max_/1e3,1)+"</span> ms",this.xAxis[0].toPixels(0),0,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"First Byte Time, ms"},labels:{formatter:function(){return Util.formatNumber(Math.round(this.value/1e3))}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y/1e3,2)+"</strong> ms"}}},$scope.reloadTrafficStats=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0;var opts={domainId:$scope.ngDomain.id,from_timestamp:moment().subtract($scope.delay,"days").valueOf(),to_timestamp:Date.now()};""!==$scope.country&&(opts.country=$scope.country),""!==$scope.device&&(opts.device=$scope.device),""!==$scope.os&&(opts.os=$scope.os),Stats.fbt_average(opts).$promise.then(function(data){var series=[{name:"Average FBT",data:[]}];if(data.data&&data.data.length>0){avg_=max_=median_=0;var labels=[],offset=1e3*(data.metadata.interval_sec||1800),cnt_=0;if(data.data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label}),max_<item.avg_fbt&&(max_=item.avg_fbt),item.requests?(avg_+=item.avg_fbt,++cnt_,series[0].data.push(item.avg_fbt)):series[0].data.push(null)}),$scope.traffic={labels:labels,series:series},cnt_){avg_/=cnt_;var avg_t=data.data.filter(function(item){return 0!==item.requests}).map(function(item){return item.avg_fbt}).sort(function(lhs,rhs){return lhs-rhs}),idx0=avg_t.length-1,idx1=Math.ceil(idx0/2);idx0=Math.floor(idx0/2),median_=idx0===idx1?avg_t[idx0]:(avg_t[idx0]+avg_t[idx1])/2}}else $scope.traffic={labels:[],series:series}})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reloadTrafficStats()})}]}}angular.module("revapm.Portal.Reports").directive("fbtAverageChart",fbtAverageChartDirective)}(),function(){"use strict";function fbtDistributionChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/fbt-distribution.html",scope:{flCountry:"=",flOs:"=",flDevice:"=",ngDomain:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.delay="24",$scope.os="",$scope.country="",$scope.device="",$scope._ims=300,$scope._loading=!1,$scope.chartOptions={chart:{type:"column"},yAxis:{title:{text:"Requests"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},tooltip:{formatter:function(){return"<strong>"+this.x+"÷"+(this.x+$scope._ims)+"</strong> ms<br/>Count: <strong>"+Util.formatNumber(this.y)+"</strong>"}},plotOptions:{column:{minPointLength:2,dataLabels:{enabled:!1}}}},$scope.reloadTrafficStats=function(){if($scope.ngDomain&&$scope.ngDomain.id){var opts={domainId:$scope.ngDomain.id,from_timestamp:moment().subtract($scope.delay,"hours").valueOf(),to_timestamp:Date.now(),interval_ms:50,limit_ms:1e4};""!==$scope.country&&(opts.country=$scope.country),""!==$scope.device&&(opts.device=$scope.device),""!==$scope.os&&(opts.os=$scope.os),$scope._loading=!0,Stats.fbt_distribution(opts).$promise.then(function(data){var series=[{name:"FBT Distribution",data:[]}];if(data.data&&data.data.length>0){var labels=[];$scope._ims=data.metadata.interval_ms||300,angular.forEach(data.data,function(data){labels.push(data.key/1e3),series[0].data.push(data.requests)}),$scope.traffic={labels:labels,series:series}}else $scope.traffic={labels:[],series:series}})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reloadTrafficStats()})}]}}angular.module("revapm.Portal.Reports").directive("fbtDistributionChart",fbtDistributionChartDirective)}(),function(){"use strict";function fbtHeatmapChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/fbt-heatmap.html",scope:{flCountry:"=",ngDomain:"="},controller:["$scope","Stats","HeatmapsDrawer","Util",function($scope,Stats,HeatmapsDrawer,Util){$scope.delay="24",$scope._loading=!1;var drawer=HeatmapsDrawer.create("#canvas-svg");$scope.reloadFBTStats=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0;var opts={domainId:$scope.ngDomain.id,from_timestamp:moment().subtract($scope.delay,"hours").valueOf(),to_timestamp:Date.now()};Stats.fbt_heatmap(opts).$promise.then(function(data){var world=[],usa=[];data.data&&data.data.length>0&&(data.data.forEach(function(item){var key=item.key.toUpperCase();world.push({name:$scope.flCountry[key]||item.key,id:key,value:item.fbt_avg_ms,tooltip:"Avg: <strong>"+Util.formatNumber(item.fbt_avg_ms)+"</strong> Min: <strong>"+Util.formatNumber(item.fbt_min_ms)+"</strong> Max: <strong>"+Util.formatNumber(item.fbt_max_ms)+"</strong> ms"}),"US"===key&&item.regions&&(usa=item.regions)}),usa=usa.map(function(item){return{id:item.key,name:item.key,value:item.fbt_avg_ms,tooltip:"Avg: <strong>"+Util.formatNumber(item.fbt_avg_ms)+"</strong> Min: <strong>"+Util.formatNumber(item.fbt_min_ms)+"</strong> Max: <strong>"+Util.formatNumber(item.fbt_max_ms)+"</strong> ms"}})),drawer.drawCurrentMap({world:world,usa:usa})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reloadFBTStats()})}]}}angular.module("revapm.Portal.Reports").directive("fbtHeatmapChart",fbtHeatmapChartDirective)}(),function(){"use strict";function topRequestsDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-requests.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now()},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.topObjects(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.path),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("topRequests",topRequestsDirective)}(),function(){"use strict";function topCacheMissDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-cache-miss.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now(),cache_code:"MISS"},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.topObjects(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.path),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("topCacheMiss",topCacheMissDirective)}(),function(){"use strict";function top404Directive(){return{restrict:"AE",templateUrl:"parts/reports/top/top-404.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now(),status_code:404},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.topObjects(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.path),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("top404",top404Directive)}(),function(){"use strict";function topRefererDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-referer.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now()},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.referer(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.key),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("topReferer",topRefererDirective)}(),function(){"use strict";function top5xxDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-5xx.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now()},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0;var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters),http_codes={500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",510:"Not Extended",511:"Network Authentication Required"};$scope.codes=[],Stats.top5xx(params).$promise.then(function(res){for(var code in res.data)$scope.codes.push({name:code+(http_codes[code]?" ("+http_codes[code]+")":""),count:res.data[code].count,requests:res.data[code].requests})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("top5xx",top5xxDirective)}(),function(){"use strict";function topFailedDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-failed.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now(),request_status:"ERROR"},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.topObjects(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.path),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("topFailed",topFailedDirective)}(),function(){"use strict";function HeatmapsDrawer(){function getConfig_(){return{credits:{enabled:!1},chart:{style:{fontFamily:"Verdana, Arial, Helvetica, sans-serif",fontSize:"12px"}},title:{text:null},mapNavigation:{enabled:!0,enableButtons:!0,enableMouseWheelZoom:!1,enableTouchZoom:!1,buttonOptions:{align:"left",verticalAlign:"bottom"}},colorAxis:{minColor:"#99CCFF",maxColor:"#0050A1",type:"logarithmic",tickPixelInterval:100},tooltip:{useHTML:!0,formatter:function(){return'<span style="font-weight: bold; color: #004090;">'+this.point.name+"</span><br>"+this.point.tooltip}},legend:{enabled:!0,itemDistance:60,symbolHeight:6,symbolWidth:400},series:[{name:"",borderColor:"white",states:{hover:{color:"#A9DCFF"}},dataLabels:{enabled:!1,formatter:function(){return this.point.labelrank&&this.point.name&&this.point.labelrank>1e6?this.point.name:null}},nullColor:"#B0B0B0"}]}}function Drawer(containerID){this.reInit(containerID),this.currentMap="",this.currentOpts={},this.currentData=null}return Drawer.prototype.reInit=function(containerID){if(!containerID)throw new Error("Drawer: containerID should be provided");this.destroy(),this.$el=$(containerID),this.$el.css({width:"100%","padding-bottom":"55%"}),this.$wrapper=$("<div></div>"),this.$el.append(this.$wrapper),this.$wrapper.css({position:"absolute",top:0,bottom:0,left:0,right:0}),this.$btn=$('<button style="position:absolute;top:0px;left:0px;" class="btn">Show USA Map</button>'),this.$el.append(this.$btn),this.$btn.on("click",function(){"world"===this.currentMap?this.drawUSAMap(this.currentData,this.currentOpts):this.drawWorldMap(this.currentData,this.currentOpts)}.bind(this))},Drawer.prototype.destroy=function(){this.$el&&(this.$wrapper.highcharts().destroy(),this.$wrapper.remove(),this.$btn.off(),this.$btn.remove(),this.$btn=null,this.$wrapper=null,this.$el=null)},Drawer.prototype.drawWorldMap=function(data,opts){
this.currentData=data,this.currentOpts=opts;var conf=getConfig_();conf.colorAxis.max=data.world.reduce(function(prev,curr){return void 0===curr.value||"--"===curr.id||curr.value<=prev?prev:curr.value},0),conf.colorAxis.min=data.world.reduce(function(prev,curr){return void 0===curr.value||"--"===curr.id||curr.value>=prev?prev:curr.value},conf.colorAxis.max),data.world&&data.world.length&&conf.colorAxis.min?conf.colorAxis.type="logarithmic":conf.colorAxis.type="linear",conf.series[0].joinBy=["iso-a2","id"],conf.series[0].data=data.world.map(function(item){return _.clone(item)}),conf.series[0].mapData=Highcharts.maps["custom/world-highres"],this.$wrapper.highcharts("Map",_.defaultsDeep({},opts||{},conf)),this.currentMap="world",this.$btn.html("Show USA Map")},Drawer.prototype.drawUSAMap=function(data,opts){this.currentData=data,this.currentOpts=opts;var conf=getConfig_();conf.colorAxis.max=data.usa.reduce(function(prev,curr){return void 0===curr.value||"--"===curr.id||curr.value<=prev?prev:curr.value},0),conf.colorAxis.min=data.usa.reduce(function(prev,curr){return void 0===curr.value||"--"===curr.id||curr.value>=prev?prev:curr.value},conf.colorAxis.max),conf.colorAxis.type="linear",conf.series[0].joinBy=["postal-code","id"],conf.series[0].data=data.usa.map(function(item){return _.clone(item)}),conf.series[0].mapData=Highcharts.maps["countries/us/us-all"],this.$wrapper.highcharts("Map",_.defaultsDeep({},opts||{},conf)),this.currentMap="usa",this.$btn.html("Show World Map")},Drawer.prototype.drawCurrentMap=function(data,opts){"usa"===this.currentMap?this.drawUSAMap(data,opts):this.drawWorldMap(data,opts)},{create:function(containerID){return new Drawer(containerID)}}}angular.module("revapm.Portal.Domains").factory("HeatmapsDrawer",HeatmapsDrawer)}(),function(){"use strict";function ReportsProxyTrafficController($scope,$rootScope,$localStorage,User,AlertService,Stats,Countries,$timeout,$state,$config){$scope.userService=User,$scope._loading=!0,$scope.domain=$rootScope.domain,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.pieOpts={scaleOverride:!0},$scope.os={labels:[],data:[]},$scope.device={labels:[],data:[]},$scope.country={labels:[],data:[]},$scope.statusCode={labels:[],data:[]},$scope.countries=Countries.query(),$scope.reloadOS=function(domainId){$scope.os={labels:[],data:[]},Stats.os({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.os.labels.push(os.key),$scope.os.data.push(os.count)})})},$scope.reloadDevice=function(domainId){$scope.device={labels:[],data:[]},Stats.device({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.device.labels.push(os.key),$scope.device.data.push(os.count)})})},$scope.reloadProtocol=function(domainId){$scope.protocol={labels:[],data:[]},Stats.protocol({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){var protocol="Unknows";80===os.key&&(protocol="HTTP"),443===os.key&&(protocol="HTTPS"),$scope.protocol.labels.push(protocol),$scope.protocol.data.push(os.count)})})},$scope.reloadHttpMethod=function(domainId){$scope.httpMethod={labels:[],data:[]},Stats.httpMethod({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.httpMethod.labels.push(os.key),$scope.httpMethod.data.push(os.count)})})},$scope.reloadHttpProtocol=function(domainId){$scope.httpProtocol={labels:[],data:[]},Stats.httpProtocol({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.httpProtocol.labels.push(os.key),$scope.httpProtocol.data.push(os.count)})})},$scope.reloadStatusCode=function(domainId){$scope.statusCode={labels:[],data:[]},Stats.statusCode({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&($scope.statusCode={labels:[],data:[]},angular.forEach(data.data,function(os){$scope.statusCode.labels.push(os.key),$scope.statusCode.data.push(os.count)}))})},$scope.reloadContentType=function(domainId){$scope.contentType={labels:[],data:[]},Stats.contentType({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.contentType.labels.push(os.key),$scope.contentType.data.push(os.count)})})},$scope.reloadCacheStatus=function(domainId){$scope.cacheStatus={labels:[],data:[]},Stats.cacheStatus({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.cacheStatus.labels.push(os.key),$scope.cacheStatus.data.push(os.count)})})},$scope.reloadCountry=function(domainId){$scope.country={labels:[],data:[]},Stats.country({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.country.labels.push(os.key),$scope.country.data.push(os.count)})})},$scope.reload=function(){$scope.reloadOS($scope.domain.id),$scope.reloadDevice($scope.domain.id),$scope.reloadCountry($scope.domain.id),$scope.reloadStatusCode($scope.domain.id)},$scope.onDomainSelected=function(){$scope.domain&&$scope.domain.id&&$scope.reload()}}ReportsProxyTrafficController.$inject=["$scope","$rootScope","$localStorage","User","AlertService","Stats","Countries","$timeout","$state","$config"],angular.module("revapm.Portal.Reports").controller("ReportsProxyTrafficController",ReportsProxyTrafficController)}(),function(){"use strict";function TopReportsTrafficController($scope,User,AlertService,Stats,Countries){$scope.userService=User,$scope._loading=!0,$scope.domain=null,$scope.domains=[],$scope.pieOpts={scaleOverride:!0},$scope.os=[],$scope.device=[],$scope.country=[],$scope.statusCode=[],$scope.requestStatus=[],$scope.countries=Countries.query(),$scope.delay="24",$scope.country_filter="",$scope.reloadOS=function(filters){$scope.os=[],Stats.os(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:"--"!==val.key?val.key:"Unknown",y:val.count})}),$scope.os=newData}})},$scope.reloadDevice=function(filters){$scope.device=[],Stats.device(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:"--"!==val.key?val.key:"Unknown",y:val.count})}),$scope.device=newData}})},$scope.reloadProtocol=function(filters){$scope.protocol=[],Stats.protocol(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){var protocol="Unknows";80!==val.key&&"80"!==val.key||(protocol="HTTP"),443!==val.key&&"443"!==val.key||(protocol="HTTPS"),newData.push({name:protocol,y:val.count})}),$scope.protocol=newData}})},$scope.reloadHttpMethod=function(filters){$scope.httpMethod=[],Stats.httpMethod(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.httpMethod=newData}})},$scope.reloadHttpProtocol=function(filters){$scope.httpProtocol=[],Stats.httpProtocol(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.httpProtocol=newData}})},$scope.reloadStatusCode=function(filters){$scope.statusCode=[],Stats.statusCode(filters).$promise.then(function(data){var newData=[];data.data&&data.data.length>0&&(angular.forEach(data.data,function(os){newData.push({name:os.key,y:os.count})}),$scope.statusCode=newData)})},$scope.reloadContentType=function(filters){$scope.contentType=[],Stats.contentType(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.contentType=newData}})},$scope.reloadCacheStatus=function(filters){$scope.cacheStatus=[],Stats.cacheStatus(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),2===newData.length&&(newData[0].y>0||newData[1].y>0)&&($scope.cacheStatus=newData)}})},$scope.reloadQUIC=function(filters){$scope.quic=[],Stats.quic(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:"-"===val.key?"Non-QUIC":val.key,y:val.count})}),$scope.quic=newData}})},$scope.reloadHTTP2=function(filters){$scope.http2=[],Stats.http2(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var http2=[];angular.forEach(data.data,function(val){http2.push({name:""===val.key?"Non-HTTP2":val.key.toUpperCase(),y:val.count})}),$scope.http2=http2}})},$scope.reloadCountry=function(filters){$scope.country=[],Stats.country(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){var name=$scope.countries[val.key.toUpperCase()]||"Unknown";newData.push({name:name,y:val.count})}),$scope.country=newData}})},$scope.reloadRequestStatus=function(filters){$scope.requestStatus=[],Stats.requestStatus(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var st=[{name:"Successfull",y:0},{name:"Failed",y:0}];angular.forEach(data.data,function(item){"OK"===item.key?st[0].y=item.count:st[1].y+=item.count}),$scope.requestStatus=st}})},$scope.reload=function(){var filters={domainId:$scope.domain.id,from_timestamp:moment().subtract($scope.delay,"hours").valueOf(),to_timestamp:Date.now()};$scope.country_filter&&(filters.country=$scope.country_filter),$scope.reloadOS(filters),$scope.reloadDevice(filters),$scope.reloadCountry(filters),$scope.reloadProtocol(filters),$scope.reloadHttpMethod(filters),$scope.reloadHttpProtocol(filters),$scope.reloadStatusCode(filters),$scope.reloadContentType(filters),$scope.reloadCacheStatus(filters),$scope.reloadQUIC(filters),$scope.reloadHTTP2(filters),$scope.reloadRequestStatus(filters)},User.getUserDomains(!0).then(function(domains){$scope.domains=domains})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.onDomainSelected=function(domain){$scope.domain&&$scope.domain.id&&$scope.reload()}}TopReportsTrafficController.$inject=["$scope","User","AlertService","Stats","Countries"],angular.module("revapm.Portal.Reports").controller("TopReportsTrafficController",TopReportsTrafficController)}(),function(){"use strict";function TopObjectsController($scope,User,AlertService,Stats,Countries,$q){$scope._loading=!0,$scope.domain=null,$scope.domains=[],$scope.countries=Countries.query(),$scope.os=[],$scope.devices=[],$scope.reload=function(){if($scope.domain&&$scope.domain.id){$scope.os=[],$scope.devices=[];var promises=[Stats.os({domainId:$scope.domain.id}).$promise,Stats.device({domainId:$scope.domain.id}).$promise];$q.all(promises).then(function(data){data&&data[0]&&data[1]&&data[0].data&&data[1].data&&(data[0].data.map(function(os){$scope.os.push(os.key)}),data[1].data.map(function(device){$scope.devices.push(device.key)}))})}},User.getUserDomains(!0).then(function(domains){$scope.domains=domains})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.onDomainSelected=function(){$scope.reload()}}TopObjectsController.$inject=["$scope","User","AlertService","Stats","Countries","$q"],angular.module("revapm.Portal.Reports").controller("TopObjectsController",TopObjectsController)}(),function(){"use strict";function FBTReportsController($scope,User,AlertService,Stats,Countries,$q){$scope._loading=!0,$scope.domain=null,$scope.domains=[],$scope.countries=Countries.query(),$scope.oses=[],$scope.devices=[],$scope.reload=function(){if($scope.domain&&$scope.domain.id){$scope.oses=[],$scope.devices=[];var promises=[Stats.os({domainId:$scope.domain.id}).$promise,Stats.device({domainId:$scope.domain.id}).$promise];$q.all(promises).then(function(data){if(data&&data[0]&&data[1]&&data[0].data&&data[1].data){var oses=[],devices=[];data[0].data.map(function(os){oses.push(os.key)}),data[1].data.map(function(device){devices.push(device.key)}),$scope.oses=oses,$scope.devices=devices}})}},User.getUserDomains(!0).then(function(domains){$scope.domains=domains})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.onDomainSelected=function(){$scope.reload()}}FBTReportsController.$inject=["$scope","User","AlertService","Stats","Countries","$q"],angular.module("revapm.Portal.Reports").controller("FBTReportsController",FBTReportsController)}(),function(){"use strict";function TrafficHeatmapsController($scope,HeatmapsDrawer,Countries,Stats,$q,Util){var hitsDrawer=HeatmapsDrawer.create("#canvas-svg-hits"),gbtDrawer=HeatmapsDrawer.create("#canvas-svg-gbt");$scope._loading=!1,$scope.domain=null,$scope.delay="24",$scope.countries=Countries.query(),$scope.reloadHitsCountry=function(domainId){return $scope._loading=!0,Stats.country({domainId:domainId,count:250,from_timestamp:moment().subtract($scope.delay||6,"hours").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){var world=[],usa=[];return data.data&&data.data.length>0&&(data.data.forEach(function(item){var key=item.key.toUpperCase();world.push({name:$scope.countries[key]||item.key,id:key,value:item.count,tooltip:"<strong>"+Util.convertValue(item.count)+"</strong> requests"}),"US"===key&&item.regions&&(usa=item.regions)}),usa=usa.map(function(item){return{id:item.key,name:item.key,value:item.count,tooltip:"<strong>"+Util.convertValue(item.count)+"</strong> requests"}})),{world:world,usa:usa}})},$scope.reloadGBTCountry=function(domainId){return $scope._loading=!0,Stats.gbt_country({domainId:domainId,count:250,from_timestamp:moment().subtract($scope.delay||6,"hours").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){var world=[],usa=[];return data.data&&data.data.length>0&&(data.data.forEach(function(item){var key=item.key.toUpperCase();world.push({name:$scope.countries[key]||item.key,id:key,value:item.sent_bytes,tooltip:"Sent: <strong>"+Util.humanFileSizeInGB(item.sent_bytes)+"</strong> Received: <strong>"+Util.humanFileSizeInGB(item.received_bytes)+"</strong>"}),"US"===key&&item.regions&&(usa=item.regions)}),usa=usa.map(function(item){return{id:item.key,name:item.key,value:item.sent_bytes,tooltip:"Sent: <strong>"+Util.humanFileSizeInGB(item.sent_bytes)+"</strong> Received: <strong>"+Util.humanFileSizeInGB(item.received_bytes)+"</strong>"}})),{world:world,usa:usa}})},$scope.onDomainSelect=function(){$scope.domain&&$scope.domain.id&&$q.all([$scope.reloadHitsCountry($scope.domain.id),$scope.reloadGBTCountry($scope.domain.id)]).then(function(data){hitsDrawer.drawCurrentMap(data[0]),gbtDrawer.drawCurrentMap(data[1])})["finally"](function(){$scope._loading=!1})}}TrafficHeatmapsController.$inject=["$scope","HeatmapsDrawer","Countries","Stats","$q","Util"],angular.module("revapm.Portal.Reports").controller("TrafficHeatmapsController",TrafficHeatmapsController)}(),function(){"use strict";function LMRTTHeatmapsController($scope,HeatmapsDrawer,Countries,Stats){$scope._loading=!1,$scope.domain=null,$scope.delay="24",$scope.countries=Countries.query();var drawer=HeatmapsDrawer.create("#canvas-svg");$scope.reloadCountry=function(domainId){return $scope._loading=!0,Stats.lm_rtt_country({domainId:domainId,count:250,from_timestamp:moment().subtract($scope.delay||6,"hours").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){var world=[],usa=[];return data.data&&data.data.length>0&&(data.data.forEach(function(item){var key=item.key.toUpperCase();world.push({name:$scope.countries[key]||item.key,id:key,value:item.lm_rtt_avg_ms,tooltip:"Avg: <strong>"+item.lm_rtt_avg_ms+"</strong> Min: <strong>"+item.lm_rtt_min_ms+"</strong> Max: <strong>"+item.lm_rtt_max_ms+"</strong> ms"}),"US"===key&&item.regions&&(usa=item.regions)}),usa=usa.map(function(item){return{id:item.key,name:item.key,value:item.lm_rtt_avg_ms,tooltip:"Avg: <strong>"+item.lm_rtt_avg_ms+"</strong> Min: <strong>"+item.lm_rtt_min_ms+"</strong> Max: <strong>"+item.lm_rtt_max_ms+"</strong> ms"}})),{world:world,usa:usa}})["finally"](function(){$scope._loading=!1})},$scope.onDomainSelect=function(){$scope.domain&&$scope.domain.id&&$scope.reloadCountry($scope.domain.id).then(function(lm_rtt_data){drawer.drawCurrentMap(lm_rtt_data)})}}LMRTTHeatmapsController.$inject=["$scope","HeatmapsDrawer","Countries","Stats"],angular.module("revapm.Portal.Reports").controller("LMRTTHeatmapsController",LMRTTHeatmapsController)}(),function(angular,_,empty){"use strict";function GeneralCtrl($scope,Stats,filterGeneratorConst,Countries,filterGeneratorService){function init(){filterGeneratorService.subscribeOnFilterChangeEvent($scope,function($event,filterData){_.forEach(PIE_CHART_FILTERS_FIELDS,function(objKey){filterData.data[objKey]?filter[objKey]=filterData.data[objKey]:delete filter[objKey]}),filter.from_timestamp<moment().subtract(1,"days").valueOf()&&(filter.from_timestamp=moment().subtract(1,"days").valueOf()),filter.to_timestamp>Date.now()&&(filter.to_timestamp=Date.now()),getFilterData()})}function onDomainChange(){vm.model.domain&&(filter.domainId=vm.model.domain.id,getFilterData())}function getFilterData(){reloadCacheStatus(filter),reloadHttpMethod(filter),reloadProtocol(filter),getTotal()}function reloadCacheStatus(filters){filters=filters,$scope.cacheStatus=[],Stats.cacheStatus(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];_.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.cacheStatus=newData}})}function reloadHttpMethod(filters){filters=filters,$scope.httpMethod=[],Stats.httpMethod(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];_.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.httpMethod=newData}})}function reloadProtocol(filters){$scope.protocol=[],Stats.protocol(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];_.forEach(data.data,function(val){var protocol="Unknows";80===val.key&&(protocol="HTTP"),443===val.key&&(protocol="HTTPS"),newData.push({name:protocol,y:val.count})}),$scope.protocol=newData}})}function getTotal(){vm.model.total={traficThisMonth:123,cacheHitRate:68,failedRequests:.01,ajaxHttpResponses:.01,averageResponseTime:1243,averageTTFBTime:45}}var PIE_CHART_FILTERS_FIELDS=["from_timestamp","to_timestamp","country"],vm=this,filter={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};vm.model={total:{},domain:empty,filtersList:[filterGeneratorConst.COUNTRIES,filterGeneratorConst.OS,filterGeneratorConst.DEVICES]},vm.actions={onDomainChange:onDomainChange},init()}angular.module("revapm.Portal.Reports").controller("GeneralCtrl",GeneralCtrl),GeneralCtrl.$inject=["$scope","Stats","filterGeneratorConst","Countries","filterGeneratorService"]}(angular,_),function(angular,_,empty){"use strict";function EdgeCacheReportsController($scope,Stats,filterGeneratorConst,filterGeneratorService){function init(){filterGeneratorService.subscribeOnFilterChangeEvent($scope,function($event,filterData){_.forEach(CHART_FILTERS_FIELDS,function(objKey){filterData.data[objKey]?filter[objKey]=filterData.data[objKey]:delete filter[objKey]}),filter.from_timestamp<moment().subtract(1,"days").valueOf()&&(filter.from_timestamp=moment().subtract(1,"days").valueOf()),filter.to_timestamp>Date.now()&&(filter.to_timestamp=Date.now()),getFilterData()})}function onDomainChange(){vm.model.domain&&(filter.domainId=vm.model.domain.id,getFilterData())}function getFilterData(){reloadCacheStatus(filter),getTotal()}function reloadCacheStatus(filters){filters=filters,$scope.cacheStatus=[],Stats.cacheStatus(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];_.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.cacheStatus=newData}})}function getTotal(){vm.model.total={traficThisMonth:123,cacheHitRate:68,failedRequests:.01,ajaxHttpResponses:.01,averageResponseTime:1243,averageTTFBTime:45}}var CHART_FILTERS_FIELDS=["from_timestamp","to_timestamp","country"],vm=this,filter={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};vm.model={total:{},domain:empty,filtersList:[filterGeneratorConst.COUNTRIES,filterGeneratorConst.OS,filterGeneratorConst.DEVICES]},vm.actions={onDomainChange:onDomainChange},init()}angular.module("revapm.Portal.Reports").controller("EdgeCacheReportsController",EdgeCacheReportsController),EdgeCacheReportsController.$inject=["$scope","Stats","filterGeneratorConst","filterGeneratorService"]}(angular,_),function(){"use strict";angular.module("revapm.Portal.Mobile",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","chart.js"])}(),function(){"use strict";function ReportsRoutes($stateProvider){$stateProvider.state("index.mobile.traffic",{url:"/mobile/traffic",views:{main:{controller:"MobileTrafficController",templateUrl:"parts/reports/mobile-traffic.html"}}}).state("index.mobile.tops",{url:"/mobile/tops",views:{main:{controller:"MobileTopsController",templateUrl:"parts/reports/mobile-tops.html"}}}).state("index.mobile.objects",{url:"/mobile/top_objects",views:{main:{controller:"MobileTopObjectsController",templateUrl:"parts/reports/mobile-top-objects.html"}}}).state("index.mobile.distributions",{url:"/mobile/distributions",views:{main:{controller:"MobileDistributionsController",templateUrl:"parts/reports/mobile-distributions.html"}}}).state("index.mobile.ab",{url:"/mobile/ab",views:{main:{controller:"MobileAbController",templateUrl:"parts/reports/mobile-ab.html"}}})}ReportsRoutes.$inject=["$stateProvider"],angular.module("revapm.Portal.Mobile").config(ReportsRoutes)}(),function(){"use strict";function MobileTrafficController($scope,User,AlertService,Stats){$scope._loading=!0,$scope.application=null;var u=User.getUser();$scope.account=u.companyId[0]||null,$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],$scope.networks=["Cellular","WiFi"],$scope.reloadDirs=function(){$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],($scope.account||$scope.application&&$scope.application.app_id)&&($scope._loading=!0,Stats.sdk_dirs({account_id:$scope.account,app_id:$scope.application&&$scope.application.app_id||null,from_timestamp:moment().subtract(7,"days").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){data.data&&($scope.oses=data.data.oses,$scope.devices=data.data.devices,$scope.countries=data.data.countries,$scope.operators=data.data.operators)})["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1}))}}MobileTrafficController.$inject=["$scope","User","AlertService","Stats"],angular.module("revapm.Portal.Mobile").controller("MobileTrafficController",MobileTrafficController)}(),function(){"use strict";function mobileRpsChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="Requests Per Second Graph",$scope.span="1",$scope._loading=!1,$scope.hits={labels:[],series:[]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null};var info_=null,rps_avg_=0,rps_max_=0,hits_total_=0,tickInterval_=4;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('RPS Avg <span style="font-weight: bold; color: #3c65ac;">'+Math.round(1e3*rps_avg_)/1e3+'</span> Max <span style="font-weight: bold; color: #3c65ac;">'+Math.round(1e3*rps_max_)/1e3+'</span><br>Hits Total <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(hits_total_)+"</span>",this.xAxis[0].toPixels(0),0,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reload=function(){return $scope._loading=!0,$scope.hits={labels:[],series:[{name:"RPS",data:[]}]},$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_flow($scope.filters).$promise.then(function(data){var hits_series=[{name:"RPS",data:[]}];if(rps_avg_=rps_max_=hits_total_=0,data.data&&data.data.length>0){var labels=[],interval=data.metadata.interval_sec||1800,offset=1e3*interval;data.data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label});var rps=item.hits/interval;rps_avg_+=rps,rps>rps_max_&&(rps_max_=rps),hits_series[0].data.push(Math.round(1e3*rps)/1e3),hits_total_+=item.hits}),rps_avg_/=data.data.length,hits_total_&&($scope.hits={labels:labels,series:hits_series})}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileRpsChart",mobileRpsChartDirective)}(),function(){"use strict";function mobileBwChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="Bandwidth Usage Graph",$scope.span="1",$scope._loading=!1,$scope.hits={labels:[],series:[]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null};var info_=null,traffic_avg_=0,traffic_max_=0,traffic_total_=0,hits_total_=0,tickInterval_=4;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('Traffic Level Avg <span style="font-weight: bold; color: #3c65ac;">'+Util.convertTraffic(traffic_avg_)+'</span> Max <span style="font-weight: bold; color: #3c65ac;">'+Util.convertTraffic(traffic_max_)+'</span><br>Traffic Total <span style="font-weight: bold; color: #3c65ac;">'+Util.humanFileSizeInGB(traffic_total_,3)+"</span>",this.xAxis[0].toPixels(0),0,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Bandwidth"},labels:{formatter:function(){return Util.convertTraffic(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.convertTraffic(this.y)+"</strong>"}}},$scope.reload=function(){return $scope._loading=!0,$scope.hits={labels:[],series:[{name:"Incoming Bandwidth",data:[]},{name:"Outgoing Bandwidth",data:[]}]},$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_flow($scope.filters).$promise.then(function(data){var hits_series=[{name:"Incoming Bandwidth",data:[]},{name:"Outgoing Bandwidth",data:[]}];if(hits_total_=traffic_total_=traffic_max_=traffic_avg_=0,data.data&&data.data.length>0){var labels=[],interval=data.metadata.interval_sec||1800,offset=1e3*interval;data.data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label});var sent_bw=item.sent_bytes/interval;hits_series[0].data.push(Math.round(1e3*item.received_bytes/interval)/1e3),hits_series[1].data.push(Math.round(1e3*sent_bw)/1e3),hits_total_+=item.received_bytes+item.sent_bytes,traffic_total_+=item.sent_bytes,sent_bw>traffic_max_&&(traffic_max_=sent_bw),traffic_avg_+=sent_bw}),traffic_avg_/=data.data.length,hits_total_&&($scope.hits={labels:labels,series:hits_series})}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileBwChart",mobileBwChartDirective)}(),function(){"use strict";function mobileHttpCodesChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="HTTP Status Codes Graph",$scope.span="1",$scope._loading=!1,$scope.hits={labels:[],series:[]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),report_type:"status_code",os:null,device:null,country:null,operator:null,network:null};var tickInterval_=4;$scope.chartOptions={yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reload=function(){return $scope._loading=!0,$scope.hits={labels:[],series:[]},$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_agg_flow($scope.filters).$promise.then(function(data){if(data.data&&data.data.length>0){var hits_series=[],labels=[],interval=data.metadata.interval_sec||1800,offset=1e3*interval,labels_filled_up=!1;angular.forEach(data.data,function(code){for(var s={name:""+code.key,data:[],visible:!1},i=0,len=code.flow.length;len>i;++i){var item=code.flow[i];if(!labels_filled_up){var label,val=moment(item.time+offset);label=i%tickInterval_?"":0===i||new Date(item.time+offset).getDate()!==new Date(code.flow[i-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label})}var rps=Math.round(1e3*item.hits/interval)/1e3;s.data.push(rps),rps>.01&&(s.visible=!0)}hits_series.push(s),labels_filled_up=!0}),hits_series[0].visible=!0,$scope.hits={labels:labels,series:hits_series}}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){
($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileHttpCodesChart",mobileHttpCodesChartDirective)}(),function(){"use strict";function mobileTopObjectsDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-top-objects.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"=",reportType:"@",heading:"@"},controller:["$scope","Stats",function($scope,Stats){$scope.span="24",$scope._loading=!1,$scope.items=[],$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null,count:10},$scope.reportType&&($scope.filters.report_type=$scope.reportType),$scope.reload=function(){return $scope._loading=!0,$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,$scope.items=[],Stats.sdk_top_objects($scope.filters).$promise.then(function(data){$scope.items=data.data})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("mobileTopObjects",mobileTopObjectsDirective)}(),function(){"use strict";function mobileTopObjectsTimeDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-top-objects-time.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"=",reportType:"@",heading:"@"},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.span="24",$scope._loading=!1,$scope.items=[],$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null,count:10},$scope.filters.report_type=$scope.reportType,$scope.reload=function(){return $scope._loading=!0,$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,$scope.items=[],Stats.sdk_top_objects_time($scope.filters).$promise.then(function(data){for(var i=0,len=data.data.length;len>i;++i)data.data[i].val=Util.formatNumber(data.data[i].val,0);$scope.items=data.data})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("mobileTopObjectsTime",mobileTopObjectsTimeDirective)}(),function(){"use strict";function mobileTopObjects5xxDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-top-objects-5xx.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"=",heading:"@"},controller:["$scope","Stats",function($scope,Stats){$scope.span="24",$scope._loading=!1;var http_codes={500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",510:"Not Extended",511:"Network Authentication Required"};$scope.items=[],$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null,count:10},$scope.reload=function(){return $scope._loading=!0,$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,$scope.items=[],Stats.sdk_top_objects_5xx($scope.filters).$promise.then(function(data){for(var items=[],i=0,len=data.data.length;len>i;++i){var item=data.data[i];items.push({key:item.key+(http_codes[item.key]?" ("+http_codes[item.key]+")":""),count:item.count,items:item.items})}$scope.items=items})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("mobileTopObjects5xx",mobileTopObjects5xxDirective)}(),function(){"use strict";function MobileTopsController($scope,$q,User,AlertService,Stats,Countries,Util){$scope._loading=!1,$scope.application=null;var u=User.getUser();$scope.account=u.companyId[0]||null,$scope.countries=Countries.query(),$scope.country_hits=[],$scope.country_users=[],$scope.country_gbt=[],$scope.os_hits=[],$scope.os_users=[],$scope.os_gbt=[],$scope.device_hits=[],$scope.device_users=[],$scope.device_gbt=[],$scope.operator_hits=[],$scope.operator_users=[],$scope.operator_gbt=[],$scope.network_hits=[],$scope.network_users=[],$scope.network_gbt=[],$scope.domain_hits=[],$scope.domain_gbt=[],$scope.status_code_hits=[],$scope.span="24",$scope.gbtChartOpts={tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,1)+"% ("+Util.humanFileSize(this.y,2)+")"}}},$scope.hitsChartOpts={tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,1)+"% ("+Highcharts.numberFormat(this.y,0,".","'")+" hits)"}}},$scope.usersChartOpts={tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,1)+"% ("+Highcharts.numberFormat(this.y,0,".","'")+" users)"}}},$scope.reloadOne=function(type,name,count,filters){return $scope[name+"_"+type]=[],filters.report_type=name,filters.count=count,Stats["sdk_top_"+type](filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(item){"country"===name&&(item.key=$scope.countries[item.key.toUpperCase()]||item.key),newData.push({name:item.key,y:"gbt"===type?item.received_bytes:item.count})}),$scope[name+"_"+type]=newData}})},$scope.reloadOther=function(type,name,count,filters){return $scope[name+"_"+type]=[],filters.report_type=name,filters.count=count,Stats.sdk_distributions(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(item){newData.push({name:item.key,y:"gbt"===type?item.received_bytes+item.sent_bytes:item.count})}),$scope[name+"_"+type]=newData}})},$scope.reload=function(){if($scope.account||$scope.application&&$scope.application.app_id){var filters={account_id:$scope.account,app_id:$scope.application&&$scope.application.app_id||null,from_timestamp:moment().subtract($scope.span,"hours").valueOf(),to_timestamp:Date.now()};return $scope._loading=!0,$q.all([$scope.reloadOne("hits","country",20,filters),$scope.reloadOne("users","country",20,filters),$scope.reloadOne("gbt","country",20,filters),$scope.reloadOne("hits","os",10,filters),$scope.reloadOne("users","os",10,filters),$scope.reloadOne("gbt","os",10,filters),$scope.reloadOne("hits","device",20,filters),$scope.reloadOne("users","device",20,filters),$scope.reloadOne("gbt","device",20,filters),$scope.reloadOne("hits","operator",20,filters),$scope.reloadOne("users","operator",20,filters),$scope.reloadOne("gbt","operator",20,filters),$scope.reloadOne("hits","network",2,filters),$scope.reloadOne("users","network",2,filters),$scope.reloadOne("gbt","network",2,filters),$scope.reloadOther("gbt","domain",10,filters),$scope.reloadOther("hits","domain",10,filters),$scope.reloadOther("hits","status_code",10,filters)])["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1})}}}MobileTopsController.$inject=["$scope","$q","User","AlertService","Stats","Countries","Util"],angular.module("revapm.Portal.Mobile").controller("MobileTopsController",MobileTopsController)}(),function(){"use strict";function MobileDistributionsController($scope,$q,User,AlertService,Stats,Util){$scope._loading=!0,$scope.application=null;var u=User.getUser();$scope.account=u.companyId[0]||null,$scope.destination_hits=[],$scope.destination_gbt=[],$scope.transport_hits=[],$scope.transport_gbt=[],$scope.status_hits=[],$scope.status_gbt=[],$scope.cache_hits=[],$scope.cache_gbt=[],$scope.domain_hits=[],$scope.domain_gbt=[],$scope.status_code_hits=[],$scope.span="24",$scope.gbtChartOpts={tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,1)+"% ("+Util.humanFileSize(this.y,2)+")"}}},$scope.hitsChartOpts={tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,1)+"% ("+Highcharts.numberFormat(this.y,0,".","'")+" hits)"}}},$scope.reloadTwo=function(name,filters){return $scope[name+"_hits"]=[],$scope[name+"_gbt"]=[],filters.report_type=name,Stats.sdk_distributions(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var hits=[],gbt=[];angular.forEach(data.data,function(item){hits.push({name:item.key,y:item.count}),gbt.push({name:item.key,y:item.received_bytes})}),$scope[name+"_hits"]=hits,$scope[name+"_gbt"]=gbt}})},$scope.reload=function(){if($scope.account||$scope.application&&$scope.application.app_id){var filters={account_id:$scope.account,app_id:$scope.application&&$scope.application.app_id||null,from_timestamp:moment().subtract($scope.span,"hours").valueOf(),to_timestamp:Date.now(),count:10};$scope._loading=!0,$q.all([$scope.reloadTwo("destination",filters),$scope.reloadTwo("transport",filters),$scope.reloadTwo("status",filters),$scope.reloadTwo("cache",filters)])["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1})}}}MobileDistributionsController.$inject=["$scope","$q","User","AlertService","Stats","Util"],angular.module("revapm.Portal.Mobile").controller("MobileDistributionsController",MobileDistributionsController)}(),function(){"use strict";function MobileTopObjectsController($scope,User,AlertService,Stats,Util){$scope._loading=!0,$scope.application=null;var u=User.getUser();$scope.account=u.companyId[0]||null,$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],$scope.networks=["Cellular","WiFi"],$scope.reloadDirs=function(){($scope.account||$scope.application&&$scope.application.app_id)&&($scope._loading=!0,$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],Stats.sdk_dirs({account_id:$scope.account,app_id:$scope.application&&$scope.application.app_id||null,from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){data.data&&($scope.oses=data.data.oses,$scope.devices=data.data.devices,$scope.countries=data.data.countries,$scope.operators=data.data.operators)})["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1}))}}MobileTopObjectsController.$inject=["$scope","User","AlertService","Stats","Util"],angular.module("revapm.Portal.Mobile").controller("MobileTopObjectsController",MobileTopObjectsController)}(),function(){"use strict";function MobileAbController($scope,User,AlertService,Stats){$scope._loading=!0,$scope.application=null;var u=User.getUser();$scope.account=u.companyId[0]||null,$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],$scope.networks=["Cellular","WiFi"],$scope.reloadDirs=function(){$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],($scope.account||$scope.application&&$scope.application.app_id)&&($scope._loading=!0,Stats.sdk_dirs({account_id:$scope.account,app_id:$scope.application&&$scope.application.app_id||null,from_timestamp:moment().subtract(7,"days").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){data.data&&($scope.oses=data.data.oses,$scope.devices=data.data.devices,$scope.countries=data.data.countries,$scope.operators=data.data.operators)})["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1}))}}MobileAbController.$inject=["$scope","User","AlertService","Stats"],angular.module("revapm.Portal.Mobile").controller("MobileAbController",MobileAbController)}(),function(){"use strict";function mobileAbFbtChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flDisabled:"=",flNetworks:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="First Byte Time Graph",$scope.span="1",$scope._loading=!1;var info_=null,rev_avg_=0,origin_avg_=0,rev_median_=0,origin_median_=0,imp_avg_=0,imp_median_=0,tickInterval_=4;$scope.chartOptions={chart:{type:"column",events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('Origin Avg <span style="font-weight: bold; color: #3c65ac;">'+origin_avg_+'</span> Median <span style="font-weight: bold; color: #3c65ac;">'+origin_median_+'</span> ms<br>RevAPM Avg <span style="font-weight: bold; color: black;">'+rev_avg_+'</span> Median <span style="font-weight: bold; color: black;">'+rev_median_+'</span> ms<br>Improvement Avg <span style="font-weight: bold; color: darkred;">'+imp_avg_+'</span> Median <span style="font-weight: bold; color: darkred;">'+imp_median_+"</span> %",this.xAxis[0].toPixels(0),0,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"FBT ms"},labels:{formatter:function(){return Util.formatNumber(this.value,1)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,1)+"</strong>"}}},$scope.hits={labels:[],series:[{name:"Origin, Avg",data:[],color:"#3c65ac",marker:{radius:4,symbol:"circle"}},{name:"Origin, Min",data:[],color:"#7cb5ec",marker:{radius:2,symbol:"circle"},visible:!1},{name:"Origin, Max",data:[],color:"#7cb5ec",marker:{radius:2,symbol:"circle"},visible:!1},{name:"RevAPM, Avg",data:[],color:"#000000",marker:{radius:4,symbol:"diamond"}},{name:"RevAPM, Min",data:[],color:"#808080",marker:{radius:2,symbol:"diamond"},visible:!1},{name:"RevAPM, Max",data:[],color:"#808080",marker:{radius:2,symbol:"diamond"},visible:!1}]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null},$scope.reload=function(){return $scope._loading=!0,$scope.hits.labels=[],$scope.hits.series[0].data=[],$scope.hits.series[1].data=[],$scope.hits.series[2].data=[],$scope.hits.series[3].data=[],$scope.hits.series[4].data=[],$scope.hits.series[5].data=[],$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_ab_fbt($scope.filters).$promise.then(function(data){if(data.data&&data.data.length>0){var labels=[],hits={rev_edge:{min:[],max:[],avg:[]},origin:{min:[],max:[],avg:[]}},interval=data.metadata.interval_sec||1800,offset=1e3*interval,labels_filled=!1;data.data.forEach(function(dest){dest.items.forEach(function(item,idx,items){if(!labels_filled){var label,val=moment(item.key+offset);label=idx%tickInterval_?"":0===idx||new Date(item.key+offset).getDate()!==new Date(items[idx-tickInterval_].key+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label})}hits[dest.key].max.push(item.fbt_max),hits[dest.key].min.push(item.fbt_min),hits[dest.key].avg.push(item.fbt_average)}),labels_filled=!0}),$scope.hits.labels=labels,$scope.hits.series[0].data=hits.origin.avg,$scope.hits.series[1].data=hits.origin.min,$scope.hits.series[2].data=hits.origin.max,$scope.hits.series[3].data=hits.rev_edge.avg,$scope.hits.series[4].data=hits.rev_edge.min,$scope.hits.series[5].data=hits.rev_edge.max;var avg_t=hits.origin.avg.filter(function(item){return null!=item});origin_avg_=avg_t.reduce(function(prev,curr){return prev+curr}),origin_avg_/=avg_t.length,avg_t.sort(function(lhs,rhs){return lhs-rhs});var idx0=avg_t.length-1,idx1=Math.ceil(idx0/2);idx0=Math.floor(idx0/2),origin_median_=idx0===idx1?avg_t[idx0]:(avg_t[idx0]+avg_t[idx1])/2,avg_t=hits.rev_edge.avg.filter(function(item){return null!=item}),rev_avg_=avg_t.reduce(function(prev,curr){return prev+curr}),rev_avg_/=avg_t.length,avg_t.sort(function(lhs,rhs){return lhs-rhs}),idx0=avg_t.length-1,idx1=Math.ceil(idx0/2),idx0=Math.floor(idx0/2),rev_median_=idx0===idx1?avg_t[idx0]:(avg_t[idx0]+avg_t[idx1])/2,imp_avg_=Math.round((origin_avg_-rev_avg_)/origin_avg_*1e3)/10,rev_avg_=Math.round(100*rev_avg_)/100,origin_avg_=Math.round(100*origin_avg_)/100,imp_median_=Math.round((origin_median_-rev_median_)/origin_median_*1e3)/10,origin_median_=Math.round(100*origin_median_)/100,rev_median_=Math.round(100*rev_median_)/100}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileAbFbtChart",mobileAbFbtChartDirective)}(),function(){"use strict";function mobileAbFbtDistributionChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flDisabled:"=",flNetworks:"=",flInterval:"@",flLimit:"@"},controller:["$scope","Stats","Util",function($scope,Stats,Util){var _interval=parseInt($scope.flInterval||100),_limit=parseInt($scope.flLimit||5e3);$scope.heading="First Byte Time Values Distribution Graph",$scope.span="1",$scope._loading=!1,$scope.chartOptions={chart:{type:"column"},yAxis:{title:{text:"Hits"},labels:{formatter:function(){return Util.formatNumber(this.value,0)}}},xAxis:{title:{text:"FBT ms",align:"low"}},legend:{margin:0},tooltip:{formatter:function(){return"<strong>"+this.x+"÷"+(this.x+_interval)+"</strong> ms<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,0)+"</strong> hits"}}},$scope.hits={labels:[],series:[{name:"Origin",data:[],color:Highcharts.getOptions().colors[0],marker:{radius:4,symbol:"circle"}},{name:"RevAPM",data:[],color:Highcharts.getOptions().colors[1],marker:{radius:4,symbol:"diamond"}}]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null,interval_ms:_interval,limit_ms:_limit},$scope.reload=function(){return $scope._loading=!0,$scope.hits.labels=[],$scope.hits.series[0].data=[],$scope.hits.series[1].data=[],$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_ab_fbt_distribution($scope.filters).$promise.then(function(data){if(data.data&&data.data.length>0){var labels=[],hits={rev_edge:[],origin:[]},labels_filled=!1;angular.forEach(data.data,function(dest){angular.forEach(dest.items,function(item){labels_filled||labels.push(item.key),hits[dest.key].push(item.count)}),labels_filled=!0}),$scope.hits.labels=labels,$scope.hits.series[0].data=hits.origin,$scope.hits.series[1].data=hits.rev_edge}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileAbFbtDistributionChart",mobileAbFbtDistributionChartDirective)}(),function(){"use strict";function mobileAbErrorsChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flDisabled:"=",flNetworks:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="SDK Failed Requests Graph",$scope.span="1",$scope._loading=!1;var tickInterval_=4;$scope.chartOptions={yAxis:{title:{text:"Errors Count"},labels:{formatter:function(){return Util.formatNumber(this.value,0)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,0)+"</strong>"}}},$scope.hits={labels:[],series:[{name:"Origin",data:[],color:Highcharts.getOptions().colors[0],marker:{radius:4,symbol:"circle"}},{name:"RevAPM",data:[],color:Highcharts.getOptions().colors[1],marker:{radius:4,symbol:"diamond"}}]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null},$scope.reload=function(){return $scope._loading=!0,$scope.hits.labels=[],$scope.hits.series[0].data=[],$scope.hits.series[1].data=[],$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_ab_errors($scope.filters).$promise.then(function(data){if(data.data&&data.data.length>0){var labels=[],hits={rev_edge:[],origin:[]},interval=data.metadata.interval_sec||1800,offset=1e3*interval,labels_filled=!1;data.data.forEach(function(dest){dest.items.forEach(function(item,idx,items){if(!labels_filled){var label,val=moment(item.key+offset);label=idx%tickInterval_?"":0===idx||new Date(item.key+offset).getDate()!==new Date(items[idx-tickInterval_].key+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label})}hits[dest.key].push(item.count)}),labels_filled=!0}),$scope.hits.labels=labels,$scope.hits.series[0].data=hits.origin,$scope.hits.series[1].data=hits.rev_edge,0===hits.origin.length&&($scope.hits.series[0].visible=!1),0===hits.rev_edge.length&&($scope.hits.series[1].visible=!1)}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileAbErrorsChart",mobileAbErrorsChartDirective)}(),function(){"use strict";function mobileAbSpeedChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flDisabled:"=",flNetworks:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="Average Request Speed Graph",$scope.span="1",$scope._loading=!1;var lbl_=null,rev_avg_=0,origin_avg_=0,imp_avg_=0,tickInterval_=4;$scope.chartOptions={chart:{type:"column",events:{redraw:function(){lbl_&&(lbl_.destroy(),lbl_=null),lbl_=this.renderer.label('Origin Avg <span style="font-weight: bold; color: #3c65ac;">'+origin_avg_+'</span><br>RevAPM Avg <span style="font-weight: bold; color: black;">'+rev_avg_+'</span><br>Improvement <span style="font-weight: bold; color: darkred;">'+imp_avg_+"</span> %",this.xAxis[0].toPixels(0),0,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Speed"},labels:{formatter:function(){return Util.convertTraffic(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.convertTraffic(this.y)+"</strong>"}}},$scope.hits={labels:[],series:[{name:"Origin",data:[],color:Highcharts.getOptions().colors[0],marker:{radius:4,symbol:"circle"}},{name:"RevAPM",data:[],color:Highcharts.getOptions().colors[1],marker:{radius:4,symbol:"diamond"}}]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null},$scope.reload=function(){return $scope._loading=!0,$scope.hits.labels=[],$scope.hits.series[0].data=[],$scope.hits.series[1].data=[],$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_ab_speed($scope.filters).$promise.then(function(data){if(data.data&&data.data.length>0){var labels=[],hits={rev_edge:[],origin:[]},interval=data.metadata.interval_sec||1800,offset=1e3*interval,labels_filled=!1;data.data.forEach(function(dest){dest.items.forEach(function(item,idx,items){if(!labels_filled){var label,val=moment(item.key+offset);label=idx%tickInterval_?"":0===idx||new Date(item.key+offset).getDate()!==new Date(items[idx-tickInterval_].key+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label})}hits[dest.key].push(item.count?1e3*item.sent_bytes/item.time_spent_ms:null)}),labels_filled=!0}),$scope.hits.labels=labels,$scope.hits.series[0].data=hits.origin,$scope.hits.series[1].data=hits.rev_edge;var avg_t=hits.origin.filter(function(item){return null!=item});origin_avg_=avg_t.reduce(function(prev,curr){return prev+curr}),origin_avg_/=avg_t.length,avg_t=hits.rev_edge.filter(function(item){return null!=item}),rev_avg_=avg_t.reduce(function(prev,curr){return prev+curr}),rev_avg_/=avg_t.length,imp_avg_=Math.round((rev_avg_-origin_avg_)/origin_avg_*1e3)/10,rev_avg_=Util.convertTraffic(Math.round(100*rev_avg_)/100),origin_avg_=Util.convertTraffic(Math.round(100*origin_avg_)/100)}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileAbSpeedChart",mobileAbSpeedChartDirective)}(),function(){"use strict";angular.module("revapm.Portal.Usage",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","ui.bootstrap.datetimepicker","ng.jsoneditor","ngSanitize"])}(),function(){"use strict";function UsageRoutes($stateProvider){$stateProvider.state("index.billing.usage",{url:"/usage",views:{main:{controller:"UsageWebController",templateUrl:"parts/reports/usage-web.html"}}}).state("index.billing.company",{url:"/account",views:{main:{controller:"CompanyProfileEditController",templateUrl:"parts/profile/edit-company.html "}}})}UsageRoutes.$inject=["$stateProvider"],angular.module("revapm.Portal.Usage").config(UsageRoutes)}(),function(){"use strict";function UsageWebController($scope,User,DTOptionsBuilder,DTColumnDefBuilder,AlertService,Stats,Util){$scope._loading=!0,$scope.accounts=[],$scope.selected={val:null},$scope.month_year=new Date,$scope.month_year_symbol=$scope.month_year.toISOString().slice(0,7),$scope.report=null;var pageLength=10;$scope.accountsDtOptions=DTOptionsBuilder.newOptions().withPaginationType("full_numbers").withDisplayLength(pageLength).withBootstrap().withDOM('<<"pull-left"pl>f<t>i<"pull-left"p>>').withOption("order",[[1,"desc"]]),$scope.colDefs=[{targets:[1],type:"num-fmt"},{targets:[6,7],type:"num"},{targets:[2,3,4,5],orderable:!1}],$scope.onAccountSelect=function(acc){$scope.selected.val=acc,""!==acc.acc_id&&User.selectAccount(acc)},$scope.onAccountClick=function(acc_id){var acc=$scope.accounts.find(function(a){return a.acc_id===acc_id});$scope.selected.val=acc,""!==acc.acc_id&&User.selectAccount(acc),$scope.onUpdate()},$scope.onTimeSet=function(newDate){newDate=new Date(newDate+864e5),$scope.month_year=newDate,$scope.month_year_symbol=newDate.toISOString().slice(0,7)},$scope.showTraffic=function(){return!$scope._loading&&$scope.report&&"0"!==$scope.report.traffic.count},$scope.showDomainsUsage=function(){return $scope.report&&$scope.report.domains_usage},$scope.showAccounts=function(){return $scope.report&&$scope.report.accounts};var subFormat_=function(data){if(void 0!==data.count&&(data.count=Util.formatNumber(data.count),data.received_bytes=Util.humanFileSizeInGB(data.received_bytes,3),data.sent_bytes=Util.humanFileSizeInGB(data.sent_bytes,3)),void 0!==data.billable_received_bps&&(data.billable_received_bps=Util.convertTrafficMbps(data.billable_received_bps,3),data.billable_sent_bps=Util.convertTrafficMbps(data.billable_sent_bps,3)),void 0!==data.cache_hits){data.cache_hits.MISS=Util.formatNumber(data.cache_hits.MISS),data.cache_hits.HIT=Util.formatNumber(data.cache_hits.HIT);for(var port in data.port_hits)data.port_hits[port]=Util.formatNumber(data.port_hits[port])}},format_=function(data){subFormat_(data);for(var zone in data.traffic_per_billing_zone)subFormat_(data.traffic_per_billing_zone[zone]);for(var d in data.domains_usage){var dmn=data.domains_usage[d];subFormat_(dmn);for(var t in dmn.traffic_per_billing_zone)subFormat_(dmn.traffic_per_billing_zone[t])}if(data.traffic&&subFormat_(data.traffic),data.accounts)for(var i=0,len=data.accounts.length;len>i;++i)subFormat_(data.accounts[i]);void 0!==data.domains_usage&&data.domains.list&&data.domains.list.forEach(function(domain){data.domains_usage[domain]||(data.domains_usage[domain]={count:"0",received_bytes:"0 GB",sent_bytes:"0 GB",billable_received_bps:"0 Mbps",billable_sent_bps:"0 Mbps"})})};$scope.onUpdate=function(){if(0===$scope.accounts.length||!$scope.selected.val)return void($scope._loading=!1);$scope._loading=!0;var q={from:moment($scope.month_year).utc().startOf("month").toISOString().slice(0,10),to:moment($scope.month_year).utc().endOf("month").toISOString().slice(0,10)};$scope.selected.val.acc_id&&(q.account_id=$scope.selected.val.acc_id),Stats.usage_web(q).$promise.then(function(data){var overall=data.data[data.data.length-1];format_(overall),$scope.report=overall})["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1,$scope.accountsDtOptions=DTOptionsBuilder.newOptions().withPaginationType("full_numbers").withDisplayLength(pageLength).withBootstrap().withDOM('<<"pull-left"pl>f<t>i<"pull-left"p>>').withOption("paging",$scope.report.accounts.length>pageLength).withOption("order",[[1,"desc"]])})};var sel_account=User.getSelectedAccount();sel_account&&""!==sel_account.acc_id&&($scope.selected.val=sel_account),User.getUserAccounts().then(function(accs){$scope.accounts=accs,1===accs.length&&($scope.selected.val=accs[0]),$scope.onUpdate()})["catch"](function(err){AlertService.danger("Oops! Something went wrong"),$scope._loading=!1})}UsageWebController.$inject=["$scope","User","DTOptionsBuilder","DTColumnDefBuilder","AlertService","Stats","Util"],angular.module("revapm.Portal.Usage").controller("UsageWebController",UsageWebController)}(),function(){"use strict";angular.module("revapm.Portal.Keys",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","angular-clipboard"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.keys",{url:"/keys",views:{main:{controller:"KeysListController",templateUrl:"parts/keys/list.html"}}}).state("index.accountSettings.keys.edit",{url:"/edit/:id",views:{page:{controller:"KeysEditController",templateUrl:"parts/keys/edit.html"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Keys").config(routesConfig)}(),function(){"use strict";function KeysListController($scope,$rootScope,$q,CRUDController,ApiKeys,$injector,$stateParams,Companies,DomainsConfig,$state,$uibModal,clipboard){function setAccountName(){return $scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){_.forEach($scope.records,function(item){var index=_.findIndex(list,{id:item.account_id});index>=0&&(item.companyName=list[index].companyName)})}):$q.when()}function clearUpdateData(data){var fields=["key_name","account_id","domains","allowed_ops","read_only_status","active"];return _.pick(_.clone(data),fields)}return $injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams
}),$scope.auth.isUser()?void $state.go("index.accountSettings.profile"):($scope.setState("index.accountSettings.keys"),$scope.setResource(ApiKeys),Companies.query().$promise.then(function(data){$scope.companies=data})["catch"](function(err){if(403===err.status){var user=$scope.auth.getUser();$scope.companies=[{id:user.companyId[0]}]}}),$scope.domains=DomainsConfig.query(),$scope.deleteKey=function(model){$scope.confirm("confirmModal.html",model).then(function(){$scope["delete"](model).then(function(){$rootScope.$broadcast("update:searchData")})["catch"]($scope.alertService.danger)})},$scope.createKey=function(account){return account&&account.id?($scope._loading=!0,$scope.alertService.clear(),ApiKeys.create({account_id:account.id}).$promise.then(function(data){return $rootScope.$broadcast("update:searchData"),$scope.alertService.success("API Key created",5e3),$scope.list().then(setAccountName),data})["catch"]($scope.alertService.danger)["finally"](function(){$scope._loading=!1})):void 0},$scope.openCreateDialog=function(){if($scope.alertService.clear(),$scope.companies&&1===$scope.companies.length)return $scope.createKey($scope.companies[0]);var modalInstance=$uibModal.open({animation:!0,templateUrl:"parts/keys/dialog/create.html",controller:"KeysCreateController",size:"md",resolve:{companies:function(){return $scope.companies}}});modalInstance.result.then($scope.createKey)},$scope.openUpdateDialogFor=function(keyId){$scope.alertService.clear();var modalInstance=$uibModal.open({animation:!0,templateUrl:"parts/keys/dialog/edit.html",controller:"KeysEditController",size:"md",resolve:{data:function(){return{companies:$scope.companies,domains:$scope.domains,keyId:keyId}}}});modalInstance.result.then(function(account){$scope.alertService.success("API Key updated",5e3),$scope.list().then(setAccountName)})},$scope.toggleProperty=function(key,property){return key&&key.id&&!key.loading?(key[property]=!key[property],key.loading=!0,ApiKeys.update({id:key.id},clearUpdateData(key)).$promise.then(function(data){return data})["catch"]($scope.alertService.danger)["finally"](function(){key.loading=!1})):void 0},$scope.list().then(setAccountName),$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.switchKeyVisibility=function(item){item.showKey=!item.showKey},void($scope.copyCallback=function(err){err?$scope.alertService.danger("Copying failed, please try manual approach",2e3):$scope.alertService.success("The API key has been copied to the clipboard",2e3)}))}KeysListController.$inject=["$scope","$rootScope","$q","CRUDController","ApiKeys","$injector","$stateParams","Companies","DomainsConfig","$state","$uibModal","clipboard"],angular.module("revapm.Portal.Keys").controller("KeysListController",KeysListController)}(),function(){"use strict";function KeysCreateController($scope,$uibModalInstance,companies){$scope.companies=companies,$scope.selected=null,$scope.onModelSelect=function(model){$scope.selected=model},$scope.ok=function(){$uibModalInstance.close($scope.selected)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}KeysCreateController.$inject=["$scope","$uibModalInstance","companies"],angular.module("revapm.Portal.Keys").controller("KeysCreateController",KeysCreateController)}(),function(){"use strict";function KeysEditController($scope,$rootScope,$injector,$stateParams,$location,CRUDController,ApiKeys,Companies,DomainsConfig,AlertService){function clearUpdateData(data){var fields=["key_name","account_id","domains","allowed_ops","read_only_status","active"];return _.pick(_.clone(data),fields)}$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),Companies.query().$promise.then(function(data){$scope.companies=data})["catch"](function(err){if(403===err.status){var user=$scope.auth.getUser();$scope.companies=[{id:user.companyId[0]}]}}),DomainsConfig.query().$promise.then(function(data){$scope.domains=data})["catch"](function(err){$scope.domains=[]}),$scope._loading=!1,$scope.selected=null,$scope.key=null,$scope.selectedDomains=[],$scope.selectDomains=function(accountId){$scope.selectedDomains=[],accountId&&angular.forEach($scope.domains,function(domain){domain.account_id===accountId&&$scope.selectedDomains.push(domain)})},$scope.loadKeyDetails=function(id){id&&($scope._loading=!0,$scope.key=null,ApiKeys.get({id:id}).$promise.then(function(key){$scope.key=key})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1}))},$scope.onModelSelect=function(model){$scope.selected=model},$scope.update=function(){$scope.key&&$scope.key.id&&($scope._loading=!0,ApiKeys.update({id:$scope.key.id},clearUpdateData($scope.key)).$promise.then(function(data){$rootScope.$broadcast("update:searchData"),AlertService.success("API Key updated"),$scope.$parent.list()})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1}))},$scope.goToList=function(){$location.path("/keys")},$scope.$watch("key.account_id",function(account_id){$scope.selectDomains(account_id)}),$scope.switchKeyVisibility=function(item){item.showKey=!item.showKey},$scope.copyCallback=function(err){err?$scope.alertService.danger("Copying failed, please try manual.",2e3):$scope.alertService.success("The API key has been copied to the clipboard.",2e3)}}KeysEditController.$inject=["$scope","$rootScope","$injector","$stateParams","$location","CRUDController","ApiKeys","Companies","DomainsConfig","AlertService"],angular.module("revapm.Portal.Keys").controller("KeysEditController",KeysEditController)}(),function(){"use strict";function widgetBTTConversionReportController($sce,BTTPortalService,config){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep(config,_defaultConfig),vm.config=config,vm._loading=!1,BTTPortalService.generateUrlConversionReport(config).then(function(url){config.url=url,config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))})["finally"](function(){vm._loading=!1})}function widgetBTTBounceRateReportController($sce,BTTPortalService,config){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep(config,_defaultConfig),vm.config=config,vm._loading=!1,BTTPortalService.generateUrlBounceRateReport(config).then(function(url){config.url=url,config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))})["finally"](function(){vm._loading=!1})}function widgetBTTBrandConversionRateReportController($sce,BTTPortalService,config){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep(config,_defaultConfig),vm.config=config,vm._loading=!1,BTTPortalService.generateUrlBrandConversionRateReport(config).then(function(url){config.url=url,config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))})["finally"](function(){vm._loading=!1})}function widgetBTTLostRevenueCalculatorReportController($sce,BTTPortalService,config){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep(config,_defaultConfig),vm.config=config,vm._loading=!1,BTTPortalService.generateUrlLostRevenueCalculatorReport(config).then(function(url){config.url=url,config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))})["finally"](function(){vm._loading=!1})}function widgetBTTTrafficInfoReportController($sce,BTTPortalService,config){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep(config,_defaultConfig),vm.config=config,vm._loading=!1,BTTPortalService.generateUrlTrafficInfoReport(config).then(function(url){config.url=url,config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))})["finally"](function(){vm._loading=!1})}function widgetEditBTTiframeController($scope,$localStorage,Countries,User,AlertService){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep($scope.config,_defaultConfig),vm._loading=!0,vm.domains=[],vm.domain=$scope.config.domain,vm.refCountry=Countries.query(),User.getUserDomains(!0).then(function(domains){if(vm.domains=_.filter(domains,function(item){return!!item.btt_key&&""!==item.btt_key}),(!vm.domain||!vm.domain.id)&&(1===domains.length&&$scope.selectOne&&(vm.onDomainSelected($scope.domains[0]),vm.domain=$scope.domains[0]),$localStorage.selectedDomain&&$localStorage.selectedDomain.id)){var ind=_.findIndex(domains,function(d){return d.id===$localStorage.selectedDomain.id});vm.domain=vm.domains[ind],vm.onDomainSelected(vm.domains[ind])}return vm.domains})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){vm._loading=!1}),vm.onDomainSelected=function(domain){domain&&($localStorage.selectedDomain=domain),vm.domain&&vm.domain.id&&vm.reload()},vm.reload=function(){angular.extend($scope.config,{domain:angular.copy(vm.domain)})}}widgetBTTConversionReportController.$inject=["$sce","BTTPortalService","config"],widgetBTTBounceRateReportController.$inject=["$sce","BTTPortalService","config"],widgetBTTBrandConversionRateReportController.$inject=["$sce","BTTPortalService","config"],widgetBTTLostRevenueCalculatorReportController.$inject=["$sce","BTTPortalService","config"],widgetBTTTrafficInfoReportController.$inject=["$sce","BTTPortalService","config"],widgetEditBTTiframeController.$inject=["$scope","$localStorage","Countries","User","AlertService"],angular.module("revapm.Portal.Dashboard",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ngSanitize","adf.provider","revapm.Portal.BlueTriangleTech"]).config(["dashboardProvider",function(dashboardProvider){dashboardProvider.structure("8-4",{title:"(One Wide Column And One Narrow Column)",rows:[{columns:[{styleClass:"col-md-8",widgets:[]},{styleClass:"col-md-4",widgets:[]}]}]}).structure("12",{title:"(One Wide Column)",rows:[{columns:[{styleClass:"col-md-12",widgets:[]}]}]}).structure("6-6",{title:"(Two Columns Of Equal Width)",rows:[{columns:[{styleClass:"col-md-6",widgets:[]},{styleClass:"col-md-6",widgets:[]}]}]}).structure("4-4-4",{title:"(Three Columns of Equal Width)",rows:[{columns:[{styleClass:"col-md-4",widgets:[]},{styleClass:"col-md-4",widgets:[]},{styleClass:"col-md-4",widgets:[]}]}]}).structure("3-3-3-3",{title:"(Four Columns Of Equal Width)",rows:[{columns:[{styleClass:"col-md-3",widgets:[]},{styleClass:"col-md-3",widgets:[]},{styleClass:"col-md-3",widgets:[]},{styleClass:"col-md-3",widgets:[]}]}]})}]).config(["dashboardProvider",function(dashboardProvider){dashboardProvider.widget("bluetriangletech-conversions-subcategories",{title:"Conversion Rate",description:"Conversion Rate, Average Order Value and Page Views by PRT for Subcategories",templateUrl:"parts/dashboard/widgets/bluetriangletech/view-iframe-bluetriangletech.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/bluetriangletech/widget-title-with-params-bluetriangletech.html",controller:"widgetBTTConversionReportController",controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/bluetriangletech/edit-bluetriangletech.html",controller:"widgetEditBTTiframeController",controllerAs:"vm"},config:{height:"100%",country:"All Countries",count_last_day:"1"}}).widget("bluetriangletech-bounce-rate",{title:"Bounce Rate",description:"Bounce Rate and Page Views Per Session by PRT for subcategory",templateUrl:"parts/dashboard/widgets/bluetriangletech/view-iframe-bluetriangletech.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/bluetriangletech/widget-title-with-params-bluetriangletech.html",controller:"widgetBTTBounceRateReportController",controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/bluetriangletech/edit-bluetriangletech.html",controller:"widgetEditBTTiframeController",controllerAs:"vm"},config:{height:"100%",className:"bluetriangletech--bounce-rate",country:"All Countries",count_last_day:"1"}}).widget("bluetriangletech-brand-conversion-rate",{title:"Brand Conversion Rate",description:"Brand Conversion Rate, Average Brand and Page Views by PRT for subcategory",templateUrl:"parts/dashboard/widgets/bluetriangletech/view-iframe-bluetriangletech.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/bluetriangletech/widget-title-with-params-bluetriangletech.html",controller:"widgetBTTBrandConversionRateReportController",controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/bluetriangletech/edit-bluetriangletech.html",controller:"widgetEditBTTiframeController",controllerAs:"vm"},config:{height:"100%",className:"bluetriangletech--brand-conversion-rate",country:"All Countries",count_last_day:"1"}}).widget("bluetriangletech-lost-revenue-calculator",{title:"Lost Revenue Calculator",description:"Lost Revenue Calculator for subcategory",templateUrl:"parts/dashboard/widgets/bluetriangletech/view-iframe-bluetriangletech.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/bluetriangletech/widget-title-with-params-bluetriangletech.html",controller:"widgetBTTLostRevenueCalculatorReportController",controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/bluetriangletech/edit-bluetriangletech.html",controller:"widgetEditBTTiframeController",controllerAs:"vm"},config:{height:"100%",className:"bluetriangletech--lost-revenue-calculator",country:"All Countries",count_last_day:"1"}}).widget("bluetriangletech-traffic-info",{title:"BTT Traffic Parameters",description:"BTT Traffic Parameters",templateUrl:"parts/dashboard/widgets/bluetriangletech/view-iframe-bluetriangletech.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/bluetriangletech/widget-title-with-params-bluetriangletech.html",controller:"widgetBTTTrafficInfoReportController",controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/bluetriangletech/edit-bluetriangletech.html",controller:"widgetEditBTTiframeController",controllerAs:"vm"},config:{height:"100%",className:"bluetriangletech--traffic-info",country:"All Countries",count_last_day:"1"}}).widget("widget-norse-live-attack-map",{title:"Norse Live Attack Map",description:"Display Norse Live Attack Map",templateUrl:"parts/dashboard/widgets/norse/view-iframe-norse.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/norse/widget-title-without-params-norse.html",controller:["$sce","config",function($sce,config){"ngInject";var vm=this;config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))}],controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/norse/edit-norse.html",controller:["$sce","config",function($sce,config){"ngInject"}],controllerAs:"vm"},config:{url:"https://map.norsecorp.com/#/"}})}]).controller("widgetBTTConversionReportController",widgetBTTConversionReportController).controller("widgetBTTBounceRateReportController",widgetBTTBounceRateReportController).controller("widgetBTTBrandConversionRateReportController",widgetBTTBrandConversionRateReportController).controller("widgetBTTLostRevenueCalculatorReportController",widgetBTTLostRevenueCalculatorReportController).controller("widgetBTTTrafficInfoReportController",widgetBTTTrafficInfoReportController).controller("widgetEditBTTiframeController",widgetEditBTTiframeController)}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.dashboard",{url:"/dashboard","abstract":!0,views:{page:{template:'<div class="container-fluid" ui-view="page"></div>'}},resolve:{loadModules:["$ocLazyLoad",function($ocLazyLoad){return $ocLazyLoad.load(["bower_components/angular-dashboard-framework/dist/angular-dashboard-framework.min.js","widgets/adf-widget-analytics-proxy-traffic/dist/adf-widget-analytics-proxy-traffic.js"])}]}}).state("index.dashboard.main",{url:"",views:{page:{templateUrl:"parts/dashboard/dashboard.tpl.html",controller:"DashdoardController",controllerAs:"dashboard"}}}).state("index.dashboard.details",{url:"/:dashboardId",views:{page:{templateUrl:"parts/dashboard/dashboard.tpl.html",controller:"DashdoardController",controllerAs:"dashboard"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Dashboard").config(routesConfig)}(),function(){function orderWidgets(){return function(widgets,keys){if(orderWidgets.widgetList)return orderWidgets.widgetList;var _widgets=angular.copy(widgets);return orderWidgets.widgetList={},angular.forEach(_default_order_widgets,function(key){orderWidgets.widgetList[key]=_widgets[key],delete _widgets[key]}),angular.forEach(_widgets,function(item,key){orderWidgets.widgetList[key]=item}),orderWidgets.widgetList}}angular.module("revapm.Portal.Dashboard").filter("orderWidgets",orderWidgets);var _default_order_widgets=["analytics-proxy-traffic-bandwidth-usage","analytics-proxy-traffic-chart","analytics-proxy-traffic-http-https-chart","analytics-proxy-hits-cache-chart","adf-widget-gbt-heatmaps","adf-widget-top-10-countries","adf-widget-http-https-requests-ratio","bluetriangletech-conversions-subcategories","bluetriangletech-bounce-rate","bluetriangletech-brand-conversion-rate","bluetriangletech-lost-revenue-calculator","bluetriangletech-traffic-info","widget-norse-live-attack-map"]}(),function(){"use strict";function DashboardSrv($rootScope,$q,$http,$localStorage,$config,dashboard){"ngInject";function getAll(){var deferred=$q.defer();return $http.get(API_URL+"/dashboards").success(function(data){dashboardsList.length=0,angular.forEach(data,function(item){dashboardsList.push(item)}),deferred.resolve(dashboardsList)}).error(function(){deferred.reject()}),deferred.promise}function updateDashboardsListItem(item){var index=_.find(dashboardsList,{id:item.id});-1!==index&&(index.title=item.title)}var API_URL=$config.API_URL,dashboardsList=[];return{dashboardsList:dashboardsList,getAll:getAll,get:function(id){var deferred=$q.defer();return $http.get(API_URL+"/dashboards/"+id).success(function(data){data.titleTemplateUrl="parts/dashboard/dashboard-title.tpl.html",deferred.resolve(data)}).error(function(){deferred.reject()}),deferred.promise},create:function(data){var deferred=$q.defer(),model={title:"New Dashboard ",structure:"6-6",rows:[{columns:[{styleClass:"col-md-6",widgets:[]},{styleClass:"col-md-6",widgets:[]}]}]};return data.rows||(data.rows=dashboard.structures[data.structure].rows),angular.extend(model,data),$http.post(API_URL+"/dashboards",model).success(function(data){$rootScope.$broadcast("update:searchData"),model.id=data.object_id,getAll(),deferred.resolve(model)}).error(function(){deferred.reject()}),deferred.promise},set:function(id,data){var deferred=$q.defer();return $http.put(API_URL+"/dashboards/"+id,data).success(function(res){$rootScope.$broadcast("update:searchData"),updateDashboardsListItem(data),deferred.resolve()}).error(function(){deferred.reject()}),deferred.promise},"delete":function(id){var deferred=$q.defer();return $http["delete"](API_URL+"/dashboards/"+id).success(function(data){$rootScope.$broadcast("update:searchData"),deferred.resolve(data),getAll()}).error(function(){deferred.reject()}),deferred.promise}}}DashboardSrv.$inject=["$rootScope","$q","$http","$localStorage","$config","dashboard"],angular.module("revapm.Portal.Dashboard").factory("DashboardSrv",DashboardSrv).run(["DashboardSrv",function(DashboardSrv){}])}(),function(){"use strict";function DashdoardController($scope,$state,$window,$interval,$localStorage,DashboardSrv,$stateParams){"ngInject";function onResize(){resizing&&$interval.cancel(resizing),resizing=$interval(function(){var event=new Event("resize");window.dispatchEvent(event),onResize()},1e3,1)}function initDashboard(dashboardId){return vm.model={},vm._isLoading=!0,DashboardSrv.get(dashboardId).then(function(data){angular.extend(vm.model,data),vm.model.getCountDashboardWidget=vm.getCountDashboardWidget,vm.model.addTemplateUrl="parts/dashboard/widgets/widget-add.html",vm.model.editTemplateUrl="parts/dashboard/modals/dashboard-edit-with-options.tpl.html",$scope.autoRefresh(vm.model.options)},function(){})["finally"](function(){vm._isLoading=!1})}var resizing,vm=this;onResize(),$stateParams.dashboardId?(vm.dashboardId=$stateParams.dashboardId,initDashboard($stateParams.dashboardId)):DashboardSrv.getAll().then(function(){var firstDashboard=DashboardSrv.dashboardsList[0];firstDashboard.id&&$state.go("index.dashboard.details",{dashboardId:firstDashboard.id})}),$scope.$watch(function(){return DashboardSrv.dashboardsList.length},function(newVal){vm.model&&(vm.model.isLast=2>newVal)},!0),$scope.$on("adfDashboardChanged",function(event,dashboardId,model){DashboardSrv.set(vm.dashboardId,model)}),vm.reload=function(){$scope.$broadcast("widgetReload")},$scope.$watch(function(){return vm.model?vm.model.options:void 0},function(newVal,oldVal){newVal&&oldVal&&newVal.autorefresh!==oldVal.autorefresh&&$scope.autoRefresh(newVal)},!0),$scope.$watch(function(){return vm.model?vm.model.refreshNow:null},function(newVal,oldVal){newVal!==oldVal&&(vm.model.refreshNow=!1,$scope.refreshWidgets())},!0);var timeReload;$scope.autoRefresh=function(option){timeReload&&$interval.cancel(timeReload),option&&option.autorefresh&&""!==option.autorefresh&&(timeReload=$interval(function(){$scope.$broadcast("widgetReload"),$scope.autoRefresh(option)},60*option.autorefresh*1e3,1))},$scope.refreshWidgets=function(){timeReload&&$interval.cancel(timeReload),vm.model.option&&""!==vm.model.option.autorefresh?$scope.autoRefresh(vm.model.option):$scope.$broadcast("widgetReload")},$scope.$on("destroy",function(){timeReload&&$interval.cancel(timeReload),resizing&&$interval.cancel(resizing)}),vm.getCountDashboardWidget=function(rows){var wc=0;return angular.forEach(rows,function(cols){angular.forEach(cols.columns,function(col){col.widgets&&col.widgets.length>0&&(wc+=col.widgets.length)})}),wc}}DashdoardController.$inject=["$scope","$state","$window","$interval","$localStorage","DashboardSrv","$stateParams"],angular.module("revapm.Portal.Dashboard").controller("DashdoardController",DashdoardController)}(),function(){"use strict";function dashboardNavMenu(DashboardSrv){return{restrict:"AE",replace:!0,template:'<li id="left-menu-dashboard-section" class="dashboard_menu list"  ui-sref-active-if="{class: \'active-side-menu-item\', state: \'index.dashboard\'}", ng-class="{\'active-side-menu-item\': menuExpanded(\'index.dashboard\')}"><a class="side-menu-item" ng-if="vm.dashboardsList.length>0" ng-click="goToState(\'dashboard\', vm.dashboardsList[0].id)"  ><div class="left-menu-start" style="margin-right: 3px;"><i class="fa fa-tachometer"></i> </div>Dashboards<i ng-click="expandMenu(\'index.dashboard\', $event)" ng-if="vm.dashboardsList.length > 0" class="pull-right {{ menuExpanded(\'index.dashboard\') ? \'fa fa-caret-down\' : \'fa fa-caret-up\' }}"></i></a><span ng-if="vm.dashboardsList.length==0"  class="side-menu-item item-title"><div class="left-menu-start"><i class="fa fa-tachometer"></i> </div> Dashboards <dashboard-btn-new></dashboard-btn-new></span>  <a  ng-if="vm.dashboardsList.length>0"  ng-repeat="dash in vm.dashboardsList"       ui-sref-active="active" class="side-menu-sub-item" ui-sref="index.dashboard.details({dashboardId:dash.id})">{{dash.title}}</a></li>',scope:!1,controller:["$scope","$state","$uibModal","User","DashboardSrv","dashboard",function($scope,$state,$uibModal,User,DashboardSrv,dashboard){"igInject";this.dashboardsList=DashboardSrv.dashboardsList,this.structures=dashboard.structures,User.isAuthed()&&DashboardSrv.getAll().then(function(){}),this.changeStructure=function(name,structure){},this.onCreateDashboard=function(e){var newDashboardScope=$scope.$new();newDashboardScope._isLoading=!1,newDashboardScope.structures=dashboard.structures,newDashboardScope.model={title:"Dashboard",structure:"6-6"};var instance=$uibModal.open({scope:newDashboardScope,templateUrl:"parts/dashboard/modals/dashboard-new.modal.tpl.html",backdrop:"static"});newDashboardScope.closeDialog=function(){instance.close(),newDashboardScope.$destroy()},newDashboardScope.applyDialog=function(model){newDashboardScope._isLoading=!0,DashboardSrv.create(model).then(function(data){newDashboardScope.closeDialog(),$state.go("index.dashboard.details",{dashboardId:data.id})},function(err){})["finally"](function(){newDashboardScope._isLoading=!1})}}}],controllerAs:"vm",controllerBind:!0}}dashboardNavMenu.$inject=["DashboardSrv"],angular.module("revapm.Portal.Dashboard").directive("dashboardNavMenu",dashboardNavMenu)}(),function(){"use strict";function dashboardBtnNew(DashboardSrv){return{restrict:"AE",replace:!0,template:'<a ng-click="vm.onCreateDashboard($event)" class="btn btn-link pull-right"  style="padding-right:0; padding-top:2px;" title="Add New Dashboard"> <i class="glyphicon glyphicon-plus" style="margin-right: 7px;"></i></a>',scope:!1,controller:["$scope","$state","$uibModal","DashboardSrv","dashboard",function($scope,$state,$uibModal,DashboardSrv,dashboard){"igInject";this.structures=dashboard.structures,this.changeStructure=function(name,structure){},this.onCreateDashboard=function(e){var newDashboardScope=$scope.$new();newDashboardScope._isLoading=!1,newDashboardScope.structures=dashboard.structures,newDashboardScope.model={title:"Dashboard",structure:"6-6",options:{autorefresh:"1"}};var instance=$uibModal.open({scope:newDashboardScope,templateUrl:"parts/dashboard/modals/dashboard-new.modal.tpl.html",backdrop:"static"});newDashboardScope.closeDialog=function(){instance.close(),newDashboardScope.$destroy()},newDashboardScope.applyDialog=function(model){newDashboardScope._isLoading=!0,DashboardSrv.create(model).then(function(data){newDashboardScope.closeDialog(),$state.go("index.dashboard.details",{dashboardId:data.id})},function(err){})["finally"](function(){newDashboardScope._isLoading=!1})}}}],controllerAs:"vm",controllerBind:!0}}dashboardBtnNew.$inject=["DashboardSrv"],angular.module("revapm.Portal.Dashboard").directive("dashboardBtnNew",dashboardBtnNew)}(),function(){"use strict";function dashboardBtnDelete(DashboardSrv){return{restrict:"AE",replace:!0,template:'<button type="button" ng-click="vm.onDeleteDashboard($event)" ng-disabled="model.isLast" class="btn btn-danger" title="Delete Dashboard"> <i class="glyphicon glyphicon-remove"></i> Delete Dashboard </button>',scope:{model:"="},controller:["$scope","$state","$uibModal","DashboardSrv","dashboard",function($scope,$state,$uibModal,DashboardSrv,dashboard){"igInject";this.onDeleteDashboard=function(e){var deleteDashboardScope=$scope.$new();deleteDashboardScope._isLoading=!1,deleteDashboardScope.model=angular.copy($scope.model);var instance=$uibModal.open({scope:deleteDashboardScope,templateUrl:"parts/dashboard/modals/dashboard-delete.modal.tpl.html",backdrop:"static"});deleteDashboardScope.isLast=function(){return 1===DashboardSrv.dashboardsList.length},deleteDashboardScope.closeDialog=function(){instance.close(),deleteDashboardScope.$destroy()},deleteDashboardScope.deleteDialog=function(model){deleteDashboardScope._isLoading=!0,DashboardSrv["delete"](model.id).then(function(data){deleteDashboardScope.closeDialog(),$state.go("index.dashboard.main")},function(err){})["finally"](function(){deleteDashboardScope._isLoading=!1})}}}],controllerAs:"vm",controllerBind:!0}}dashboardBtnDelete.$inject=["DashboardSrv"],angular.module("revapm.Portal.Dashboard").directive("dashboardBtnDelete",dashboardBtnDelete)}(),function(){"use strict";angular.module("revapm.Portal.BlueTriangleTech",[])}(),function(){"use strict";angular.module("revapm.Portal.BlueTriangleTech").value("BTTPortalConfig",{authKey:"a340ef373d412edcb431cf11a0b627c9",url_api:"https://portal.bluetriangletech.com/BTTPortal/api",url_demo:"https://portal.bluetriangletech.com/BTTPortal/api/conversions_html.php?&ReportPage%5B%5D=subcategory&BrowserType=All%20Browsers&Country=All%20Countries&GranularitySelect=1.0&StatSig=0&siteID=567&authKey=a340ef373d412edcb431cf11a0b627c9&timePeriod=hours_3&slowestFastest=slowest_500&refresh_rate=60&StatMethod=85&TimeZone=America/New_York&startEpoch=1458872580&endEpoch=1458883380&offset=10800&startTime=22:23&endTime=01:23&startDate=2016-3-24&endDate=2016-3-24",url_demo_bounceRate_html:"https://portal.bluetriangletech.com/BTTPortal/api/bounceRate_html.php?&ReportPage%5B%5D=subcategory&BrowserType=All%20Browsers&Country=All%20Countries&GranularitySelect=1.0&StatSig=0&siteID=567&authKey=a340ef373d412edcb431cf11a0b627c9&timePeriod=hours_3&slowestFastest=slowest_500&refresh_rate=60&StatMethod=85&TimeZone=America/New_York&startEpoch=1458752400&endEpoch=1458763200&offset=10800&startTime=13:00&endTime=16:00&startDate=2016-3-23&endDate=2016-3-23",url_demo_brandConversions_html:"https://portal.bluetriangletech.com/BTTPortal/api/brandConversions_html.php?&ReportPage%5B%5D=subcategory&BrowserType=All%20Browsers&Country=All%20Countries&GranularitySelect=1.0&StatSig=0&siteID=567&authKey=a340ef373d412edcb431cf11a0b627c9&timePeriod=hours_3&slowestFastest=slowest_500&refresh_rate=60&StatMethod=85&TimeZone=America/New_York&startEpoch=1458752400&endEpoch=1458763200&offset=10800&startTime=13:00&endTime=16:00&startDate=2016-3-23&endDate=2016-3-23",url_demo_lostRevenue_html:"https://portal.bluetriangletech.com/BTTPortal/api/lostRevenue_html.php?BrowserType=All+Browsers&Country=All+Countries&authKey=a340ef373d412edcb431cf11a0b627c9&timePeriod=hours_3&startEpoch=1458752400&endEpoch=1458763200&offset=10800&startTime=13%3A00&endTime=16%3A00&startDate=2016-3-23&endDate=2016-3-23&excluded_9=1&siteID=567&reportType=lostRevenue&ReportPage%5B%5D=subcategory&GranularitySelect=1.0&StatMethod=85&refreshRate=60&TimeZone=America%2FNew_York&panelID=1458763239486&TimeZone=America/New_York&slowestFastest=slowest_500"})}(),function(){"use strict";function BTTPortalService($q,BTTPortalConfig,$httpParamSerializerJQLike){"ngInject";function generateUrlConversionReport(config){var filters=config.filters,def=$q.defer(),_count_last_days="7";filters&&(_count_last_days=filters.count_last_day||"7",filters.country&&_.merge(_def,{Country:[filters.country]}));var _startTime=moment().subtract(_count_last_days,"days"),_endTime=moment(),__def=angular.copy(_def),_btt_key=config.domain?config.domain.btt_key:BTTPortalConfig.authKey,_now={authKey:_btt_key,startEpoch:_startTime.valueOf().toString().substr(0,10),startDate:_startTime.format("YYYY-M-DD"),startTime:_startTime.format("HH:mm"),endEpoch:_endTime.valueOf().toString().substr(0,10),endDate:_endTime.format("YYYY-M-DD"),endTime:_endTime.format("HH:mm")},url_data=$httpParamSerializerJQLike(_.merge(__def,_now));return def.resolve(BTTPortalConfig.url_api+"/conversions_html.php?&"+url_data),def.promise}function generateUrlBounceRateReport(config){var filters=config.filters,def=$q.defer(),_count_last_days="7";filters&&(_count_last_days=filters.count_last_day||"7",filters.country&&_.merge(_def,{Country:[filters.country]}));var _startTime=moment().subtract(_count_last_days,"days"),_endTime=moment(),__def=angular.copy(_def),_btt_key=config.domain?config.domain.btt_key:BTTPortalConfig.authKey,_now={ReportPage:["Item Page"],BrowserType:"All Browsers",GranularitySelect:"1.0",StatSig:0,StatMethod:85,refresh_rate:60,authKey:_btt_key,startEpoch:_startTime.valueOf().toString().substr(0,10),startDate:_startTime.format("YYYY-M-DD"),startTime:_startTime.format("HH:mm"),endEpoch:_endTime.valueOf().toString().substr(0,10),endDate:_endTime.format("YYYY-M-DD"),endTime:_endTime.format("HH:mm")},url_data=$httpParamSerializerJQLike(_.merge(__def,_now));return def.resolve(BTTPortalConfig.url_api+"/bounceRate_html.php?&"+url_data),def.promise}function generateUrlBrandConversionRateReport(config){var filters=config.filters,def=$q.defer(),_count_last_days="7";filters&&(_count_last_days=filters.count_last_day||"7",filters.country&&_.merge(_def,{Country:[filters.country]}));var _startTime=moment().subtract(_count_last_days,"days"),_endTime=moment(),__def=angular.copy(_def),_btt_key=config.domain?config.domain.btt_key:BTTPortalConfig.authKey,_now={BrowserType:"All Browsers",GranularitySelect:1,StatSig:0,
timePeriod:"hours_3",slowestFastest:"slowest_500",refresh_rate:60,authKey:_btt_key,startEpoch:_startTime.valueOf().toString().substr(0,10),startDate:_startTime.format("YYYY-M-DD"),startTime:_startTime.format("HH:mm"),endEpoch:_endTime.valueOf().toString().substr(0,10),endDate:_endTime.format("YYYY-M-DD"),endTime:_endTime.format("HH:mm")},url_data=$httpParamSerializerJQLike(_.merge(__def,_now));return def.resolve(BTTPortalConfig.url_api+"/brandConversions_html.php?&"+url_data),def.promise}function generateUrlLostRevenueCalculatorReport(config){var filters=config.filters,def=$q.defer(),_count_last_days="7";filters&&(_count_last_days=filters.count_last_day||"7",filters.country&&_.merge(_def,{Country:[filters.country]}));var _startTime=moment().subtract(_count_last_days,"days"),_endTime=moment(),__def=angular.copy(_def),_btt_key=config.domain?config.domain.btt_key:BTTPortalConfig.authKey,_now={BrowserType:"All Browsers",excluded_9:1,reportType:"lostRevenue",panelID:1458763239486,timePeriod:"hours_3",slowestFastest:"slowest_500",refreshRate:60,authKey:_btt_key,startEpoch:_startTime.valueOf().toString().substr(0,10),startDate:_startTime.format("YYYY-M-DD"),startTime:_startTime.format("HH:mm"),endEpoch:_endTime.valueOf().toString().substr(0,10),endDate:_endTime.format("YYYY-M-DD"),endTime:_endTime.format("HH:mm")},url_data=$httpParamSerializerJQLike(_.merge(__def,_now));return def.resolve(BTTPortalConfig.url_api+"/lostRevenue_html.php?&"+url_data),def.promise}function generateUrlTrafficInfoReport(config){var filters=config.filters,def=$q.defer(),_count_last_days="7";filters&&(_count_last_days=filters.count_last_day||"7",filters.country&&_.merge(_def,{Country:[filters.country]}));var _startTime=moment().subtract(_count_last_days,"days"),_endTime=moment(),__def=angular.copy(_def),_btt_key=config.domain?config.domain.btt_key:BTTPortalConfig.authKey,_now={BrowserType:"All Browsers",excluded_9:1,reportType:"lostRevenue",panelID:1458763239486,timePeriod:"hours_3",slowestFastest:"slowest_500",refreshRate:60,authKey:_btt_key,startEpoch:_startTime.valueOf().toString().substr(0,10),startDate:_startTime.format("YYYY-M-DD"),startTime:_startTime.format("HH:mm"),endEpoch:_endTime.valueOf().toString().substr(0,10),endDate:_endTime.format("YYYY-M-DD"),endTime:_endTime.format("HH:mm")},url_data=$httpParamSerializerJQLike(_.merge(__def,_now));return def.resolve(BTTPortalConfig.url_api+"/trafficInfo_html.php?&"+url_data),def.promise}var _def={ReportPage:["subcategory"],GranularitySelect:1,TimeZone:"America/New_York",siteID:567,startDate:"2016-03-24",startTime:"22:23",endDate:"2016-03-24",endTime:"01:23",StatMethod:85,startEpoch:"1458872580",endEpoch:"1458883380",offset:10800};return{generateUrlConversionReport:generateUrlConversionReport,generateUrlBounceRateReport:generateUrlBounceRateReport,generateUrlBrandConversionRateReport:generateUrlBrandConversionRateReport,generateUrlLostRevenueCalculatorReport:generateUrlLostRevenueCalculatorReport,generateUrlTrafficInfoReport:generateUrlTrafficInfoReport}}BTTPortalService.$inject=["$q","BTTPortalConfig","$httpParamSerializerJQLike"],angular.module("revapm.Portal.BlueTriangleTech").factory("BTTPortalService",BTTPortalService)}(),function(){"use strict";angular.module("revapm.Portal.LogShippers",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","ng.jsoneditor","ngSanitize"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.logshippers",{url:"/logshippers",views:{main:{controller:"LogShippersCrudController",templateUrl:"parts/logshippers/list.html"}}}).state("index.accountSettings.logshippers.new",{url:"/new",views:{page:{templateUrl:"parts/logshippers/new.html"}}}).state("index.accountSettings.logshippers.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/logshippers/edit.html",controller:"LogShippersCrudController"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.LogShippers").config(routesConfig)}(),function(){"use strict";function LogShippersCrudController($scope,$timeout,$localStorage,CRUDController,LogShippingJobs,$injector,$stateParams,$config,Companies,$http,$q,$state,$anchorScroll,DomainsConfig,Apps){function setAccountName(){return $scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){_.forEach($scope.records,function(item){var index=_.findIndex(list,{id:item.account_id});index>=0&&(item.companyName=list[index].companyName)})}):$q.when()}function setMappingInformation(){return $scope._loading=!0,$q.all([Apps.query().$promise,DomainsConfig.query().$promise]).then(function(res){angular.forEach($scope.records,function(item){if(item.sourceTypeName=$scope.sourceTypes[item.source_type],item.operationalModeName=$scope.operationalModeType[item.operational_mode],"app"===item.source_type){var _app=_.find(res[0],{id:item.source_id})||{};item.sourceName=_app.app_name||""}if("domain"===item.source_type){var _domain=_.find(res[1],{id:item.source_id})||{};item.sourceName=_domain.domain_name||""}})})["finally"](function(){$scope._loading=!1})}$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.sourceTypes=$config.LOGSHIPPERS_SOURCE_TYPES,$scope.destinationTypes=$config.LOGSHIPPERS_DESTINATIONA_TYPES,$scope.operationalMode={active:"Active",pause_with_log_piling:"Pause With Log Piling",stop:"Stop"},$scope.operationalModeType=$config.LOGSHIPPERS_OPERATIONAL_MODES,$scope.operationalStates={active:"Active",pause:"Pause Log Shipping And Hold Log Files",stop:"Stop"},$scope.generalJobStatusies=$config.LOGSHIPPERS_GENERAL_JOB_STATUSIES,$scope.setState("index.accountSettings.logshippers"),$scope.setResource(LogShippingJobs),$scope.$on("$stateChangeSuccess",function(state){$state.is($scope.state)&&$scope.list().then(setAccountName).then(setMappingInformation).then(function(){$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500)})}),$scope.locations=[],$scope.companies=[],$scope.model={},$scope.fetchCompanies=function(companyIds){var promises=[];companyIds.forEach(function(id){promises.push(Companies.get({id:id}).$promise)}),$q.all(promises).then(function(data){$scope.companies=data})},$scope.prepareJobToUpdate=function(model_current,isStateChange){var model;return model=void 0===model_current.toJSON?_.clone(model_current,!0):_.clone(model_current.toJSON(),!0),delete model.id,delete model.created_by,delete model.updated_by,delete model.created_at,delete model.updated_at,isStateChange?(delete model.companyName,delete model.sourceTypeName,delete model.operationalModeName,delete model.sourceName):("app"===model.source_type&&(_.findIndex($scope.appsList,{id:$scope.selectedAppSourceId,account_id:model.account_id})<0?model.source_id="":model.source_id=$scope.selectedAppSourceId),"domain"===model.source_type&&(_.findIndex($scope.domainsList,{id:$scope.selectedDomainSourceId,account_id:model.account_id})<0?model.source_id="":model.source_id=$scope.selectedDomainSourceId)),model},$scope.setAccountId=function(){$scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){$scope.companies=list,1===$scope.companies.length&&($scope.model.account_id=$scope.companies[0].id)}):angular.isArray($scope.auth.getUser().companyId)?1===$scope.auth.getUser().companyId.length?$scope.model.account_id=$scope.auth.getUser().companyId[0]:$scope.fetchCompanies($scope.auth.getUser().companyId):$scope.model.account_id=$scope.auth.getUser().companyId},$scope.setAccountId(),$scope.getJob=function(id){$scope.get(id).then(function(){return $q.all([Apps.query().$promise,DomainsConfig.query().$promise]).then(function(res){$scope.appsList=res[0],$scope.domainsList=res[1],""!==$scope.model.source_id&&("app"===$scope.model.source_type&&($scope.selectedAppSourceId=$scope.model.source_id),"domain"===$scope.model.source_type&&($scope.selectedDomainSourceId=$scope.model.source_id))})})["catch"](function(err){$scope.alertService.danger("Could not load job details")})},$scope.deleteJob=function(model){$scope.confirm("confirmModal.html",model).then(function(){var jobName=model.job_name;$scope["delete"](model).then(function(data){$scope.alertService.success("Job "+jobName+" deleted."),$scope.list().then(setAccountName).then(setMappingInformation)})["catch"](function(err){$scope.alertService.danger(err)})})},$scope.createLogShippingJob=function(model){$scope.create(model).then(function(){$scope.alertService.success("Jod created",5e3),$scope.setAccountId()})["catch"]($scope.alertService.danger)},$scope.updateJob=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmUpdateModal.html",model).then(function(){model=$scope.prepareJobToUpdate(model),$scope.update({id:modelId},model).then(function(){$scope.alertService.success("Job updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)})})}},$scope.storeToStorage=function(model){$localStorage.selectedDomain=model},$scope.disableSubmit=function(model,isEdit){return isEdit?$scope._loading||!model.job_name||!model.account_id||!model.operational_mode||!model.source_type||!model.source_id&&!$scope.selectedAppSourceId&&!$scope.selectedDomainSourceId||!model.destination_type:$scope._loading||!model.job_name||!model.account_id},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.onDomainSelect=function(id){$scope.selectedDomainSourceId=id},$scope.onAppSelect=function(id){$scope.selectedAppSourceId=id},$scope.onAccountSelect=function(accountId){var index_app=-1,index_domain=-1;(index_app=_.findIndex($scope.appsList,{account_id:accountId}))<0?$scope.selectedAppSourceId="":$scope.selectedAppSourceId=$scope.appsList[index_app].id,(index_domain=_.findIndex($scope.domainsList,{account_id:accountId}))<0?$scope.selectedDomainSourceId="":$scope.selectedDomainSourceId=$scope.domainsList[index_domain].id},$scope.onChangeSourceType=function(item){var index_app=-1,index_domain=-1,accountId=$scope.model.account_id;""!==$scope.selectedAppSourceId&&void 0!==$scope.selectedAppSourceId||((index_app=_.findIndex($scope.appsList,{account_id:accountId}))<0?$scope.selectedAppSourceId="":$scope.selectedAppSourceId=$scope.appsList[index_app].id),""!==$scope.selectedDomainSourceId&&void 0!==$scope.selectedDomainSourceId||((index_domain=_.findIndex($scope.domainsList,{account_id:accountId}))<0?$scope.selectedDomainSourceId="":$scope.selectedDomainSourceId=$scope.domainsList[index_domain].id)},$scope.onChangeLogShippingState=function(model,state){if(model&&model.operational_mode!==state){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmChangeLogShippingStateModal.html",model).then(function(){model.operational_mode=state,model=$scope.prepareJobToUpdate(model,!0);var params={id:modelId};$scope.loading(!0),$scope.resource.update(params,model).$promise.then(function(data){return data}).then(function(){$scope.alertService.success("Job updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)})["finally"](function(){$scope.loading(!1)})})}}}LogShippersCrudController.$inject=["$scope","$timeout","$localStorage","CRUDController","LogShippingJobs","$injector","$stateParams","$config","Companies","$http","$q","$state","$anchorScroll","DomainsConfig","Apps"],angular.module("revapm.Portal.LogShippers").controller("LogShippersCrudController",LogShippersCrudController)}(),function(){"use strict";function logshippersStagingStatus(LogShippingJobs,$config,$interval,$rootScope,$state){return{template:'<div><i class="glyphicon" ng-class="iconStaging" uib-tooltip="{{tooltipStaging}}"></i> {{operationalModeName}}</div>',scope:{ngId:"=",currentState:"=",onChangeState:"&"},controller:["$scope",function($scope){var intervalPromise,logShipperId;$scope.iconStaging="glyphicon-refresh spin",$scope.tooltipStaging="Staging Status",$scope.shouldRefresh=!0,$scope.startRefresh=function(){!logShipperId||!$scope.shouldRefresh||$state.includes("index.accountSettings.logshippers.new")||$state.includes("index.accountSettings.logshippers.edit")||$state.includes("index.accountSettings.logshippers.versions")||(intervalPromise=$interval($scope.fetchStatus,$config.LOGSHIPPERS_STATUS_REFRESH_INTERVAL,1))},$scope.stopRefresh=function(){angular.isDefined(intervalPromise)&&($interval.cancel(intervalPromise),intervalPromise=void 0,$scope.shouldRefresh=!1)},$scope.fetchStatus=function(id){(id||logShipperId)&&(!id&&logShipperId&&(id=logShipperId),LogShippingJobs.status({id:id}).$promise.then(function(data){$config.LOGSHIPPERS_STAGING_STATUS_ICONS[data.general_job_status]&&($scope.iconStaging=$config.LOGSHIPPERS_STAGING_STATUS_ICONS[data.general_job_status]),$scope.tooltipStaging="Log Shipping Status: "+data.general_job_status,$scope.operationalModeName=$config.LOGSHIPPERS_OPERATIONAL_MODES[data.general_job_status],$scope.startRefresh(),$scope.onChangeState(),$scope.currentState=$scope.operationalModeName})["catch"](function(err){console.log(err),$scope.iconStaging="glyphicon-remove text-danger",$scope.tooltipStaging="Log Shipping Status: Error",$scope.stopRefresh()}))},$scope.$on("$destroy",function(){$scope.stopRefresh()}),$rootScope.$on("$stateChangeStart",function(event){$scope.stopRefresh()}),$scope.$watch("ngId",function(newValue){newValue&&(logShipperId=newValue,$scope.shouldRefresh=!0,$scope.fetchStatus(newValue))})}]}}logshippersStagingStatus.$inject=["LogShippingJobs","$config","$interval","$rootScope","$state"],angular.module("revapm.Portal.Domains").directive("logshippersStagingStatus",logshippersStagingStatus)}(),function(){"use strict";angular.module("revapm.Portal",["revapm.Portal.Auth","revapm.Portal.Profile","revapm.Portal.Users","revapm.Portal.Domains","revapm.Portal.SSL_certs","revapm.Portal.Companies","revapm.Portal.Cache","revapm.Portal.ImportConfig","revapm.Portal.Reports","revapm.Portal.Mobile","revapm.Portal.Usage","revapm.Portal.Keys","revapm.Portal.Apps","revapm.Portal.Signup","ui.router","ui.bootstrap.typeahead","ui.bootstrap.tpls","ui.bootstrap.tooltip","ui.bootstrap.popover","hljs","oc.lazyLoad","revapm.Portal.Dashboard","datatables","datatables.bootstrap","ngFileSaver","revapm.Portal.LogShippers","angular-intro","ngMessages","ngAnimate"])}(),function(){"use strict";function configure(){}angular.module("revapm.Portal").config(configure)}(),function(){"use strict";function routesConfig($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/users"),$stateProvider.state("index",{url:"",views:{layout:{templateUrl:"parts/layout.html",controller:["$scope","$state","User",function($scope,$state,User){$scope.userService=User,User.isAuthed()||"index.restore"===$state.current.name||"signup"===$state.current.name||"billing_plans"===$state.current.name?"index"===$state.current.name&&$state.go("index.reports.proxy"):$state.go("login")}]}},resolve:{isUserActive:["User","$location",function(User,$location){return($location.path()||"").indexOf("password/reset")>=0?void 0:User.reloadUser()}]}}).state("index.apps",{url:"/apps",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.webApp",{url:"",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.accountSettings",{url:"",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.billing",{url:"",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.reports",{url:"",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.mobile",{url:"",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.help",{url:"/help",views:{page:{templateUrl:"parts/help/contactus.html"}}}).state("index.security",{url:"/security",views:{page:{template:"<span></span>"}}})}routesConfig.$inject=["$stateProvider","$urlRouterProvider"],angular.module("revapm.Portal").config(routesConfig)}(),function(){"use strict";function runApp($rootScope,$http,$location,AlertService,$state){function initFooterInfo(){$http.get(window.API_URL+"/healthcheck").success(function(data){data&&($rootScope.apiVersion=data.version),$http.get("/version.txt").success(function(data){data&&($rootScope.portalVersion=data)})})}$rootScope.alertService=AlertService,$rootScope.contactUsLink="https://revapm.zendesk.com/hc/en-us/requests/new",$rootScope.$on("$stateChangeStart",function(event){AlertService.clear()}),$rootScope.$on("$stateChangeSuccess",function(event){setTimeout(function(){$("[autofocus]").focus()},0)}),$rootScope.$on("$stateChangeError",console.log.bind(console)),$rootScope.goToState=function(state,dashboardID){dashboardID?$location.path(state+"/"+dashboardID):$state.go(state)},$rootScope.menuExpanded=function(menuState){return $rootScope.menuExpandedNodes&&$rootScope.menuExpandedNodes[menuState]},$rootScope.expandMenu=function(menuState,event){return $rootScope.menuExpandedNodes.current===menuState?void event.stopPropagation():($rootScope.menuExpandedNodes[menuState]?delete $rootScope.menuExpandedNodes[menuState]:$rootScope.menuExpandedNodes[menuState]=!0,void event.stopPropagation())},initFooterInfo()}runApp.$inject=["$rootScope","$http","$location","AlertService","$state"],angular.module("revapm.Portal").run(runApp)}(),function(){"use strict";function Analytics(){"ngInject";this.recordPageview=function(url){ga("set","page",url),ga("send","pageview")}}function runGoogleAnalitic($rootScope,$location,Analytics){"ngInject";$rootScope.$on("$stateChangeSuccess",function(){Analytics.recordPageview($location.url())})}runGoogleAnalitic.$inject=["$rootScope","$location","Analytics"],angular.module("revapm.Portal").run(runGoogleAnalitic).service("Analytics",Analytics)}(),function(){"use strict";function runIntro($config,$rootScope,$localStorage,$timeout,$window,$state,$stateParams){"ngInject";$rootScope.menuExpandedNodes={};var introduction_application={steps:[{intro:"Welcome to the RevAPM Customer Portal! It looks like you are a new user of the service, and we would like to run for you a quick introduction tour."},{element:"#side-menu-sub-item__webApp-domains",intro:'The "Domains" section allows you to manage the way how your websites (domains) are accelerated by RevAPM.',position:"right"},{element:"#side-menu-sub-item__webApp-ssl_certs",intro:"We highly recommend to use SSL protocol for your websites - it will increase the website security and also allow your visitors to use modern and fast HTTP/2 protocol",position:"right"},{element:"#side-menu-sub-item__webApp-cache ",intro:'If you use our global edge caching feature then the "Purge Cache" section will allow you to instantly purge cached objects when you make changes on your origin server.',position:"right"},{element:"#side-menu-web-analytics-item",intro:'The "Web Analytics" section will provide you with a lot of insights about your website\'s performance, avaiability, user geography, popular content and many other important metrics!',position:"right"},{element:"#side-menu-apps-item",intro:'The "Mobile Apps" section is the right place to supercharge your mobile application with RevSDK. In the section your can create new SDK keys and manage RevAPM acceleration options.',position:"right"},{element:"#side-menu-mobile-analytics-item",intro:"This section is full of information about mobile application availability, performance, userbase, top objects, etc.",position:"right"},{element:"#left-menu-dashboard-section",intro:"Here you can easily build your own dashboards using different graphs from mobile and web analytics sections.",position:"right"}]};$rootScope.IntroOptions=introduction_application,$config.INTRO_IS_ACTIVE===!0?(void 0===$localStorage.intro?($localStorage.intro={isShowMainIntro:!1,pages:{}},$rootScope.menuExpandedNodes={},$rootScope.isShowMainIntro=!1):($rootScope.isShowMainIntro=!1,$rootScope.isShowMainIntro=$localStorage.intro.isShowMainIntro),$rootScope.isShowMainIntro===!1&&["index.apps","index.reports","index.webApp","index.accountSettings"].forEach(function(menuState){$rootScope.menuExpandedNodes[menuState]=!0})):$rootScope.isShowMainIntro=!0,$rootScope.BeforeChangeEvent=function(e,scope){var el=angular.element(e);return el.addClass(".intro-active"),el.focus()},$rootScope.AfterChangeEvent=function(e,scope){var el=angular.element(e);el.removeClass("intro-active")},$rootScope.onIntroCompletedEvent=function(e){$localStorage.intro&&$localStorage.intro.isShowMainIntro===!1?($localStorage.intro.isShowMainIntro=!0,$rootScope.isShowMainIntro=!0,$state.transitionTo($state.current,$stateParams,{reload:!0,inherit:!0,notify:!0})):$localStorage.intro.pages&&$localStorage.intro.pages[$state.current.name]!==!0&&($localStorage.intro.pages[$state.current.name]=!0)}}runIntro.$inject=["$config","$rootScope","$localStorage","$timeout","$window","$state","$stateParams"],angular.module("revapm.Portal").run(runIntro)}();
=======
!function(){"use strict";angular.module("revapm.Portal.Config",[])}(),function(){"use strict";angular.module("revapm.Portal.Config").constant("$config",{SERVER_URL:"",API_URL:window.API_URL||"https://testsjc20-api01.revsw.net/v1",STATUS:{OK:200,BAD_REQUEST:400,UNAUTHORIZED:401,TWO_FACTOR_AUTH_REQUIRED:403,SUBSCRIPTION_REQUIRED:418},ROLE:{USER:"user",RESELLER:"reseller",ADMIN:"admin",REVADMIN:"revadmin"},EVENTS:{DOMAIN_CHANGED:"domain_changed",FILTER_CHANGED:"filter_changed"},DOMAIN_STAGING_STATUS_ICONS:{InProgress:"glyphicon-refresh spin",Published:"glyphicon-ok-sign text-success",Modified:"glyphicon-ok-sign text-primary"},DOMAIN_PRODUCTION_STATUS_ICONS:{InProgress:"glyphicon-refresh spin",Published:"glyphicon-ok-circle text-success",Modified:"glyphicon-ok-circle text-primary"},APP_STATUS_REFRESH_INTERVAL:15e3,DOMAIN_STATUS_REFRESH_INTERVAL:15e3,SSL_CERT_STAGING_STATUS_ICONS:{InProgress:"glyphicon-refresh spin",Published:"glyphicon-ok-sign text-success",Modified:"glyphicon-ok-sign text-primary"},SSL_CERT_PRODUCTION_STATUS_ICONS:{InProgress:"glyphicon-refresh spin",Published:"glyphicon-ok-circle text-success",Modified:"glyphicon-ok-circle text-primary"},SSL_CERT_STATUS_REFRESH_INTERVAL:15e3,LOGSHIPPERS_SOURCE_TYPES:{domain:"Domain",app:"Application"},LOGSHIPPERS_DESTINATIONA_TYPES:{Syslog:"Syslog",s3:"S3",ftp:"FTP",sftp:"SFTP",logstash:"Logstash",elasticsearch:"Elasticsearch"},LOGSHIPPERS_STAGING_STATUS_ICONS:{InProgress:"glyphicon-refresh spin",stop:"glyphicon-stop text-warning",active:"glyphicon-play text-success",pause:"glyphicon-pause text-primary"},LOGSHIPPERS_OPERATIONAL_MODES:{active:"Active",pause:"Pause",stop:"Stop"},LOGSHIPPERS_GENERAL_JOB_STATUSIES:{actived:"Actived",stopped:"Stopped",pause:"Pause",paused_with_log_piling:"Paused With Log_piling",Paused_by_revadmin:"Paused by Rev Admin"},LOGSHIPPERS_STATUS_REFRESH_INTERVAL:25e3,INTRO_IS_ACTIVE:!0,ENABLE_SIMPLIFIED_SIGNUP_PROCESS:!0})}(),function(){"use strict";angular.module("revapm.Portal.Config").constant("ActivityPhrase",{ACTIVITY_TYPE:{add:"Added",modify:"Modified","delete":"Deleted",publish:"Published",login:"Logged In",purge:"Purged"},ACTIVITY_TARGET:{user:"User",account:"Company",domain:"Domain",purge:"Cache",apikey:"API Key",team:"Team",app:"App",sslcert:"SSL Certificate",logshippingjob:"Log Shipping Job",object:"Object"}})}(),function(){"use strict";angular.module("revapm.Portal.Shared",["ngTouch","ui.bootstrap.tpls","ui.bootstrap.modal","daterangepicker","ui.router","toaster","ngAnimate"])}(),function(){"use strict";function revAPIHttpInterceptor($q,$config,$rootScope){function endsWith(str,suffix){return-1!==str.indexOf(suffix,str.length-suffix.length)}return{responseError:function(rejection){return"POST"===rejection.config.method&&endsWith(rejection.config.url,"/2fa/enable")?$q.reject(rejection):(rejection.status===$config.STATUS.UNAUTHORIZED&&$rootScope.$emit("unauthorized"),rejection.status||$rootScope.$emit("not.connected"),$q.reject(rejection))}}}revAPIHttpInterceptor.$inject=["$q","$config","$rootScope"],angular.module("revapm.Portal.Shared").factory("revAPIHttpInterceptor",revAPIHttpInterceptor)}(),function(){"use strict";function AlertService($interval){function add(alert,timeout){var exists=!1;angular.forEach(alerts,function(record){record.message===alert.message&&record.type===alert.type&&(exists=!0)}),exists||(alerts.push(alert),timeout&&$interval(remove.bind(this,alert),timeout,1))}function success(msg,timeout){angular.isUndefined(timeout)&&(timeout=5e3),add({type:"success",message:msg||""},timeout)}function danger(msg,timeout){angular.isUndefined(timeout)&&(timeout=5e3),angular.isObject(msg)&&(msg=403===msg.status?"Access denied. Do you have a read-only user account?":msg&&msg.data&&msg.data.message?msg.data.message:"Something wrong..."),add({type:"danger",message:msg||""},timeout)}function remove(alert){var idx=alerts.indexOf(alert);~idx&&alerts.splice(idx,1)}function clear(){alerts.splice(0,alerts.length)}var alerts=[];return{alerts:alerts,success:success,danger:danger,add:add,remove:remove,clear:clear}}AlertService.$inject=["$interval"],angular.module("revapm.Portal.Shared").factory("AlertService",AlertService)}(),function(){"use strict";function alertListDirective(AlertService){return{transclude:!0,template:'<alert type="{{i.type}}" ng-repeat="i in as.alerts">{{i.message}}</alert>',controller:["$scope",function($scope){$scope.as=AlertService}]}}alertListDirective.$inject=["AlertService"],angular.module("revapm.Portal.Shared").directive("alertList",alertListDirective)}(),function(){"use strict";function alertDirective(){return{transclude:!0,template:'<div ng-class="class" ng-transclude></div>',scope:{type:"@"},controller:["$scope",function($scope){$scope["class"]="alert",$scope.type&&($scope["class"]="alert alert-"+$scope.type)}]}}angular.module("revapm.Portal.Shared").directive("alert",alertDirective)}(),function(){"use strict";function ConfirmModalInstanceCtrl($scope,$uibModalInstance,model){$scope.model=model,$scope.ok=function(){$uibModalInstance.close(!0)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}ConfirmModalInstanceCtrl.$inject=["$scope","$uibModalInstance","model"],angular.module("revapm.Portal.Shared").controller("ConfirmModalInstanceCtrl",ConfirmModalInstanceCtrl)}(),function(angular,empty){"use strict";function CRUDController($config,$rootScope,AlertService,$q,User,$anchorScroll,$uibModal,$filter,$timeout,$animate,toaster){function CRUDControllerImpl($scope,$stateParams){function saveAnchorScrollIndex($index){$scope.elementIndexForAnchorScroll=$index}$scope.auth=User,$scope.alertService=AlertService,$scope.toaster=toaster,$scope._loading=!1,$scope.state="",$scope.params=$stateParams,$scope.resourse=null,$scope.records=[],$scope.filteredRecords=[],$scope.model=null,$scope.quickFilter="",$scope.deniedFields=[],$scope._baseFilter=!1,$scope.page={hasPrevPage:!1,hasNextPage:!0,current:1,pages:[1]},$scope.filter={filter:"",limit:25,skip:0,predicate:"",reverse:!1},$scope.filterKeys=[],$scope._delayTimeout=null,$scope._applyFilter=function(){var filtered,i,res,compareValue;filtered=_.isString($scope.filter.filter)&&$scope.filter.filter.length>0&&$scope.filterKeys.length>0?_.filter($scope.records,function(record){for(i=0;i<$scope.filterKeys.length;i++)if(compareValue=record[$scope.filterKeys[i]],compareValue&&(moment(compareValue,moment.ISO_8601).isValid()&&(compareValue=new Date(compareValue)),res=-1!==compareValue.toString().toLowerCase().indexOf($scope.filter.filter.toLowerCase())),res)return res}):$filter("filter")($scope.records,$scope.filter.filter),$scope.filteredRecords=$filter("orderBy")(filtered,$scope.filter.predicate,$scope.filter.reverse),$scope._checkPagination()},$scope.filterList=function(){$scope._delayTimeout&&($timeout.cancel($scope._delayTimeout),$scope._delayTimeout=null),$scope._delayTimeout=$timeout($scope._applyFilter,300)},$scope.$watch("filter",function(){$scope.filterList()},!0),$scope.confirm=function(template,resolve){angular.isObject(template)&&(resolve=template,template=""),angular.isObject(resolve)&&(resolve={model:resolve});var modalInstance=$uibModal.open({animation:!0,templateUrl:template||"parts/modal/confirmDelete.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:resolve||{}});return modalInstance.result},$scope.loading=function(loading){return angular.isUndefined(loading)?$scope._loading:void($scope._loading=Boolean(loading))},$scope.setState=function(state){if(!state)throw new Error("Wrong state provided.");$scope.state=state},$scope.clearQuickFilter=function(filter){filter?filter="":$scope.quickFilter=""},$scope.clearModel=function(model){model||(model=$scope.model),angular.forEach(model,function(val,key){model[key]=""}),model=null},$scope.clearList=function(){$scope.records.splice(0,$scope.records.length),$scope.filteredRecords.splice(0,$scope.filteredRecords.length)},$scope.setResource=function(resource){$scope.resource=resource},$scope.setDeniedFields=function(fields){angular.isArray(fields)&&($scope.deniedFields=fields)},$scope.scrollTop=function(){$anchorScroll("top")},$scope.order=function(predicate){$scope.filter.reverse=$scope.filter.predicate===predicate?!$scope.filter.reverse:!1,$scope.filter.predicate=predicate},$scope.checkFilterPage=function(){$scope.filter.skip>0&&$scope.goToPage(1)},$scope._checkPagination=function(){$scope.filteredRecords.length<$scope.filter.limit+$scope.filter.skip?$scope.page.hasNextPage=!1:$scope.page.hasNextPage=!0,$scope.filter.skip>0?$scope.page.hasPrevPage=!0:$scope.page.hasPrevPage=!1;var pages=Math.ceil($scope.filteredRecords.length/$scope.filter.limit);$scope.page.pages.splice(0,$scope.page.pages.length);for(var i=1;pages>=i;i++)$scope.page.pages.push(i);$scope.page.current=Math.ceil($scope.filter.skip/$scope.filter.limit)+1},$scope.nextPage=function(){$scope.page.hasNextPage&&$scope.page.current!==$scope.page.pages.length&&($scope.filter.skip+=$scope.filter.limit,$scope._checkPagination(),$scope.scrollTop())},$scope.prevPage=function(){$scope.page.hasPrevPage&&($scope.filter.skip-=$scope.filter.limit,$scope.filter.skip<0&&($scope.filter.skip=0),$scope._checkPagination(),$scope.scrollTop())},$scope.goToPage=function(page){$scope.page.current!==page&&($scope.page.current=page,$scope.filter.skip=page*$scope.filter.limit-$scope.filter.limit,$scope._checkPagination(),$scope.scrollTop())},$scope.list=function(){if(!$scope.resource)throw new Error("No resource provided.");return $scope.loading(!0),$scope.resource.query(function(data){return $scope._baseFilter?$scope.records=$filter("filter")(data,$scope._baseFilter,!0):$scope.records=data,$scope.filterList(),$scope._checkPagination(),data}).$promise["finally"](function(){$scope.loading(!1)})},$scope["delete"]=function(model){if(model){if(!angular.isFunction(model.$remove))throw new Error("Wrong model provided.");return model.loading=!0,model.$remove().then(function(data){$rootScope.$broadcast("update:searchData");var idx=$scope.records.indexOf(model);return data.statusCode===$config.STATUS.OK&&$scope.records.splice(idx,1),idx=$scope.filteredRecords.indexOf(model),data.statusCode===$config.STATUS.OK&&$scope.filteredRecords.splice(idx,1),data})["finally"](function(){model.loading=!1})}},$scope.create=function(model){if(!$scope.resource)throw new Error("No resource provided.");$scope.alertService.clear(),$scope.loading(!0);var record=new $scope.resource(model);return record.$save().then(function(data){return $rootScope.$broadcast("update:searchData"),$scope.list(),$scope.clearModel(model),data})["catch"](function(data){return data.status===$config.STATUS.BAD_REQUEST&&data.data&&data.data.message&&$scope.alertService.danger(data.data.message,5e3),$q.reject(data)})["finally"](function(){$scope.loading(!1)})},$scope.get=function(id){if(!$scope.resource)throw new Error("No resource provided.");return $scope.clearModel(),$scope.alertService.clear(),$scope.loading(!0),$scope.resource.get({id:id}).$promise.then(function(record){return $scope.model=record,record})["finally"](function(){$scope.loading(!1)})},$scope.update=function(params,model){angular.isObject(params)&&!model&&(model=params,params=void 0);var id=model.id;return params||(params={id:id}),angular.forEach($scope.deniedFields,function(val){model[val]&&delete model[val]}),$scope.alertService.clear(),$scope.loading(!0),$scope.resource.update(params,model).$promise.then(function(data){return $rootScope.$broadcast("update:searchData"),$scope.list(),$scope.$emit("list"),data})["finally"](function(){$scope.loading(!1)})},$scope.$on("list",function(){$scope.list()}),$scope.saveAnchorScrollIndex=saveAnchorScrollIndex,$scope.elementIndexForAnchorScroll=empty}return CRUDControllerImpl}CRUDController.$inject=["$config","$rootScope","AlertService","$q","User","$anchorScroll","$uibModal","$filter","$timeout","$animate","toaster"],angular.module("revapm.Portal.Shared").factory("CRUDController",CRUDController)}(angular),function(){"use strict";function crudPaginationDirective(){return{restrict:"AE",templateUrl:"parts/shared/crud/pagination.html"}}angular.module("revapm.Portal.Shared").directive("crudPagination",crudPaginationDirective)}(),function(){"use strict";function listFilterDirective(){return{restrict:"AE",template:'<form class="form-inline"><div class="form-group"><label for="search">Search:&nbsp;</label><input type="text" class="form-control" id="search" placeholder="" ng-model="filter.filter" ng-change="checkFilterPage()">&nbsp;&nbsp;<i class="glyphicon glyphicon-remove" ng-show="filter.filter != \'\'" ng-click="filter.filter = \'\'"></i></div></form>'}}angular.module("revapm.Portal.Shared").directive("listFilter",listFilterDirective)}(),function(){"use strict";function UtilFactory(){function convertValue(val,suffix){return val>1e9||"G"===suffix?Math.round(val/1e7)/100+"G":val>1e6||"M"===suffix?Math.round(val/1e4)/100+"M":val>1e3||"K"===suffix?Math.round(val/10)/100+"K":val}function convertTraffic(bps){if(!bps)return"0 Bps";if(1>bps)return bps.toFixed(2)+" Bps";var sizes=["Bps","Kbps","Mbps","Gbps","Tbps"],i=Math.floor(Math.log(bps)/Math.log(1024)),result=Math.round(100*bps/Math.pow(1024,i))/100+" "+(sizes[i]||"");return result||""}function convertTrafficMbps(bps,pr){return!bps||1>bps?"0 Mbps":(bps/1048576).toFixed(pr||2)+" Mbps"}function formatNumber(num,fixed){return(void 0!==fixed?num.toFixed(fixed):num.toString()).replace(/\B(?=(\d{3})+(?!\d))/g,"'")}function humanFileSize(size,pr){if(!size)return"0 B";var i=Math.floor(Math.log(size)/Math.log(1024));return 1*(size/Math.pow(1024,i)).toFixed(pr||2)+" "+["B","kB","MB","GB","TB"][i]}function humanFileSizeInGB(size,pr){return size?1*(size/1073741824).toFixed(pr||2)+" GB":"0 GB"}return{convertValue:convertValue,convertTraffic:convertTraffic,convertTrafficMbps:convertTrafficMbps,formatNumber:formatNumber,humanFileSize:humanFileSize,humanFileSizeInGB:humanFileSizeInGB}}angular.module("revapm.Portal.Shared").factory("Util",UtilFactory)}(),function(angular){"use strict";function uiSrefActiveIf(){var directive={restrict:"A",scope:{uiSrefActiveIf:"=",uiSrefActiveIfParams:"="},controller:UiSrefActiveIfCtrl};return directive}function UiSrefActiveIfCtrl($state,$rootScope,$scope,$element,$attr){function update(){if($state.includes(state)||$state.is(state)){if(!ifParams)return $element.addClass(classname),$rootScope.menuExpandedNodes[state]=!0,void($rootScope.menuExpandedNodes.current=state);if(_.find([$state.params],ifParams))return $element.addClass(classname),$rootScope.menuExpandedNodes[state]=!0,void($rootScope.menuExpandedNodes.current=state)}}$rootScope.menuExpandedNodes||($rootScope.menuExpandedNodes={});var state=null,classname="active",attr=$scope.uiSrefActiveIf,ifParams=$scope.uiSrefActiveIfParams;attr?(state=attr.state,classname=attr["class"]):state=$attr.uiSrefActiveIf,$scope.$on("$stateChangeSuccess",update),update()}angular.module("revapm.Portal.Shared").directive("uiSrefActiveIf",uiSrefActiveIf),uiSrefActiveIf.$inject=[],UiSrefActiveIfCtrl.$inject=["$state","$rootScope","$scope","$element","$attrs"]}(angular),function(angular){"use strict";function menuToggle(){var directive={restrict:"A",scope:{menuToggle:"="},controller:MenuToggleCtrl};return directive}function MenuToggleCtrl($scope){function update(hide){if(void 0!==hide){var drawer=$("#drawer"),main=$("#main");drawer.is(":visible")&&!hide?hide=!0:!drawer.is(":visible")&&hide&&(hide=!1),hide?(drawer.css("display","none"),main.css("left","0px")):(main.css("left","210px"),drawer.css("display","block"))}}$scope.$watch("menuToggle",update),window.onresize=function(){$(window).width()<980?($("#drawer").css("display","block"),$("#menuToggleBtn").css("display","none")):$("#menuToggleBtn").css("display","block")}}angular.module("revapm.Portal.Shared").directive("menuToggle",menuToggle),menuToggle.$inject=[],MenuToggleCtrl.$inject=["$scope"]}(angular),function(angular){"use strict";angular.module("revapm.Portal.Shared").directive("typeaheadToggle",["$rootScope",function($rootScope){return{require:"ngModel",link:function(scope,element,attr,ctrl){element.bind("click",function(){ctrl.$setViewValue($rootScope.searchTerm||" ")}),element.bind("blur",function(){ctrl.$setViewValue()})}}}])}(angular),function(angular){"use strict";angular.module("revapm.Portal.Shared").directive("focusMe",["$timeout",function($timeout){return{link:function(scope,element,attrs){scope.$watch(attrs.focusMe,function(value){value&&$timeout(function(){element[0].focus()})})}}}])}(angular),function(angular){"use strict";angular.module("revapm.Portal.Shared").constant("filterGeneratorConst",{COUNTRIES:"countries",OS:"os",DEVICES:"devices"})}(angular),function(angular,moment,_){"use strict";function filterGenerator(filterGeneratorService,filterGeneratorConst){function link(scope,elem,attr,ngModel){function init(){scope.$watch("ngModel",function(){generateFilterListMenu()}),scope.$watch("domain",function(){generateFilterListMenu()}),scope.$on("$destroy",function(){filterChangeTimeout&&clearTimeout(filterChangeTimeout)})}function addFilter(filter){toggleFilterShownState(filter),scope.filters.push(filter),hideMenu()}function generateFilterListMenu(){var domainId=scope.domain.id;filtersAddMenu=[],scope.filters=[],filterChangeTimeout&&clearTimeout(filterChangeTimeout),_.forEach(ngModel.$modelValue,function(filterKey){var filter=filterGeneratorService.getFilterByFilterKey(filterKey);filter.get&&filter.get(domainId).then(function(data){filter.vals=data.labels}),filtersAddMenu.push(filter)})}function showMenu(){scope.addFilterMenu.show=!0}function hideMenu(){scope.addFilterMenu.show=!1}function getFiltersToAdd(){return _.filter(filtersAddMenu,function(filter){return!filter.isShown})}function toggleFilterShownState(filter){filter.isShown=!filter.isShown}function removeShownFilter(filter,$index){filter.selected="",toggleFilterShownState(filter),scope.filters.splice($index,1),filterChange()}function filterChange(){startFilterChangeEventTimeout()}function startFilterChangeEventTimeout(){filterChangeTimeout&&clearTimeout(filterChangeTimeout),filterChangeTimeout=setTimeout(function(){sendFilterChangeEvent(),scope.$apply()},FILTER_EVENT_TIMEOUT)}function sendFilterChangeEvent(){var filterSelected={from_timestamp:scope.datePicker.date.startDate.toDate().getTime(),to_timestamp:scope.datePicker.date.endDate.toDate().getTime()};_.forEach(scope.filters,function(filter){filter.selected&&(filterSelected[filter.key]=filter.selected)}),filterGeneratorService.broadcastFilterChangeEvent(filterSelected)}function overlayClickHandler(){var datePicker=elem.querySelectorAll(DATE_PICKER_SELECTOR)[0];scope.datePicker.overlay.show=!1,datePicker.focus(),subscribeOnDatePickerHide()}function daterangepickerBlur(datePicker){updateOverlayValue(datePicker)}function subscribeOnDatePickerHide(){var datePicker=elem.querySelectorAll(DATE_PICKER_SELECTOR);datePicker.bind("hide.daterangepicker",function(){datePicker.unbind("hide.daterangepicker"),daterangepickerBlur(datePicker),scope.$digest()})}function updateOverlayValue(datePicker){var key=_.findKey(ranges,function(obj){var objStartDate=obj[0].toDate().getTime(),objEndDate=obj[1].toDate().getTime(),selStartDate=scope.datePicker.date.startDate.toDate().getTime(),selEndDate=scope.datePicker.date.endDate.toDate().getTime();return objStartDate===selStartDate&&objEndDate===selEndDate});key||(key=datePicker.val()),""!==scope.datePicker.overlay.val&&filterChange(),scope.datePicker.overlay.val=key,scope.datePicker.overlay.show=!0}function refreshFilter(){filterChangeTimeout&&clearTimeout(filterChangeTimeout),sendFilterChangeEvent()}var filterChangeTimeout,FILTER_EVENT_TIMEOUT=2e3,DATE_PICKER_SELECTOR=".date-picker",LAST_DAY="Last 1 Day",LAST_WEEK="Last 7 Days ",LAST_MONTH="Last 30 Days",ranges={},filtersAddMenu=[],countryFilterObject=filterGeneratorService.getFilterByFilterKey(filterGeneratorConst.COUNTRIES);ranges[LAST_DAY]=[moment().subtract(1,"days"),moment()],ranges[LAST_WEEK]=[moment().subtract(7,"days"),moment()],ranges[LAST_MONTH]=[moment().subtract(30,"days"),moment()],scope.datePicker={overlay:{show:!0,val:LAST_DAY},options:{timePicker:!0,timePickerIncrement:30,ranges:ranges},date:{startDate:ranges[LAST_DAY][0],endDate:ranges[LAST_DAY][1]}},scope.constants={country:countryFilterObject.name},scope.filters=[],scope.actions={showMenu:showMenu,addFilter:addFilter,removeShownFilter:removeShownFilter,hideMenu:hideMenu,refreshFilter:refreshFilter},scope.handlers={filterChange:filterChange,overlayClickHandler:overlayClickHandler,daterangepickerBlur:daterangepickerBlur},scope.addFilterMenu={show:!1,filters:getFiltersToAdd},init()}var directive={require:"ngModel",restrict:"E",scope:{ngModel:"=",domain:"="},templateUrl:"parts/shared/filter-generator/filter-generator.html",link:{post:link}};return directive}angular.module("revapm.Portal.Shared").directive("filterGenerator",filterGenerator),filterGenerator.$inject=["filterGeneratorService","filterGeneratorConst"]}(angular,moment,_),function(angular){"use strict";function filterGeneratorService($rootScope,$config,filterGeneratorConst,Countries,Stats){function broadcastFilterChangeEvent(values){$rootScope.$emit($config.EVENTS.FILTER_CHANGED,{data:values})}function subscribeOnFilterChangeEvent($scope,callback){var event=$rootScope.$on($config.EVENTS.FILTER_CHANGED,callback);$scope.$on("$destroy",function(){event()})}function getFilterByFilterKey(filterKey){var filters={};return filters[filterGeneratorConst.COUNTRIES]={name:"Country",allTitle:"Countries",vals:Countries.query(),key:"country"},filters[filterGeneratorConst.OS]={name:"OS",allTitle:"OS",get:getOs,vals:[],key:"os"},filters[filterGeneratorConst.DEVICES]={name:"Device",allTitle:"Devices",get:getDevices,vals:[],key:"device"},filters[filterKey]}function getDevices(domainId){return Stats.device({domainId:domainId}).$promise.then(defaultResponseHandler)}function getOs(domainId){return Stats.os({domainId:domainId}).$promise.then(defaultResponseHandler)}function getProtocol(domainId){return Stats.protocol({domainId:domainId}).$promise.then(function(data){var formattedData={labels:[],data:[]};return data.data&&data.data.length>0&&_.forEach(data.data,function(os){var protocol="Unknows";80===os.key&&(protocol="HTTP"),443===os.key&&(protocol="HTTPS"),formattedData.labels.push(protocol),formattedData.data.push(os.count)}),formattedData})}function getHttpMethod(domainId){return Stats.httpMethod({domainId:domainId}).$promise.then(defaultResponseHandler)}function getHttpProtocol(domainId){return Stats.httpProtocol({domainId:domainId}).$promise.then(defaultResponseHandler)}function getCountry(domainId){return Stats.country({domainId:domainId}).$promise.then(defaultResponseHandler)}function defaultResponseHandler(response){var formattedData={labels:[],data:[]};return response.data&&response.data.length>0&&_.forEach(response.data,function(data){formattedData.labels.push(data.key),formattedData.data.push(data.count)}),formattedData}var api={broadcastFilterChangeEvent:broadcastFilterChangeEvent,subscribeOnFilterChangeEvent:subscribeOnFilterChangeEvent,getFilterByFilterKey:getFilterByFilterKey,getDevices:getDevices,getOs:getOs,getProtocol:getProtocol,getHttpMethod:getHttpMethod,getHttpProtocol:getHttpProtocol,getCountry:getCountry};return api}angular.module("revapm.Portal.Shared").service("filterGeneratorService",filterGeneratorService),filterGeneratorService.$inject=["$rootScope","$config","filterGeneratorConst","Countries","Stats"]}(angular),function(angular,_){"use strict";angular.module("revapm.Portal.Shared").directive("search",["$location","$localStorage","$state","$rootScope","DomainsConfig","Companies","Users","User","Apps","DashboardSrv","ApiKeys",function($location,$localStorage,$state,$rootScope,DomainsConfig,Companies,Users,User,Apps,DashboardSrv,ApiKeys){return{restrict:"AE",templateUrl:"parts/shared/search/search.html",scope:{},link:function(scope){function init(){scope.list=[],scope.list.length=0,DomainsConfig.query().$promise.then(function(data){data.forEach(function(item){item.searchType="domain",item.domain_name+=" ",scope.list.push(item)})}),Companies.query().$promise.then(function(data){data.forEach(function(item){item.searchType="company",item.companyName+=" ",scope.list.push(item)})}),Users.query().$promise.then(function(data){data.forEach(function(item){item.searchType="user",scope.list.push(item)})}),Apps.query().$promise.then(function(data){data.forEach(function(item){item.searchType="app",item.app_name+=" ",scope.list.push(item)})}),ApiKeys.query().$promise.then(function(data){data.forEach(function(item){item.searchType="apiKey",item.key_name+=" ",scope.list.push(item)})}),DashboardSrv.getAll().then(function(data){data.forEach(function(item){item.searchType="dashboard",item.title+=" ",scope.list.push(item)})})}function selectDomain(domain){$localStorage.selectedDomain=domain}function selectApp(app){var newApp={app_id:app.id,id:app.id,app_name:app.app_name,sdk_key:app.sdk_key};$localStorage.selectedApplication=newApp}function selectAccount(account){$localStorage.selectedAccount={acc_name:account.companyName,acc_id:account.id}}scope.list=[],scope.searchTerm=$rootScope.searchTerm,User.isAuthed()&&init(),scope.getFilteredList=function(term){scope.searchTerm=term,$rootScope.searchTerm=term;var results=[];term=(term||"").toLowerCase();var list=angular.copy(scope.list);return list.forEach(function(item){switch(item.searchType){case"domain":if((item.domain_name||"").toLowerCase().indexOf(term)>=0){item.searchBarText=item.domain_name+" (Edit Domain)",item.searchDisplayText=item.domain_name,item.searchAction="edit",results.push(item);var copy=angular.copy(item);copy.searchBarText=copy.domain_name+" (Web Analytics)",copy.searchAction="analytics",results.push(copy);var purgeCopy=angular.copy(item);purgeCopy.searchBarText=purgeCopy.domain_name+" (Purge Cache)",purgeCopy.searchAction="purge",results.push(purgeCopy)}break;case"company":if((item.companyName||"").toLowerCase().indexOf(term)>=0){item.searchBarText=item.companyName+" (Edit Account)",item.searchDisplayText=item.companyName,item.searchAction="edit",results.push(item);var companyCopy=angular.copy(item);companyCopy.searchBarText=companyCopy.companyName+" (Usage Report)",companyCopy.searchAction="usage",results.push(companyCopy)}break;case"user":var fullName=item.firstname+" "+item.lastname,searchString=fullName+" "+item.email;(searchString||"").toLowerCase().indexOf(term)>=0&&(item.searchBarText=fullName+" (Edit User)",item.searchDisplayText=fullName,item.searchAction="edit",results.push(item));break;case"app":if((item.app_name||"").toLowerCase().indexOf(term)>=0){item.searchBarText=item.app_name+" (Edit App)",item.searchDisplayText=item.app_name,item.searchAction="edit",results.push(item);var appCopy=angular.copy(item);appCopy.searchBarText=appCopy.app_name+" (Mobile Analytics)",appCopy.searchAction="analytics",results.push(appCopy)}break;case"apiKey":(item.key_name||"").toLowerCase().indexOf(term)>=0&&(item.searchBarText=item.key_name+" (Edit API Key)",item.searchDisplayText=item.key_name,item.searchAction="edit",results.push(item));break;case"dashboard":(item.title||"").toLowerCase().indexOf(term)>=0&&(item.searchBarText=item.title+" (Dashboard)",item.searchDisplayText=item.title,item.searchAction="edit",results.push(item))}}),results},scope.searchItemSelected=function(item){switch(item.searchBarText=item.searchDisplayText.trim(),scope.searchTerm=item.searchBarText,$rootScope.searchTerm=item.searchBarText,item.searchType){case"domain":"edit"===item.searchAction?$location.path("domains/edit/"+item.id):"analytics"===item.searchAction?(selectDomain(item),-1!==$location.path().indexOf("reports/proxy")?$state.reload():$location.path("reports/proxy")):"purge"===item.searchAction&&(selectDomain(item),-1!==$location.path().indexOf("cache/purge")?$state.reload():$location.path("cache/purge"));break;case"company":"edit"===item.searchAction?$location.path("companies/edit/"+item.id):"usage"===item.searchAction&&(selectAccount(item),"/usage"===$location.path()?$state.reload():$location.path("usage"));break;case"user":"edit"===item.searchAction&&$location.path("users/edit/"+item.user_id);break;case"app":if("edit"===item.searchAction){var path="apps/"+item.app_platform.toLowerCase()+"/edit/"+item.id;$location.path(path)}else"analytics"===item.searchAction&&(selectApp(item),-1!==$location.path().indexOf("mobile/traffic")?$state.reload():$location.path("mobile/traffic"));break;case"apiKey":"edit"===item.searchAction&&$location.path("keys/edit/"+item.id);break;case"dashboard":"edit"===item.searchAction&&$location.path("dashboard/"+item.id)}},scope.clearSearchBar=function(){scope.searchTerm="",$rootScope.searchTerm=""},scope.showClear=function(){return($rootScope.searchTerm||"").trim().length},scope.$on("update:searchData",function(){init()})}}}])}(angular,_),function(angular){"use strict";function validateDomainsList(){"ngInject";function link(scope,element,attrs,ngModel){var DOMAIN=/(?=^.{4,253}$)(^((?!-)(?!\_)[a-zA-Z0-9-\_]{0,62}[a-zA-Z0-9]\.)+[a-zA-Z]{2,63}$)/;ngModel.$validators.domainsList=function(value){return ngModel.$setValidity("domains-list",!0),void 0!==value&&angular.isArray(value)&&angular.forEach(ngModel.$modelValue,function(item){DOMAIN.test(item)===!1&&ngModel.$setValidity("domains-list",!1)}),!0}}return{require:"ngModel",link:link}}angular.module("revapm.Portal.Shared").directive("validateDomainsList",validateDomainsList)}(angular),function(){"use strict";angular.module("revapm.Portal.Resources",["ngResource","revapm.Portal.Shared","revapm.Portal.Config"])}(),function(){"use strict";function ResourceConfig($httpProvider){$httpProvider.interceptors.push("revAPIHttpInterceptor")}ResourceConfig.$inject=["$httpProvider"],angular.module("revapm.Portal.Resources").config(ResourceConfig)}(),function(){"use strict";function ResourceFactory($resource){return function(url,params,methods){var defaults={update:{method:"PUT",isArray:!1},create:{method:"POST"}};methods=angular.extend(defaults,methods);var resource=$resource(url,params,methods);return resource.prototype.$save=function(){return this.id?this.$update():this.$create()},resource}}ResourceFactory.$inject=["$resource"],angular.module("revapm.Portal.Resources").factory("Resource",ResourceFactory)}(),function(){"use strict";function CompaniesResource(Resource,$config){return Resource($config.API_URL+"/accounts/:id",{id:"@id",statement:"@statement",billing_handle:"@billing_handle"},{createBillingProfile:{url:$config.API_URL+"/accounts/:id/billing_profile",method:"POST"},statements:{url:$config.API_URL+"/accounts/:id/statements",method:"GET",isArray:!0},statement:{url:$config.API_URL+"/accounts/:id/statements/:statement",method:"GET",isArray:!1},getPdfStatement:{url:$config.API_URL+"/accounts/:id/statements/:statement/pdf",method:"GET",headers:{accept:"application/pdf"},responseType:"arraybuffer",cache:!1,transformResponse:function(data){var pdf;return data&&(pdf=new Blob([data],{type:"application/pdf"})),{response:pdf}}},transactions:{url:$config.API_URL+"/accounts/:id/transactions",method:"GET",isArray:!0},subscriptionPreview:{url:$config.API_URL+"/accounts/:id/subscription_preview/:billing_handle",method:"GET",isArray:!1},subscriptionSummary:{url:$config.API_URL+"/accounts/:id/subscription_summary",method:"GET",isArray:!1}})}CompaniesResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("Companies",CompaniesResource)}(),function(){"use strict";function DomainsResource(Resource,$config){return Resource($config.API_URL+"/domain_configs/:id",{id:"@id"},{status:{url:$config.API_URL+"/domain_configs/:id/config_status",method:"GET",isArray:!1},versions:{url:$config.API_URL+"/domain_configs/:id/versions",method:"GET",isArray:!0}})}DomainsResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("DomainsConfig",DomainsResource)}(),function(){"use strict";function UsersResource(Resource,$config){return Resource($config.API_URL+"/users/:id",{id:"@user_id",token:"@token",
email:"@email"},{myself:{url:$config.API_URL+"/users/myself",method:"GET"},signup:{url:$config.API_URL+"/signup",method:"POST"},signupShort:{url:$config.API_URL+"/signup2",method:"POST"},verify:{url:$config.API_URL+"/signup/verify/:token",method:"GET"},resend:{url:$config.API_URL+"/signup/resend/:email",method:"GET"}})}UsersResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("Users",UsersResource)}(),function(){"use strict";function CacheResource(Resource,$config){return Resource($config.API_URL+"/purge/:requestId",{requestId:""},{purge:{method:"POST",isArray:!1},status:{method:"GET",isArray:!1}})}CacheResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("Cache",CacheResource)}(),function(){"use strict";function StatsResource(Resource,$config){return Resource($config.API_URL+"/stats/:domainId",{},{os:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"os",count:10}},device:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"device",count:10}},country:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"country",count:10}},protocol:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"protocol"}},httpProtocol:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"http_protocol"}},httpMethod:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"http_method"}},statusCode:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"status_code"}},contentType:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"content_type"}},cacheStatus:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"cache_status"}},requestStatus:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"request_status"}},quic:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"QUIC"}},http2:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"http2"}},top5xx:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"top5xx"}},traffic:{method:"GET"},referer:{url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"referer"}},topObjects:{method:"GET",url:$config.API_URL+"/stats/top_objects/:domainId",params:{}},lm_rtt_country:{method:"GET",url:$config.API_URL+"/stats/lastmile_rtt/:domainId",params:{report_type:"country",count:10}},gbt_country:{method:"GET",url:$config.API_URL+"/stats/gbt/:domainId",params:{report_type:"country",count:10}},fbt_average:{method:"GET",url:$config.API_URL+"/stats/fbt/average/:domainId",params:{}},fbt_distribution:{method:"GET",url:$config.API_URL+"/stats/fbt/distribution/:domainId",params:{}},fbt_heatmap:{method:"GET",url:$config.API_URL+"/stats/fbt/heatmap/:domainId",params:{}},sdk_dirs:{method:"GET",url:$config.API_URL+"/stats/sdk/dirs",params:{}},sdk_flow:{method:"GET",url:$config.API_URL+"/stats/sdk/flow",params:{}},sdk_agg_flow:{method:"GET",url:$config.API_URL+"/stats/sdk/agg_flow",params:{}},sdk_top_hits:{method:"GET",url:$config.API_URL+"/stats/sdk/top_requests",params:{}},sdk_top_users:{method:"GET",url:$config.API_URL+"/stats/sdk/top_users",params:{}},sdk_top_gbt:{method:"GET",url:$config.API_URL+"/stats/sdk/top_gbt",params:{}},sdk_distributions:{method:"GET",url:$config.API_URL+"/stats/sdk/distributions",params:{}},sdk_top_objects:{method:"GET",url:$config.API_URL+"/stats/sdk/top_objects",params:{}},sdk_top_objects_time:{method:"GET",url:$config.API_URL+"/stats/sdk/top_objects/slowest",params:{}},sdk_top_objects_5xx:{method:"GET",url:$config.API_URL+"/stats/sdk/top_objects/5xx",params:{}},sdk_ab_fbt:{method:"GET",url:$config.API_URL+"/stats/sdk/ab/fbt",params:{}},sdk_ab_fbt_distribution:{method:"GET",url:$config.API_URL+"/stats/sdk/ab/fbt_distribution",params:{}},sdk_ab_errors:{method:"GET",url:$config.API_URL+"/stats/sdk/ab/errors",params:{}},sdk_ab_speed:{method:"GET",url:$config.API_URL+"/stats/sdk/ab/speed",params:{}},usage_web:{method:"GET",url:$config.API_URL+"/usage_reports/web",params:{only_overall:!0,keep_samples:!1}}})}StatsResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("Stats",StatsResource)}(),function(){"use strict";function CountriesResource(Resource,$config){return Resource($config.API_URL+"/countries/list",{},{query:{isArray:!1}})}function CountriesService($q,$http,$config){var deffer=$q.defer(),refCountries=$q.defer();return{query:function(){if(refCountries.isLoad!==!0){$http.get($config.API_URL+"/countries/list").then(function(data){angular.extend(refCountries,data.data),refCountries.isLoad=!0,refCountries.resolve(refCountries)},function(err){deffer.reject(err)})}else refCountries.resolve(refCountries);return refCountries.promise}}}CountriesResource.$inject=["Resource","$config"],CountriesService.$inject=["$q","$http","$config"],angular.module("revapm.Portal.Resources").factory("Countries",CountriesResource)}(),function(){"use strict";function ActivityResource(Resource,$config){return Resource($config.API_URL+"/activity/:action",{action:""},{query:{method:"GET",isArray:!1},summary:{method:"GET",isArray:!1}})}ActivityResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("Activity",ActivityResource)}(),function(){"use strict";function TwoFactorAuthResource(Resource,$config){return Resource($config.API_URL+"/2fa/:action/:userId",{action:"",userId:""},{init:{method:"GET",isArray:!1,params:{action:"init"}},enable:{method:"POST",isArray:!1,params:{action:"enable"}},disable:{method:"POST",isArray:!1,params:{action:"disable"}}})}TwoFactorAuthResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("TwoFactorAuth",TwoFactorAuthResource)}(),function(){"use strict";function KeysResource(Resource,$config){return Resource($config.API_URL+"/api_keys/:id",{id:"@id"},{})}KeysResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("ApiKeys",KeysResource)}(),function(){"use strict";function LogShippingJobs(Resource,$config){return Resource($config.API_URL+"/log_shipping_jobs/:id",{id:"@id"},{status:{url:$config.API_URL+"/log_shipping_jobs/:id/status",method:"GET",isArray:!1}})}LogShippingJobs.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("LogShippingJobs",LogShippingJobs)}(),function(){"use strict";function SSL_certsResource(Resource,$config){return Resource($config.API_URL+"/ssl_certs/:id",{id:"@id"},{status:{url:$config.API_URL+"/ssl_certs/:id/config_status",method:"GET",isArray:!1}})}SSL_certsResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("SSL_certs",SSL_certsResource)}(),function(){"use strict";function SSL_conf_profiles(Resource,$config){return Resource($config.API_URL+"/ssl_conf_profiles",{},{})}SSL_conf_profiles.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("SSL_conf_profiles",SSL_conf_profiles)}(),function(){"use strict";function AppsResource(Resource,$config){return Resource($config.API_URL+"/apps/:id",{id:"@id"},{status:{url:$config.API_URL+"/apps/:id/config_status",method:"GET",isArray:!1},sdkReleases:{url:$config.API_URL+"/apps/sdk_releases",method:"GET"},versions:{url:$config.API_URL+"/apps/:id/versions",method:"GET",isArray:!0}})}AppsResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("Apps",AppsResource)}(),function(){"use strict";function authRun($http,$localStorage){$localStorage.Authorization&&($http.defaults.headers.common.Authorization=$localStorage.Authorization)}authRun.$inject=["$http","$localStorage"],angular.module("revapm.Portal.Auth",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","base64","ui.router"]).run(authRun)}(),function(){"use strict";function configure($httpProvider){}configure.$inject=["$httpProvider"],angular.module("revapm.Portal.Auth").config(configure)}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("login",{url:"/login",views:{layout:{controller:"LoginController",templateUrl:"parts/auth/login.html"}}}).state("index.restore",{url:"/password/reset/:token",views:{page:{controller:"PasswordRestoreController",templateUrl:"parts/auth/reset-password.html"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Auth").config(routesConfig)}(),function(){"use strict";function AuthRun($rootScope,$state){$rootScope.$on("unauthorized",function(){console.log("No logged in"),$state.go("login")}),$rootScope.$on("not.connected",function(){"login"!==$state.current.name&&$state.go("login")})}AuthRun.$inject=["$rootScope","$state"],angular.module("revapm.Portal.Auth").run(AuthRun)}(),function(){"use strict";function User($localStorage,$http,$config,$q,DomainsConfig){function clearAll(){localStorage&&localStorage.clear()}function getToken(){return $localStorage.Authorization||!1}function setToken(token){token&&($localStorage.Authorization=token)}function isAuthed(){var token=getToken();return!!token}function addAuthHeaderForAPI(token){$localStorage.Authorization="Bearer "+token,$http.defaults.headers.common.Authorization="Bearer "+token,$http.defaults.headers.common["Content-Type"]="application/json"}function clearAuthHeaderForAPI(){$localStorage.Authorization=void 0,delete $http.defaults.headers.common.Authorization}function _successGetUserMyself(data){if(!data||data.status!==$config.STATUS.OK)throw new Error(data.response);var res=data.data;if(res.role!==$config.ROLE.USER&&res.role!==$config.ROLE.ADMIN&&res.role!==$config.ROLE.RESELLER&&res.role!==$config.ROLE.REVADMIN)throw new Error("You do not have permission");return $localStorage.isLoggedIn=!0,$localStorage.isCAdmin=!0,$localStorage.user=res,domains=[],$localStorage.last_user_id!==res.user_id&&(apps=[],selectApplication(null),accounts=[],getUserAccounts(!1).then(function(res){selectAccount(res[0])}),$localStorage.last_user_id=res.user_id),data}function login(email,password,oneTimePassword){if(!email||!password)throw new Error("Please fill email and password");var authData={email:email,password:password};return oneTimePassword&&(authData.oneTimePassword=oneTimePassword),$http.post($config.API_URL+"/authenticate",authData).then(function(data){return data.status===$config.STATUS.OK?(setToken(data.data.token),addAuthHeaderForAPI(data.data.token),$http.get($config.API_URL+"/users/myself").then(_successGetUserMyself)):data})["catch"](function(err){return clearAuthHeaderForAPI(),$q.reject(err)})}function logout(){setToken(),$localStorage.user=void 0,clearAuthHeaderForAPI(),clearAll()}function getUser(){return $localStorage.user||null}function isAdmin(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.ADMIN)}function isReseller(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.RESELLER)}function isRevadmin(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.REVADMIN)}function isUser(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.USER)}function hasBillingPlan(){var account=getSelectedAccount();return Boolean(account.billing_plan)}function reloadUser(){return $http.get($config.API_URL+"/users/myself").then(function(data){if(!data||data.status!==$config.STATUS.OK)throw new Error(data.response);return $localStorage.user=data.data,data})}function forgotPassword(email){return $http.post($config.API_URL+"/forgot",{email:email}).then(function(data){if(data&&data.status!==$config.STATUS.OK)throw new Error(data.response);return data})}function resetPassword(token,password){return $http.post($config.API_URL+"/reset/"+token,{password:password}).then(function(data){if(data&&data.status!==$config.STATUS.OK)throw new Error(data.response);return data})}function updatePassword(currentPassword,newPassword){var user=getUser();if(!isAuthed()||!user.user_id)throw new Error("User not authentificated");return $http.put($config.API_URL+"/users/password/"+user.user_id,{current_password:currentPassword,new_password:newPassword}).then(function(data){if(data&&data.status!==$config.STATUS.OK)throw new Error(data.response);return login(user.email,newPassword).then(function(){return data})})}function getUserDomains(reload){return $q(function(resolve,reject){return domains&&domains.length>0&&!reload?resolve(domains):void DomainsConfig.query().$promise.then(function(data){domains=data,resolve(domains)})["catch"](function(err){domains=[],resolve(domains)})}.bind(this))}function selectDomain(domain){domainSelected=domain}function getSelectedDomain(){return domainSelected}function getUserApps(reload){return $q(function(resolve,reject){return apps.length>0&&!reload?resolve(apps):void $http.get($config.API_URL+"/apps").then(function(data){if(data&&data.status===$config.STATUS.OK){apps=data.data.map(function(item){return{app_name:item.app_name,app_id:item.id,id:item.id,sdk_key:item.sdk_key}}).sort(function(lhs,rhs){return lhs.app_name.localeCompare(rhs.app_name)});var user=getUser();apps.length&&user&&user.companyId[0]&&apps.unshift({app_id:"",app_name:"All Applications"}),resolve(apps)}else reject(new Error(data.response))})})}function selectApplication(app){$localStorage.selectedApplication=app,appSelected=app}function getSelectedApplication(){return $localStorage.selectedApplication||appSelected}function getUserAccounts(reload){return $q(function(resolve,reject){return accounts.length>0&&!reload?resolve(accounts):void $http.get($config.API_URL+"/accounts").then(function(data){if(data&&data.status===$config.STATUS.OK){accounts=data.data.map(function(item){return{acc_name:item.companyName,acc_id:item.id,plan_id:item.billing_plan,billing_plan:item.billing_plan}}).sort(function(lhs,rhs){return lhs.acc_name.localeCompare(rhs.acc_name)});var user=getUser();accounts.length>1&&user&&accounts.unshift({acc_id:"",acc_name:"All Accounts"}),resolve(accounts)}else reject(new Error(data.response))})["catch"](function(err){console.log(err)})})}function selectAccount(acc){$localStorage.selectedAccount=acc,accSelected=acc}function getSelectedAccount(){return accSelected||$localStorage.selectedAccount}function updateToken(token){var def=$q.defer();return token?(setToken(token),addAuthHeaderForAPI(token),$http.get($config.API_URL+"/users/myself").then(_successGetUserMyself).then(function(data){def.resolve(data)})):def.reject({message:"Token not correct"}),def.promise}function deleteAccountProfile(account_id,data){var def=$q.defer(),config={method:"DELETE",url:$config.API_URL+"/accounts/"+account_id,data:data,headers:{"Content-Type":"application/json;charset=utf-8"}};return $http(config).then(function(data){logout(),def.resolve(data)},def.reject),def.promise}var domains=[],domainSelected=null,apps=[],appSelected=null,accounts=[],accSelected=null;return{getToken:getToken,setToken:setToken,updateToken:updateToken,isAuthed:isAuthed,login:login,logout:logout,getUser:getUser,isAdmin:isAdmin,isReseller:isReseller,isRevadmin:isRevadmin,isUser:isUser,reloadUser:reloadUser,forgotPassword:forgotPassword,resetPassword:resetPassword,updatePassword:updatePassword,getUserDomains:getUserDomains,selectDomain:selectDomain,getSelectedDomain:getSelectedDomain,getUserApps:getUserApps,selectApplication:selectApplication,getSelectedApplication:getSelectedApplication,getUserAccounts:getUserAccounts,selectAccount:selectAccount,getSelectedAccount:getSelectedAccount,hasBillingPlan:hasBillingPlan,deleteAccountProfile:deleteAccountProfile}}User.$inject=["$localStorage","$http","$config","$q","DomainsConfig"],angular.module("revapm.Portal.Auth").factory("User",User)}(),function(){"use strict";function selectAccountDomain(User,$rootScope,$config){return{restrict:"AE",templateUrl:"parts/auth/menu/select-account-domain.html",controller:["$scope",function($scope){$scope.domain=User.getSelectedDomain(),$scope._loading=!0,$scope.onDomainChange=function(){User.selectDomain($scope.domain),$rootScope.$broadcast($config.EVENTS.DOMAIN_CHANGED,{domain:$scope.domain})},User.getUserDomains().then(function(domains){$scope.domains=domains,$scope._loading=!1})}]}}selectAccountDomain.$inject=["User","$rootScope","$config"],angular.module("revapm.Portal.Auth").directive("selectAccountDomain",selectAccountDomain)}(),function(){"use strict";function disableTwoFactorAuthDirective(User,Users,TwoFactorAuth,AlertService,$uibModal){return{restrict:"AE",replace:!0,templateUrl:"parts/auth/2fa/disable-two-factor-auth.html",scope:{ngUserId:"="},controller:["$scope",function($scope){$scope._loading=!1,$scope.currentUser=User.getUser(),$scope.twoFactorAuthEnabled=!1,$scope.isMyUser=!1,$scope.loadUserDetails=function(){return $scope.isMyUser=!1,$scope.ngUserId?($scope.twoFactorAuthEnabled=!1,$scope._loading=!0,void Users.get({id:$scope.ngUserId}).$promise.then(function(data){$scope.twoFactorAuthEnabled=Boolean(data.two_factor_auth_enabled),$scope.isMyUser=Boolean($scope.ngUserId===data.user_id)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})):void console.log("You did not provide userId. User ng-user-id for directive !")},$scope._disable=function(oneTimePassword){if($scope.twoFactorAuthEnabled){if(!$scope.ngUserId)return void console.log("You did not provide userId. User ng-user-id for directive !");$scope._loading=!0;var data={};TwoFactorAuth.disable({userId:$scope.ngUserId},data).$promise.then(function(data){$scope.currentUser.user_id===$scope.ngUserId&&User.reloadUser(),AlertService.success(data.message),$scope.twoFactorAuthEnabled=!1})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})}},$scope.disable=function(){$scope.confirm().then($scope._disable)},$scope.confirm=function(){var modalInstance=$uibModal.open({animation:!0,templateUrl:"confirm2FaDisable.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:{model:{isMyUser:$scope.isMyUser,user:$scope.currentUser}}});return modalInstance.result},$scope.$watch("ngUserId",function(){$scope.ngUserId&&$scope.loadUserDetails()})}]}}disableTwoFactorAuthDirective.$inject=["User","Users","TwoFactorAuth","AlertService","$uibModal"],angular.module("revapm.Portal.Auth").directive("disableTwoFactorAuth",disableTwoFactorAuthDirective)}(),function(){"use strict";function PasswordRestoreController($scope,User,$stateParams,AlertService,$timeout,$state){$scope.alerts=AlertService,$scope.token=$stateParams.token,$scope.password="",$scope.passwordRepeat="",$scope.loading=!1,$scope.reset=function(){return AlertService.clear(),$scope.password&&$scope.passwordRepeat&&$scope.password===$scope.passwordRepeat?($scope.loading=!0,void User.resetPassword($scope.token,$scope.password).then(function(data){data.data&&data.data.message&&(AlertService.success(data.data.message,5e3),$timeout(function(){$state.go("login")},3e3))})["catch"](function(err){err.data&&err.data.message&&AlertService.danger(err.data.message,5e3)})["finally"](function(){$scope.loading=!1})):void AlertService.danger("Passwords did not match",5e3)}}PasswordRestoreController.$inject=["$scope","User","$stateParams","AlertService","$timeout","$state"],angular.module("revapm.Portal.Auth").controller("PasswordRestoreController",PasswordRestoreController)}(),function(){"use strict";function resendRegistrationEmailController($scope,$uibModalInstance,User,Users,AlertService,auth){$scope.data=auth,$scope.data.loading=!1,$scope.close=function(){$scope.data.loading=!1,$uibModalInstance.dismiss()},$scope.onResendEmail=function(){$scope.data.email?($scope.data.loading=!0,Users.resend({email:$scope.data.email}).$promise.then(function(data){data&&data.message&&(AlertService.success(data.message,6e3),$uibModalInstance.close(data.message))},function(err){AlertService.danger(err.data.message)})["catch"](function(err){AlertService.danger(err.data.message)})["finally"](function(){$scope.data.loading=!1})):AlertService.danger("Wrong email address")}}resendRegistrationEmailController.$inject=["$scope","$uibModalInstance","User","Users","AlertService","auth"],angular.module("revapm.Portal.Auth").controller("resendRegistrationEmailController",resendRegistrationEmailController)}(),function(){"use strict";function ForgotPasswordController($scope,$uibModalInstance,$config,$uibModal,User,AlertService){$scope.data={email:"",loading:!1},$scope.close=function(){$scope.data.loading=!1,$uibModalInstance.dismiss()},$scope.forgot=function(){$scope.data.email?($scope.data.loading=!0,User.forgotPassword($scope.data.email).then(function(data){data&&data.data&&data.data.message&&$uibModalInstance.close(data.data.message)})["catch"](function(err){err.status===$config.STATUS.SUBSCRIPTION_REQUIRED?$scope.resendRegistrationEmail($scope.data.email):AlertService.danger(err.data.message)})["finally"](function(){$scope.data.loading=!1})):AlertService.danger("Wrong email address")},$scope.resendRegistrationEmail=function(email,password){var modalInstance=$uibModal.open({templateUrl:"parts/auth/resend-subscription-info.html",controller:"resendRegistrationEmailController",size:"md",resolve:{auth:function(){return{email:email,password:password}}}});modalInstance.result.then(function(data){$uibModalInstance.close()})}}ForgotPasswordController.$inject=["$scope","$uibModalInstance","$config","$uibModal","User","AlertService"],angular.module("revapm.Portal.Auth").controller("ForgotPasswordController",ForgotPasswordController)}(),function(){"use strict";function TwoFactorAuthCodeModalController($scope,$uibModalInstance,auth,User,AlertService,$config){$scope.data={code:"",loading:!1},$scope.close=function(){$scope.data.loading=!1,$uibModalInstance.dismiss()},$scope.login=function(){if(!$scope.data.code)return void AlertService.danger("Please enter One Time Password",3e3);AlertService.clear(),$scope.data.loading=!0;try{User.login(auth.email,auth.password,$scope.data.code).then(function(data){$uibModalInstance.close(data)})["catch"](function(err){err.status===$config.STATUS.UNAUTHORIZED&&AlertService.danger("Wrong one Time Password",5e3),err.data.message&&AlertService.danger(err.data.message,5e3)})["finally"](function(){$scope.data.loading=!1})}catch(e){AlertService.danger(e.message),$scope.data.loading=!1}}}TwoFactorAuthCodeModalController.$inject=["$scope","$uibModalInstance","auth","User","AlertService","$config"],angular.module("revapm.Portal.Auth").controller("TwoFactorAuthCodeModalController",TwoFactorAuthCodeModalController)}(),function(){"use strict";function LoginController($scope,User,$state,AlertService,DashboardSrv,$config,$uibModal,$location){document.querySelector("body").style.paddingTop="0",$scope._loading=!1,$scope.style={height:document.documentElement.clientHeight+"px"};var images=["images/bg/bay_bridge.jpg","images/bg/burney_falls.jpg","images/bg/golden_gate.jpg","images/bg/mirror_lake.jpg","images/bg/painted_ladies.jpg","images/bg/tunnel_view.jpg","images/bg/twin_peaks.jpg","images/bg/yosemite_hill.jpg","images/bg/yosemite_valley.jpg"];$scope.randomImage=images[Math.floor(Math.random()*images.length)],$scope.randomImageStyle={"background-image":"url("+$scope.randomImage+")"},$scope.login=function(email,pass){AlertService.clear(),$scope._loading=!0;try{User.login(email,pass).then(function(data){DashboardSrv.getAll().then(function(dashboards){dashboards&&dashboards.length?$location.path("dashboard/"+dashboards[0].id):$state.go("index.reports.proxy")})})["catch"](function(err){!err.status,err.status===$config.STATUS.TWO_FACTOR_AUTH_REQUIRED&&$scope.enter2faCode(email,pass),err.status===$config.STATUS.SUBSCRIPTION_REQUIRED&&$scope.resendRegistrationEmail(email,pass),err.status===$config.STATUS.UNAUTHORIZED&&AlertService.danger("Wrong username or password",5e3),err.data?err.data.message&&err.status!==$config.STATUS.SUBSCRIPTION_REQUIRED&&AlertService.danger(err.data.message,5e3):AlertService.danger("Something get wrong",5e3)})["finally"](function(){$scope._loading=!1})}catch(e){AlertService.danger(e.message),$scope._loading=!1}},localStorage&&localStorage.email&&localStorage.password&&$scope.login(localStorage.email,localStorage.password),$scope.enter2faCode=function(email,password){var modalInstance=$uibModal.open({templateUrl:"parts/auth/two-factor-auth-code.html",controller:"TwoFactorAuthCodeModalController",size:"md",resolve:{auth:function(){return{email:email,password:password}}}});modalInstance.result.then(function(data){$state.go("index")})},$scope.forgotPassword=function(){var modalInstance=$uibModal.open({templateUrl:"parts/auth/forgot-password.html",controller:"ForgotPasswordController",size:"md"});modalInstance.result.then(function(message){message&&AlertService.success(message,5e3)})},$scope.resendRegistrationEmail=function(email,password){var modalInstance=$uibModal.open({templateUrl:"parts/auth/resend-subscription-info.html",controller:"resendRegistrationEmailController",size:"md",resolve:{auth:function(){return{email:email,password:password}}}});modalInstance.result.then(function(data){})}}LoginController.$inject=["$scope","User","$state","AlertService","DashboardSrv","$config","$uibModal","$location"],angular.module("revapm.Portal.Auth").controller("LoginController",LoginController)}(),function(){"use strict";function userLoginLogoutDirective(User,$state){return{restrict:"AE",replace:!0,templateUrl:"parts/auth/block/user-login-logout.html",scope:{},link:function($scope){$scope.isAuthorized=User.isAuthed(),$scope.user=User.getUser(),$scope.logout=function(){User.logout(),$state.go("login")},$scope.$watch(User.getUser,function(newVal,oldVal){$scope.user=newVal})}}}userLoginLogoutDirective.$inject=["User","$state"],angular.module("revapm.Portal.Auth").directive("userLoginLogout",userLoginLogoutDirective)}(),function(){"use strict";angular.module("revapm.Portal.Signup",["ngStorage","revapm.Portal.Auth","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","base64","ui.router"])}(),function(){"use strict";function SignupBillingPlansController($scope,Users,AlertService,$stateParams,$localStorage,Countries,$uibModal){"ngInject";var billing_plan_handler=$stateParams.billing_plan_handler,$ctrl=this;this.isRegistryFinish=!1,this.countries=Countries.query(),this.model={billing_plan:billing_plan_handler,country:"US"},this.onSignUp=function(model){if(this._loading=!0,model){if(model.passwordConfirm!==model.password)return void AlertService.danger("Passwords did not match",5e3);$scope.userData=_.clone(model),AlertService.clear(),Users.signup(model).$promise.then(function(data){$ctrl.user=model,$ctrl.isRegistryFinish=!0})["catch"](function(err){AlertService.danger(err,5e3)})}},this.onSignUpShort=function(model){this._loading=!0,model&&($scope.userData=_.clone(model),AlertService.clear(),Users.signupShort(model).$promise.then(function(data){$ctrl.user=model,$ctrl.isRegistryFinish=!0})["catch"](function(err){AlertService.danger(err,5e3)}))},this.onRepeatSendRegistrationEmail=function(email,password){var modalInstance=$uibModal.open({templateUrl:"parts/auth/resend-subscription-info.html",controller:"resendRegistrationEmailController",size:"md",resolve:{auth:function(){return{email:email,password:password}}}});modalInstance.result.then(function(data){})},this._loading=!1}SignupBillingPlansController.$inject=["$scope","Users","AlertService","$stateParams","$localStorage","Countries","$uibModal"],angular.module("revapm.Portal.Signup").controller("SignupBillingPlansController",SignupBillingPlansController)}(),function(){"use strict";function SignupController($scope,Users,$localStorage,User,Companies,BillingPlans,CRUDController,Countries,$state,AlertService,$injector){$injector.invoke(CRUDController,this,{$scope:$scope}),$scope.$on("$stateChangeSuccess",function(state){$state.is("signup")&&($scope.model=_.clone(User.getUser()),$scope.model.country="US")}),$scope.chooseBillingPlan=function(bp){$state.go("signup.contact_info",{billing_plan_handler:bp.chargify_handle})},$scope.initBillingPlans=function(){$scope.newUser={},$scope.setResource(BillingPlans),$scope.list()},$scope.initLoginRedirect=function(){setTimeout(function(){$state.go("login")},1e4)},$scope.countries=Countries.query(),$scope.getQueryString=function(model){var q="?first_name="+encodeURIComponent(model.firstname?model.firstname:"")+"&last_name="+encodeURIComponent(model.lastname?model.lastname:"")+"&email="+encodeURIComponent(model.email?model.email:"")+"&phone="+encodeURIComponent(model.phone_number?model.phone_number:"")+"&reference="+encodeURIComponent(model.user_id?model.user_id:"")+"&organization="+encodeURIComponent(model.companyName?model.companyName:"")+"&billing_address="+encodeURIComponent(model.address1?model.address1:"")+"&billing_address_2="+encodeURIComponent(model.address2?model.address2:"")+"&billing_city="+encodeURIComponent(model.city?model.city:"")+"&billing_zip="+encodeURIComponent(model.zipcode?model.zipcode:"")+"&billing_country="+encodeURIComponent(model.country?model.country:"");$scope.query=q},$scope.zipRegex="[0-9]{1,10}",$scope.phoneRegex="[0-9, \\s, \\+, \\-, \\(, \\)]{1,20}",$scope.createUser=function(model){if(model){if(model.passwordConfirm!==model.password)return void $scope.alertService.danger("Passwords did not match",5e3);$scope.userData=_.clone(model),$scope.alertService.clear(),Users.signup(model).$promise.then(function(data){$localStorage.user.email=model.email,$state.go("email_sent")})["catch"](function(err){model.passwordConfirm=model.password,console.log(err),AlertService.danger(err,5e3)})}},$scope._loading=!1}SignupController.$inject=["$scope","Users","$localStorage","User","Companies","BillingPlans","CRUDController","Countries","$state","AlertService","$injector"],angular.module("revapm.Portal.Signup").controller("SignupController",SignupController)}(),function(){"use strict";function VerifyController($scope,Users,User,$stateParams,$state,AlertService,$localStorage,$timeout,$window){var $ctrl=this;$scope.user=User.getUser(),$scope.resendToken=function(model){Users.resend({email:model.email}).$promise.then(function(){AlertService.success("Verification link is sent to "+model.email,5e3)})["catch"](AlertService.danger)},$ctrl.redirectToIndex=function(){$scope.steps="verify-token-success",$timeout(function(){$state.go("index")},5e3)},$stateParams.token&&($scope.steps="verify-token",Users.verify({token:$stateParams.token}).$promise.then(function(res){return $localStorage.user={email:res.email},AlertService.success("Verification was successful",5e3),User.updateToken(res.token).then(User.reloadUser).then(function(){},function(err){AlertService.danger(err.message)})["finally"]($ctrl.redirectToIndex)})["catch"](function(err){$timeout(function(){$scope.steps="verify-token-error"},3e3)}))}VerifyController.$inject=["$scope","Users","User","$stateParams","$state","AlertService","$localStorage","$timeout","$window"],angular.module("revapm.Portal.Signup").controller("VerifyController",VerifyController)}(),function(){"use strict";function routesConfig($stateProvider,$urlRouterProvider,$config){$urlRouterProvider.when("/signup","/signup/plans"),$config.ENABLE_SIMPLIFIED_SIGNUP_PROCESS===!0?$urlRouterProvider.when("/signup/to/:billing_plan_handler","/signup/:billing_plan_handler"):$urlRouterProvider.when("/signup/:billing_plan_handler","/signup/to/:billing_plan_handler"),$stateProvider.state("signup",{"abstract":!1,url:"/signup",views:{layout:{templateUrl:"parts/signup/signup.html"}}}).state("signup.billing_plans",{url:"/plans",views:{form:{controller:"SignupController",templateUrl:"parts/signup/form-billing-plans.tpl.html"}}}).state("signup.contact_info",{url:"/to/:billing_plan_handler",views:{form:{controller:"SignupBillingPlansController",controllerAs:"$ctrl",templateUrl:"parts/signup/form-contact-info.tpl.html"}}}).state("signup.contact_info2",{url:"/:billing_plan_handler",views:{form:{controller:"SignupBillingPlansController",controllerAs:"$ctrl",templateUrl:"parts/signup/form-short-signup.tpl.html"
}}}).state("success",{url:"/signup/success",views:{layout:{controller:"SignupController",templateUrl:"parts/signup/end.html"}}}).state("email_sent",{url:"/signup/email",views:{layout:{controller:"VerifyController",templateUrl:"parts/signup/email_sent.html"}}}).state("verify",{url:"/profile/verify/:token",views:{layout:{controller:"VerifyController",templateUrl:"parts/signup/verify.html"}}}).state("resend_token",{url:"/profile/verify/resend_token",views:{layout:{controller:"VerifyController",templateUrl:"parts/signup/resend.html"}}})}routesConfig.$inject=["$stateProvider","$urlRouterProvider","$config"],angular.module("revapm.Portal.Signup").config(routesConfig)}(),function(){"use strict";function BillingPlansResource(Resource,$config){return Resource($config.API_URL+"/billing_plans/:id",{id:"@id"},{hosted_page:{url:$config.API_URL+"/billing_plans/:id/hosted_page",method:"GET"}})}BillingPlansResource.$inject=["Resource","$config"],angular.module("revapm.Portal.Resources").factory("BillingPlans",BillingPlansResource)}(),function(){"use strict";angular.module("revapm.Portal.Profile",["ui.router","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","revapm.Portal.Companies","datatables","datatables.bootstrap","ngFileSaver"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.profile",{url:"/profile",views:{main:{controller:"ProfileEditController",templateUrl:"parts/profile/edit.html"}}}).state("index.accountSettings.company",{url:"/profile/company",views:{main:{controller:"CompanyProfileEditController",templateUrl:"parts/profile/edit-company.html"}}}).state("index.billing.plans",{url:"/profile/plans",views:{main:{controller:"BillingController",templateUrl:"parts/profile/billing.html"}}}).state("index.billing.statements",{url:"/profile/statements",views:{main:{controller:"StatementsController",templateUrl:"parts/profile/statements.html"}}}).state("index.billing.statement",{url:"/profile/statements/:id",views:{main:{controller:"StatementsController",templateUrl:"parts/profile/statement.html"}}}).state("index.accountSettings.activitylog",{url:"/activitylog",views:{main:{controller:"ActivityLogController",templateUrl:"parts/profile/activity-log.html"}}}).state("index.accountSettings.2fa",{url:"/2fa",views:{main:{controller:"TwoFactorAuthController",templateUrl:"parts/profile/two-factor-auth.html"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Profile").config(routesConfig)}(),function(angular){"use strict";angular.module("revapm.Portal.Profile").filter("firstUpper",function(){return function(input,scope){return input?input.substring(0,1).toUpperCase()+input.substring(1).toLowerCase():""}}).directive("subscriptionSummary",function(){return{restrict:"EA",replace:!0,scope:{subscription:"=ngModel"},templateUrl:"/parts/profile/directives/subscription-summary.tpl.html"}})}(angular),function(){"use strict";function ProfileEditController($scope,User,AlertService){$scope.user=User.getUser(),$scope.pass={current_password:"",new_password:"",confirm_password:""},$scope.clearPassword=function(){$scope.pass={current_password:"",new_password:"",confirm_password:""}},$scope.updatePassword=function(){return _.trim($scope.pass.current_password)&&_.trim($scope.pass.new_password)?$scope.pass.new_password!==$scope.pass.confirm_password?void AlertService.danger("Passwords did not match",5e3):User.updatePassword($scope.pass.current_password,$scope.pass.new_password).then(function(data){return $scope.clearPassword(),AlertService.success("Your password updated",5e3),data})["catch"](function(err){err.data&&err.data.message?AlertService.danger(err.data.message):AlertService.danger("Something goes wrong")}):void AlertService.danger("Please fill all fields. (New password should be at least 8 charecters length)",5e3)},$scope.updateProfile=function(user){$scope.updatePassword()},$scope.disableSubmit=function(pass){return $scope._loading||!pass.current_password||!pass.new_password||!pass.confirm_password}}ProfileEditController.$inject=["$scope","User","AlertService"],angular.module("revapm.Portal.Profile").controller("ProfileEditController",ProfileEditController)}(),function(){"use strict";function ActivityLogController($scope,CRUDController,Activity,$injector,$stateParams,ActivityPhrase,$uibModal){$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Activity),$scope.setState("index.accountSettings.companies"),$scope.list=function(){if(!$scope.resource)throw new Error("No resource provided.");return $scope.loading(!0),$scope.resource.query(function(data){return $scope.records=data.data,$scope.filterList(),$scope._checkPagination(),data}).$promise["finally"](function(){$scope.loading(!1)})},$scope.list(),$scope.getActivityType=function(val){return ActivityPhrase.ACTIVITY_TYPE&&ActivityPhrase.ACTIVITY_TYPE[val]?ActivityPhrase.ACTIVITY_TYPE[val]:"Unknown activity type: "+val},$scope.getActivityTarget=function(log){if(!ActivityPhrase.ACTIVITY_TARGET||!ActivityPhrase.ACTIVITY_TARGET[log.activity_target])return"Unknown activity target: "+log.activity_target;var target="";return log.target_name&&(target=" ("+log.target_name+")"),ActivityPhrase.ACTIVITY_TARGET[log.activity_target]+target},$scope.showDetails=function(log){var log2=angular.copy(log);log2.target_object=JSON.stringify(log2.target_object,null,"    "),log2.activity=$scope.getActivityType(log2.activity_type),log2.activity+=" "+$scope.getActivityTarget(log2);var modalInstance=$uibModal.open({animation:!0,templateUrl:"activityDetails.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:{model:log2}});return modalInstance.result},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()}}ActivityLogController.$inject=["$scope","CRUDController","Activity","$injector","$stateParams","ActivityPhrase","$uibModal"],angular.module("revapm.Portal.Profile").controller("ActivityLogController",ActivityLogController)}(),function(){"use strict";function TwoFactorAuthController($scope,User,TwoFactorAuth,AlertService,$uibModal){$scope._loading=!1,$scope.user=User.getUser(),$scope.twoFAEnabled=$scope.user&&$scope.user.two_factor_auth_enabled,$scope.qrImg="",$scope.asciiCode="",$scope.showDisable=!1,$scope.clearCodes=function(){$scope.qrImg="",$scope.asciiCode="",$scope.oneTimePassword="",$scope.hideDisablePart()},$scope.updateUserProfile=function(enabled){$scope.twoFAEnabled=enabled,$scope.clearCodes(),User.reloadUser()},$scope.init=function(){$scope._loading=!0,TwoFactorAuth.init().$promise.then(function(data){data.google_auth_qr&&($scope.qrImg=data.google_auth_qr),data.ascii&&($scope.asciiCode=data.ascii)})["catch"](function(err){AlertService.danger(err,5e3)})["finally"](function(){$scope._loading=!1})},$scope.enable=function(oneTimePassword){return oneTimePassword?($scope._loading=!0,void TwoFactorAuth.enable({oneTimePassword:oneTimePassword}).$promise.then(function(data){AlertService.success(data.message),$scope.updateUserProfile(!0)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})):(AlertService.danger("Please enter your One Time Password"),void angular.element("#one-time-password").focus())},$scope.showDisablePart=function(){$scope.showDisable=!0},$scope.hideDisablePart=function(){$scope.showDisable=!1},$scope._disable=function(){$scope._loading=!0,TwoFactorAuth.disable({userId:$scope.user.user_id},{}).$promise.then(function(data){AlertService.success(data.message),$scope.updateUserProfile(!1)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})},$scope.confirm=function(){var modalInstance=$uibModal.open({animation:!0,templateUrl:"confirm2FaDisable.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:{model:{isMyUser:$scope.isMyUser,user:$scope.currentUser}}});return modalInstance.result},$scope.disable=function(){$scope.confirm().then($scope._disable)}}TwoFactorAuthController.$inject=["$scope","User","TwoFactorAuth","AlertService","$uibModal"],angular.module("revapm.Portal.Profile").controller("TwoFactorAuthController",TwoFactorAuthController)}(),function(){"use strict";function CompanyProfileEditController($scope,$q,$timeout,User,BillingPlans,Apps,Companies,Countries,CRUDController,$injector,$state,$stateParams,AlertService){$scope.countries=Countries.query(),$scope.billing_plans=[{id:null,name:"Manual"}],BillingPlans.query().$promise.then(function(bp){angular.forEach(bp,function(item){$scope.billing_plans.push(item)})}),$scope.zipRegex="[0-9]{1,10}",$scope.phoneRegex="[0-9, \\s, \\+, \\-, \\(, \\)]{1,20}",$scope.user=User.getUser(),$scope.user.isAdmin=User.isAdmin(),$scope._disabled=$scope.user.access_control_list.readOnly?$scope.user.access_control_list.readOnly:!1,$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Companies),$scope.getCompany=function(id){$scope.get(id).then(function(){$scope.model.subscription_id?$scope.billing_plans.shift():$scope.billing_plans.selected=$scope.billing_plans[0]})["catch"](function(err){$scope.alertService.danger("Could not load company details")})},$scope.initEditCompany=function(){$stateParams.id?$scope.getCompany($stateParams.id):$scope.getCompany($scope.user.companyId)},$scope.updateCompany=function(company){$scope.confirm("confirmUpdateModal.html",company).then(function(){$scope._loading=!0,$scope.update({id:company.id},company).then(function(){AlertService.success("Successfully updated company profile")})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})})},$scope.createBillingProfile=function(company){$scope.confirm("confirmCreateBillingProfileModal.html",company).then(function(){$scope._loading=!0,$scope.update({id:company.id},company).then(function(data){return Companies.createBillingProfile({id:company.id},company).$promise}).then(function(account){$scope.model.billing_id=account.billing_id,AlertService.success("Successfully created billing profile")})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})})},$scope.deleteCompanyProfile=function(company){$scope._loading=!0,$q.all([User.getUserDomains(!0),Apps.query().$promise,BillingPlans.get({id:company.billing_plan}).$promise]).then(function(results){var _model={company:company,domains:results[0],apps:results[1],bp:results[2],isCanBeDeleted:0===results[0].length&&0===results[1].length};$scope.confirm("confirmDeleteModal.html",_model).then(function(data){$scope._loading=!0,User.deleteAccountProfile(company.id,{cancellation_message:_model.cancellation_message}).then(function(){AlertService.success("Successfully deleted account profile"),$timeout(function(){$state.go("index")},10)})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})})})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})},$scope.isCanDeleteCompanyProfile=function(){var model=$scope.model;return model.self_registered===!0&&model.billing_plan.length>0&&("trialing"===model.subscription_state||"trialing"!==model.subscription_state&&model.valid_payment_method_configured===!0)}}CompanyProfileEditController.$inject=["$scope","$q","$timeout","User","BillingPlans","Apps","Companies","Countries","CRUDController","$injector","$state","$stateParams","AlertService"],angular.module("revapm.Portal.Profile").controller("CompanyProfileEditController",CompanyProfileEditController)}(),function(){"use strict";function BillingController($scope,$state,User,Companies,BillingPlans,CRUDController,$injector,$stateParams,AlertService){$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.accounts=[],$scope.account=User.getSelectedAccount(),$scope.onAccountSelect=function(acc){$scope._loading=!0,User.selectAccount(acc),$scope.account=acc,$scope.account=User.getSelectedAccount(),$state.reload()},$scope.initBillingInfo=function(){User.getUserAccounts().then(function(accs){return $scope._loading=!0,$scope.accounts=accs.length>1?accs.slice(1):accs,$scope.account&&$scope.account.acc_id||($scope.account=$scope.accounts[0]),$scope.user=User.getUser(),$scope.setResource(BillingPlans),$scope.list()})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})},$scope.isSelectedPlan=function(id){return $scope.account.plan_id===id},$scope.chooseBillingPlan=function(plan,account){function CompaniesUpdate(){$scope._loading=!0,Companies.update({id:account.acc_id,billing_plan:plan.id,companyName:account.acc_name}).$promise.then(function(){User.getUserAccounts(!0).then(function(accs){AlertService.success("Successfully changed the billing plan",5e3),accs.forEach(function(acc){acc.acc_id===account.acc_id&&(User.selectAccount(acc),$scope.account=User.getSelectedAccount())})})})["catch"](function(err){var message="Oops! Something went wrong";err.data&&err.data.message&&(message=err.data.message),AlertService.danger(message)})["finally"](function(){$scope._loading=!1})}Companies.subscriptionPreview({id:account.acc_id,billing_handle:plan.chargify_handle}).$promise.then(function(data){$scope.confirm("confirmModalUpgrade.html",{plan:plan,migration:data.migration,credit_card:data.credit_card}).then(CompaniesUpdate)},function(){$scope.confirm("confirmModal.html",plan).then(CompaniesUpdate)})["catch"](function(err){var message="Oops! Something went wrong";err.data&&err.data.message&&(message=err.data.message),AlertService.danger(message),$scope._loading=!1})}}BillingController.$inject=["$scope","$state","User","Companies","BillingPlans","CRUDController","$injector","$stateParams","AlertService"],angular.module("revapm.Portal.Profile").controller("BillingController",BillingController).filter("AbsUnit",function(){return function(amount){return Math.abs(amount)}}).filter("MonetaryUnit",function(){return function(amount){return(amount/100).toFixed(2)}})}(),function(){"use strict";function StatementsController($scope,$state,FileSaver,User,Companies,DTOptionsBuilder,DTColumnDefBuilder,AlertService,$stateParams){$scope.params=$stateParams,$scope.user=User.getUser(),$scope._error=!1,$scope.account=User.getSelectedAccount();var pageLength=10;$scope.statementsDtOptions=DTOptionsBuilder.newOptions().withPaginationType("full_numbers").withDisplayLength(10).withBootstrap().withDOM('<<"pull-left"pl>f<t>i<"pull-left"p>>'),$scope.onAccountSelect=function(acc){User.selectAccount(acc),$scope.account=acc,$state.reload()},$scope.initStatements=function(){$scope._loading=!0,User.getUserAccounts().then(function(accs){return $scope.accounts=accs.length>1?accs.slice(1):accs,$scope.account&&$scope.account.acc_id||($scope.account=$scope.accounts[0]),Companies.statements({id:$scope.account.acc_id}).$promise}).then(function(statements){return $scope.statements=statements,Companies.transactions({id:$scope.account.acc_id}).$promise}).then(function(transactions){$scope.transactions=transactions.map(function(t){return t.transaction_type=_.capitalize(t.transaction_type),t.success=JSON.parse(t.success),t})}).then(function(){return Companies.subscriptionSummary({id:$scope.account.acc_id}).$promise.then(function(subscription){return $scope.summary=subscription,subscription})})["catch"](function(err){$scope._loading=!1,$scope._error=err.data,AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope.transactionsDtOptions=DTOptionsBuilder.newOptions().withPaginationType("full_numbers").withDisplayLength(pageLength).withBootstrap().withDOM('<<"pull-left"pl>f<t>i<"pull-left"p>>').withOption("paging",$scope.transactions.length>pageLength),$scope.statementsDtOptions=DTOptionsBuilder.newOptions().withPaginationType("full_numbers").withDisplayLength(pageLength).withBootstrap().withDOM('<<"pull-left"pl>f<t>i<"pull-left"p>>').withOption("paging",$scope.statements.length>pageLength),$scope._loading=!1})},$scope.initStatement=function(){$scope._loading=!0,User.getUserAccounts().then(function(accs){return $scope.accounts=accs.length>1?accs.slice(1):accs,$scope.account&&$scope.account.acc_id||($scope.account=$scope.accounts[0]),Companies.statement({id:$scope.account.acc_id,statement:$stateParams.id}).$promise}).then(function(statement){$scope.statement=statement})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1})},$scope.savePdfStatement=function(id){Companies.getPdfStatement({id:$scope.account.acc_id,statement:$stateParams.id}).$promise.then(function(res){FileSaver.saveAs(res.response,id+".pdf")})["catch"](function(err){AlertService.danger("Oops! Something went wrong")})}}StatementsController.$inject=["$scope","$state","FileSaver","User","Companies","DTOptionsBuilder","DTColumnDefBuilder","AlertService","$stateParams"],angular.module("revapm.Portal.Profile").controller("StatementsController",StatementsController)}(),function(){"use strict";angular.module("revapm.Portal.Users",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.users",{url:"/users",views:{main:{controller:"UsersCrudController",templateUrl:"parts/users/list.html"}}}).state("index.accountSettings.users.new",{url:"/new",views:{page:{templateUrl:"parts/users/new.html"}}}).state("index.accountSettings.users.edit",{url:"/edit/:id",views:{page:{controller:"UsersCrudController",templateUrl:"parts/users/edit.html"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Users").config(routesConfig)}(),function(){"use strict";function UsersCrudController($scope,$q,CRUDController,Users,User,$injector,$state,$stateParams,Companies,DomainsConfig,$anchorScroll){function initModel(){$scope.model={theme:"light",access_control_list:{dashBoard:!0,reports:!1,configure:!1,test:!1,readOnly:!1}}}function dependencies(){return $q.all([Companies.query().$promise,DomainsConfig.query().$promise]).then(function(dataRefs){$scope.companies=dataRefs[0],$scope.domains=dataRefs[1]})}return $injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.auth.isUser()?void $state.go("index.accountSettings.profile"):("index.accountSettings.users.new"===$state.current.name&&dependencies(),$scope.setState("index.accountSettings.users"),$scope.setResource(Users),$scope.roles=["user","admin"],($scope.auth.isRevadmin()||$scope.auth.isReseller())&&$scope.roles.push("reseller"),$scope.companies=[],$scope.domains=[],$scope.model||initModel(),$scope.getUser=function(id){$scope._loading=!0,$scope.get(id).then(dependencies).then(function(){return $scope.model.domain=_.intersection(_.findByValues($scope.domains,"account_id",$scope.model.companyId).map(function(item){return item.domain_name}),$scope.model.domain),$scope.model.domain})["catch"](function(err){$scope.alertService.danger("Could not load user details")})["finally"](function(){$scope._loading=!1})},$scope.deleteUser=function(model){$scope.confirm("confirmModal.html",model).then(function(){$scope["delete"](model)["catch"]($scope.alertService.danger)})},$scope.updateUser=function(model){model&&($scope.alertService.clear(),model.id=model.user_id,$scope.update(model).then(function(data){model.user_id===User.getUser().user_id&&User.reloadUser(),$scope.alertService.success("User updated",5e3)})["catch"]($scope.alertService.danger))},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.createUser=function(model){if(model){if(model.passwordConfirm!==model.password)return void $scope.alertService.danger("Passwords did not match",5e3);$scope.alertService.clear(),delete model.passwordConfirm,model.access_control_list.dashBoard=!0,$scope.create(model).then(function(data){initModel(),$scope.alertService.success("User created",5e3)})["catch"]($scope.alertService.danger)}},$scope.disableSubmit=function(model,isEdit){return(User.isRevadmin()||User.isReseller())&&!model.companyId||model.companyId&&0===model.companyId.length?!0:isEdit?$scope._loading||!model.email||!model.access_control_list||!model.firstname||!model.lastname||!model.role:$scope._loading||!model.email||!model.access_control_list||!model.firstname||!model.lastname||!model.password||!model.passwordConfirm||!model.role},$scope.$on("$stateChangeSuccess",function(state){$scope.list().then(dependencies).then(function(){if(!$scope.auth.isReseller()&&!$scope.auth.isRevadmin())return $q.when();var list=$scope.companies;_.forEach($scope.records,function(item){if(1===item.companyId.length){var index=_.findIndex(list,{id:item.companyId[0]});index>=0&&(item.companyName=list[index].companyName)}else item.companyId.length>1&&(item.companyName="",angular.forEach(item.companyId,function(account_id,key){var index=_.findIndex(list,{id:account_id});index>=0&&(key!==item.companyId.length&&0!==key&&(item.companyName=item.companyName+", "),item.companyName=item.companyName+list[index].companyName)}))}),$q.when(list)}).then(function(){$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500)})}),_.mixin({findByValues:function(collection,property,values){return _.filter(collection,function(item){return _.contains(values,item[property])})}}),$scope.getAccountDomainNameList=function(account_id){account_id||(account_id=$scope.model.companyId);var data=_.findByValues($scope.domains,"account_id",account_id);return data},$scope.getDomainPlaceholder=function(){var list=$scope.getAccountDomainNameList();return list.length>0?"Select domains...":"Domains list is empty..."},void $scope.$watch("model.companyId",function(newVal,oldVal){if(void 0!==newVal&&void 0!==oldVal){var data=_.findByValues($scope.domains,"account_id",$scope.model.companyId).map(function(item){return item.domain_name});$scope.model.domain=_.intersection(data,$scope.model.domain)}}))}UsersCrudController.$inject=["$scope","$q","CRUDController","Users","User","$injector","$state","$stateParams","Companies","DomainsConfig","$anchorScroll"],angular.module("revapm.Portal.Users").controller("UsersCrudController",UsersCrudController)}(),function(){"use strict";angular.module("revapm.Portal.Apps",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","ng.jsoneditor","ngSanitize"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.apps.android",{url:"/android",data:{platform:"Android",platform_code:"Android",list:!0},views:{main:{controller:"AppsController",templateUrl:"parts/apps/list.html"}}}).state("index.apps.ios",{url:"/ios",data:{platform:"iOS",platform_code:"iOS",list:!0},views:{main:{controller:"AppsController",templateUrl:"parts/apps/list.html"}}}).state("index.apps.windows_mobile",{url:"/windows_mobile",data:{platform:"Windows Mobile",platform_code:"Windows_Mobile",list:!0},views:{main:{templateUrl:"parts/apps/list.html",controller:"AppsController"}}}).state("index.apps.ios.new",{url:"/new",views:{page:{templateUrl:"parts/apps/new.html",controller:"AppsController"}}}).state("index.apps.ios.configure",{url:"/configure/:id",views:{page:{templateUrl:"parts/apps/configure.html",controller:"AppsController"}}}).state("index.apps.ios.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/apps/edit.html",controller:"AppEditController"}}}).state("index.apps.ios.versions",{url:"/versions/:id/",views:{page:{templateUrl:"parts/apps/versions.html",controller:"AppVersionsController"}}}).state("index.apps.android.new",{url:"/new",views:{page:{templateUrl:"parts/apps/new.html",controller:"AppsController"}}}).state("index.apps.android.configure",{url:"/configure/:id",views:{page:{templateUrl:"parts/apps/configure.html",controller:"AppsController"}}}).state("index.apps.android.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/apps/edit.html",controller:"AppEditController"}}}).state("index.apps.android.versions",{url:"/versions/:id/",views:{page:{templateUrl:"parts/apps/versions.html",controller:"AppVersionsController"}}}).state("index.apps.windows_mobile.new",{url:"/new",views:{page:{templateUrl:"parts/apps/new.html",controller:"AppsController"}}}).state("index.apps.windows_mobile.configure",{url:"/configure/:id",views:{page:{templateUrl:"parts/apps/configure.html",controller:"AppsController"}}}).state("index.apps.windows_mobile.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/apps/edit.html",controller:"AppEditController"}}}).state("index.apps.windows_mobile.versions",{url:"/versions/:id/",views:{page:{templateUrl:"parts/apps/versions.html",controller:"AppVersionsController"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Apps").config(routesConfig)}(),function(){"use strict";function AppsController($scope,$timeout,$anchorScroll,User,Companies,Apps,CRUDController,$injector,$state,$stateParams,AlertService,$localStorage,$q){function setAccountName(){return $scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){_.forEach($scope.records,function(item){var index=_.findIndex(list,{id:item.account_id});index>=0&&(item.companyName=list[index].companyName)})}):$q.when()}$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Apps),$scope.$state=$state,$scope._baseFilter={app_platform:$state.current.data.platform_code},$scope.$on("$stateChangeSuccess",function(state){$scope.list().then(setAccountName).then(function(){$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500)})}),$scope.companies=[],$scope.model={configs:[{}]},$scope.copyForEditor={},$scope.obj={data:{},options:{mode:"code",modes:["code","view"],error:function(err){alert(err.toString())}}},$scope.filterKeys=["app_name","app_platform","companyName","last_app_published_version","updated_at"],$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.model.account_id=$scope.auth.getUser().companyId[0],User.getUserDomains(!0).then(function(domains){$scope.domainList=domains.map(function(d){return d.domain_name})}),$scope.fetchCompanies=function(companyIds){var promises=[];companyIds.forEach(function(id){promises.push(Companies.get({id:id}).$promise)}),$q.all(promises).then(function(data){$scope.companies=data})},$scope["switch"]=function(item){item.show===!0?item.show=!1:item.show=!0},$scope.initEdit=function(id){$scope.get(id).then(function(){$timeout(function(){$scope.copyForEditor=_.clone($scope.model),delete $scope.copyForEditor.$promise,delete $scope.copyForEditor.$resolved,delete $scope.copyForEditor.id,delete $scope.copyForEditor.account_id,delete $scope.copyForEditor.app_platform,delete $scope.copyForEditor.sdk_key,delete $scope.copyForEditor.created_at,delete $scope.copyForEditor.updated_at,delete $scope.copyForEditor.updated_by,delete $scope.copyForEditor.created_by},2e3)})["catch"](function(err){$scope.alertService.danger("Could not load app details")})},$scope.initNew=function(){$scope.platforms=[{name:"iOS",code:"iOS",disabled:!1},{name:"Android",code:"Android",disabled:!1},{name:"Windows Mobile",code:"Windows_Mobile",disabled:!1}];var idx=_.findIndex($scope.platforms,{code:$state.current.data.platform_code});$scope.model.app_platform=$scope.platforms[idx]},$scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){$scope.companies=list,1===$scope.companies.length&&($scope.model.account_id=$scope.companies[0].id)}):angular.isArray($scope.auth.getUser().companyId)?1===$scope.auth.getUser().companyId.length?$scope.model.account_id=$scope.auth.getUser().companyId[0]:$scope.fetchCompanies($scope.auth.getUser().companyId):$scope.model.account_id=$scope.auth.getUser().companyId,$scope.getApp=function(id){$scope.get(id)["catch"](function(err){$scope.alertService.danger("Could not load app details")})},$scope.createApp=function(model){var modelCopy=_.clone(model);delete modelCopy.configs,modelCopy.app_platform=model.app_platform.code,$scope.create(modelCopy).then(function(){model.app_name="",$scope.alertService.success("App registered",5e3)})},$scope.cleanModel=function(model){var modelCopy=_.clone(model);({id:model.id});return modelCopy.account_id=$scope.model.account_id,delete modelCopy.$promise,delete modelCopy.$resolved,delete modelCopy.id,delete modelCopy.app_platform,delete modelCopy.sdk_key,delete modelCopy.created_at,delete modelCopy.updated_at,delete modelCopy.updated_by,delete modelCopy.created_by,modelCopy},$scope.updateApp=function(model){$scope.confirm("confirmUpdateModal.html",model).then(function(){$scope._loading=!0;var params={id:$scope.model.id};$scope.update(params,$scope.cleanModel(model)).then(function(){$scope.alertService.success("App updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something went wrong",5e3)})["finally"](function(){delete model.$promise,delete model.$resolved,delete model.$rejected,_.assign($scope.model,model),$scope._loading=!1})})},$scope.verify=function(model){return $scope.model.id?($scope._loading=!0,void Apps.update({id:$scope.model.id,options:"verify_only"},$scope.cleanModel(model)).$promise.then(function(data){$scope.alertService.success("App configuration is correct",5e3)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})):void AlertService.danger("Please select app first")},$scope.publish=function(model){return $scope.model.id?void $scope.confirm("confirmPublishModal.html",model).then(function(){$scope._loading=!0,Apps.update({id:$scope.model.id,options:"publish"},$scope.cleanModel(model)).$promise.then(function(data){$scope.alertService.success("App configuration is published",5e3)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){_.assign($scope.model,model),$scope._loading=!1})}):void AlertService.danger("Please select app first")},$scope.deleteApp=function(model){$scope.confirm("confirmModal.html",model).then(function(){var appName=model.app_name;$scope["delete"](model).then(function(data){$scope.alertService.success("App "+appName+" deleted.")})["catch"](function(err){$scope.alertService.danger(err)})["finally"](function(){$scope.page.current>$scope.page.pages.length&&$scope.prevPage()})})},$scope.storeToStorage=function(app){var newApp={app_id:app.id,id:app.id,app_name:app.app_name,sdk_key:app.sdk_key};$localStorage.selectedApplication=newApp},$scope.jsonEditorEvent=function(instance){$scope.jsonEditorInstance=instance},$scope.$watch("jsonEditorInstance.getText()",function(val){if(!val)return void($scope.jsonIsInvalid=!0);try{var json=JSON.parse(val);$scope.jsonIsInvalid=!json||!Object.keys(json).length}catch(err){$scope.jsonIsInvalid=!0}}),$scope.switchKeyVisibility=function(item){item.showKey=!item.showKey},$scope.copyCallback=function(err){err?$scope.alertService.danger("Copying failed, please try manual approach",2e3):$scope.alertService.success("The SDK key has been copied to the clipboard",2e3)}}AppsController.$inject=["$scope","$timeout","$anchorScroll","User","Companies","Apps","CRUDController","$injector","$state","$stateParams","AlertService","$localStorage","$q"],angular.module("revapm.Portal.Apps").controller("AppsController",AppsController)}(),function(){"use strict";function AppVersionsController($scope,Apps,$stateParams,AlertService,$timeout,$window,$filter){$scope._loading=!0,$scope.id=$stateParams.id,$scope.app=Apps.get({id:$stateParams.id}),$scope.versions=[],$scope.currentVersion={},$scope.initVersions=function(){$scope.obj={data:"Configuration will appear here",options:{mode:"code",modes:["code","view"],error:function(err){$window.alert(err.toString())}}}},$scope.format=function(item){item.updated_by?" Updated by "+item.updated_by:" Updated ";return"Version "+item.app_published_version+" Last updated at "+$filter("date")(new Date(item.updated_at),"MMM dd, yyyy H:mm:ss a");
},$scope.onChangeVersion=function(){if(!$scope.currentVersion)return void($scope.obj.data="{}");var idx=_.findIndex($scope.versions,{updated_at:$scope.currentVersion});$scope._loading=!0,Apps.get({id:$stateParams.id,version:idx+1}).$promise.then(function(data){$scope.obj.data=JSON.stringify(data,null,2)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})},Apps.versions({id:$stateParams.id}).$promise.then(function(data){angular.isArray(data)&&($scope.versions=data)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1}),$timeout(function(){$scope.obj.options.mode="code"},10)}AppVersionsController.$inject=["$scope","Apps","$stateParams","AlertService","$timeout","$window","$filter"],angular.module("revapm.Portal.Apps").controller("AppVersionsController",AppVersionsController)}(),function(){"use strict";function AppEditController($scope,$rootScope,Apps,User,CRUDController,$injector,$state,$stateParams,AlertService){$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Apps),$scope.$state=$state,$scope.model={configs:[{}]},$scope.SDKVersionsInConfigs=[],$scope.configuration={},$scope.domainsListPlaceholder="Add domains...",$scope.fieldsToShow=[],$scope.model.configs.domains_white_list=[],$scope.model.configs.domains_black_list=[],$scope.domainList=[],$scope.allUserDomains=[],$scope.protocols=["standard","quic","rmp"],$scope.initEdit=function(id){$scope._loading=!0,$scope.get(id).then(function(){$scope.configuration=$scope.model.configs[0],$scope.SDKVersionsInConfigs=$scope.model.configs.map(function(config){return config.sdk_release_version})}).then(function(){Apps.sdkReleases().$promise.then(function(data){$scope.availableSDKVersions=_.xor(data[$state.current.data.platform],$scope.SDKVersionsInConfigs)}),$scope.selectedSDKVersion=$scope.SDKVersionsInConfigs[0],$scope.fieldsToShow=_.keys($scope.model.configs[0]),$scope.auth.isReseller()||$scope.auth.isRevadmin()?User.getUserDomains(!0).then(function(domains){$scope.allUserDomains=domains;var domainList=_.filter($scope.allUserDomains,{account_id:$scope.model.account_id}).map(function(d){return d.domain_name});$scope.domainList=_.uniq(domainList)}):User.getUserDomains(!0).then(function(domains){$scope.allUserDomains=domains,$scope.domainList=domains.map(function(d){return d.domain_name})})})["catch"](function(err){$scope.alertService.danger("Could not load app details")})["finally"](function(){$scope.$watch("selectedSDKVersion",function(){onSelectedSDKVersionChange()}),$scope._loading=!1})};var onSelectedSDKVersionChange=function(){var idx=_.findIndex($scope.model.configs,{sdk_release_version:$scope.selectedSDKVersion});$scope.configuration=$scope.model.configs[idx],$scope.configuration.allowed_transport_protocols||($scope.configuration.allowed_transport_protocols=[]),$scope.configuration.domains_white_list||($scope.configuration.domains_white_list=[]),$scope.configuration.domains_black_list||($scope.configuration.domains_black_list=[]),$scope.fieldsToShow=_.keys($scope.model.configs[idx])};$scope.toggleProtocolSelection=function(protocol,model){var idx=model.allowed_transport_protocols.indexOf(protocol);idx>-1?model.allowed_transport_protocols.splice(idx,1):model.allowed_transport_protocols.push(protocol)},$scope.isVersion=function(version){return version===$scope.selectedSDKVersion},$scope.isShown=function(name){return $scope.fieldsToShow.findIndex(name)>-1},$scope.addNewSDKConfig=function(version,model){$scope.availableSDKVersions=_.without($scope.availableSDKVersions,version),model.configs.push({sdk_release_version:version}),$scope.SDKVersionsInConfigs.push(version),$scope.selectedSDKVersion=version,$scope.configuration={sdk_release_version:version,allowed_transport_protocols:[],domains_white_list:[],domains_black_list:[]}},$scope.updateConfig=function(model,config){$scope.confirm("confirmUpdateModal.html",model).then(function(){var idx=_.findIndex(model.configs,{sdk_release_version:config.sdk_release_version});model.configs[idx]=config,$scope.update({id:model.id},$scope.cleanModel(model)).then(function(){$scope.alertService.success("App updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something went wrong",5e3)})})},$scope.verify=function(model,config){var idx=_.findIndex(model.configs,{sdk_release_version:config.sdk_release_version});model.configs[idx]=config,$scope._loading=!0,$scope.update({id:model.id,options:"verify_only"},$scope.cleanModel(model)).then(function(data){$scope.alertService.success("App configuration is correct",5e3)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})},$scope.publish=function(model,config){return model.id?void $scope.confirm("confirmPublishModal.html",model).then(function(){var idx=_.findIndex(model.configs,{sdk_release_version:config.sdk_release_version});model.configs[idx]=config,$scope._loading=!0,Apps.update({id:model.id,options:"publish"},$scope.cleanModel(model)).$promise.then(function(data){$rootScope.$broadcast("update:searchData"),$scope.alertService.success("App configuration is published",5e3)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})}):void AlertService.danger("Please select app first")},$scope.cleanModel=function(model){var modelCopy=_.clone(model);({id:model.id});return delete modelCopy.$promise,delete modelCopy.$resolved,delete modelCopy.id,delete modelCopy.app_platform,delete modelCopy.sdk_key,delete modelCopy.created_at,delete modelCopy.updated_at,delete modelCopy.updated_by,delete modelCopy.created_by,modelCopy},$scope.getAccountDomainNameList=function(account_id){return account_id||(account_id=$scope.model.account_id),_.filter($scope.allUserDomains,{account_id:account_id}).map(function(d){return d.domain_name})},$scope.onAccountSelect=function(){$scope.configuration.domains_provisioned_list=[]}}AppEditController.$inject=["$scope","$rootScope","Apps","User","CRUDController","$injector","$state","$stateParams","AlertService"],angular.module("revapm.Portal.Apps").controller("AppEditController",AppEditController)}(),function(){"use strict";function appStagingStatus(Apps,$config,$interval,$rootScope,$state){return{template:'<i class="glyphicon" ng-class="iconStaging" uib-tooltip="{{tooltipStaging}}"></i>&nbsp;&nbsp;&nbsp;<i class="glyphicon" ng-class="iconGlobal" uib-tooltip="{{tooltipGlobal}}"></i>',scope:{ngId:"="},controller:["$scope",function($scope){var intervalPromise,appId;$scope.iconStaging="glyphicon-refresh spin",$scope.tooltipStaging="Staging Status",$scope.iconGlobal="glyphicon-refresh spin",$scope.tooltipGlobal="Global Status",$scope.shouldRefresh=!0,$scope.startRefresh=function(){!appId||!$scope.shouldRefresh||$state.includes("index.apps.*.new")||$state.includes("index.apps.*.edit")||$state.includes("index.apps.*.configure")||$state.includes("index.apps.*.versions")||(intervalPromise=$interval($scope.fetchStatus,$config.APP_STATUS_REFRESH_INTERVAL,1))},$scope.stopRefresh=function(){angular.isDefined(intervalPromise)&&($interval.cancel(intervalPromise),intervalPromise=void 0,$scope.shouldRefresh=!1)},$scope.fetchStatus=function(id){(id||appId)&&(!id&&appId&&(id=appId),Apps.status({id:id}).$promise.then(function(data){$config.DOMAIN_STAGING_STATUS_ICONS[data.staging_status]&&($scope.iconStaging=$config.DOMAIN_STAGING_STATUS_ICONS[data.staging_status]),$scope.tooltipStaging="Staging Status: "+data.staging_status,$config.DOMAIN_PRODUCTION_STATUS_ICONS[data.global_status]&&($scope.iconGlobal=$config.DOMAIN_PRODUCTION_STATUS_ICONS[data.global_status]),$scope.tooltipGlobal="Global Status: "+data.global_status,$scope.startRefresh()})["catch"](function(err){$scope.iconStaging="glyphicon-remove text-danger",$scope.tooltipStaging="Staging Status: Error",$scope.iconGlobal="glyphicon-remove text-danger",$scope.tooltipGlobal="Global Status: Error",$scope.stopRefresh()}))},$scope.$on("$destroy",function(){$scope.stopRefresh()}),$rootScope.$on("$stateChangeStart",function(event){$scope.stopRefresh()}),$scope.$watch("ngId",function(newValue){newValue&&(appId=newValue,$scope.shouldRefresh=!0,$scope.fetchStatus(newValue))})}]}}appStagingStatus.$inject=["Apps","$config","$interval","$rootScope","$state"],angular.module("revapm.Portal.Apps").directive("appStagingStatus",appStagingStatus)}(),function(){"use strict";function appSelectDirective(User,AlertService){return{restrict:"AE",templateUrl:"parts/apps/app-select.html",scope:{ngModel:"=",onSelect:"&"},controller:["$scope",function($scope){$scope.apps=[],$scope._loading=!0,$scope.onAppSelect=function(app){$scope.ngModel=app,User.selectApplication(app)},!$scope.ngModel&&User.getSelectedApplication()&&($scope.ngModel=User.getSelectedApplication()),User.getUserApps().then(function(apps){$scope.apps=apps})["catch"](function(){AlertService.danger("Oops! Something went wrong")})["finally"](function(){$scope._loading=!1}),$scope.$watch("ngModel",function(){$scope.onSelect&&$scope.onSelect()})}]}}appSelectDirective.$inject=["User","AlertService"],angular.module("revapm.Portal.Apps").directive("appSelect",appSelectDirective)}(),function(){"use strict";angular.module("revapm.Portal.Domains",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","ng.jsoneditor","ngSanitize","toggle-switch"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.webApp.domains",{url:"/domains",views:{main:{controller:"DomainsCrudController",templateUrl:"parts/domains/list.html"}}}).state("index.webApp.domains.advanced",{url:"/configure/:id",views:{page:{controller:"DomainsConfigureAdvancedController",templateUrl:"parts/domains/configure_advanced.html"}}}).state("index.webApp.domains.new",{url:"/new",views:{page:{templateUrl:"parts/domains/new.html"}}}).state("index.webApp.domains.edit",{url:"/edit/:id?isAdvanced",views:{page:{templateUrl:"parts/domains/edit.html",controller:"DomainsCrudController"}}}).state("index.webApp.domains.versions",{url:"/versions/:id",views:{page:{controller:"DomainVersionsController",templateUrl:"parts/domains/versions.html"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Domains").config(routesConfig)}(),function(){"use strict";angular.module("revapm.Portal.Domains").constant("DomainsCachingRuleDefault",{version:1,url:{is_wildcard:!0,value:""},edge_caching:{new_ttl:0,override_no_cc:!1,override_origin:!1,query_string_list_is_keep:!1,query_string_keep_or_remove_list:[]},browser_caching:{force_revalidate:!1,new_ttl:0,override_edge:!1},cookies:{ignore_all:!1,keep_or_ignore_list:[],list_is_keep:!1,override:!1,remove_ignored_from_request:!1,remove_ignored_from_response:!1},$cachingRuleState:{isCollapsed:!0}})}(),function(){"use strict";function domainSelectDirective(User,$localStorage,AlertService){return{restrict:"AE",templateUrl:"parts/domains/domain-select/domain-select.html",scope:{selectOne:"=",ngModel:"=",onSelect:"&"},controller:["$scope",function($scope){$scope.domains=[],$scope._loading=!0,$scope.data={model:""},$scope.ngDomain=$scope.ngModel,$scope.onModelSelect=function($model){$scope.ngModel=$model,$localStorage.selectedDomain=$model},User.getUserDomains(!0).then(function(domains){if($scope.domains=domains,(!$scope.ngModel||!$scope.ngModel.id)&&(1===domains.length&&$scope.selectOne&&($scope.onModelSelect($scope.domains[0]),$scope.ngDomain=$scope.domains[0]),$localStorage.selectedDomain&&$localStorage.selectedDomain.id)){var ind=_.findIndex(domains,function(d){return d.id===$localStorage.selectedDomain.id});$scope.onModelSelect($scope.domains[ind]),$scope.ngDomain=$scope.domains[ind]}})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.$watch("ngModel",function(){$scope.onSelect()})}]}}domainSelectDirective.$inject=["User","$localStorage","AlertService"],angular.module("revapm.Portal.Domains").directive("domainSelect",domainSelectDirective)}(),function(){"use strict";function domainStagingStatus(DomainsConfig,$config,$interval,$rootScope,$state){return{template:'<i class="glyphicon" ng-class="iconStaging" uib-tooltip="{{tooltipStaging}}"></i>&nbsp;&nbsp;&nbsp;<i class="glyphicon" ng-class="iconGlobal" uib-tooltip="{{tooltipGlobal}}"></i>',scope:{ngId:"="},controller:["$scope",function($scope){var intervalPromise,domainId;$scope.iconStaging="glyphicon-refresh spin",$scope.tooltipStaging="Staging Status",$scope.iconGlobal="glyphicon-refresh spin",$scope.tooltipGlobal="Global Status",$scope.shouldRefresh=!0,$scope.startRefresh=function(){!domainId||!$scope.shouldRefresh||$state.includes("index.webApp.domains.new")||$state.includes("index.webApp.domains.edit")||$state.includes("index.webApp.domains.advanced")||$state.includes("index.webApp.domains.versions")||(intervalPromise=$interval($scope.fetchStatus,$config.DOMAIN_STATUS_REFRESH_INTERVAL,1))},$scope.stopRefresh=function(){angular.isDefined(intervalPromise)&&($interval.cancel(intervalPromise),intervalPromise=void 0,$scope.shouldRefresh=!1)},$scope.fetchStatus=function(id){(id||domainId)&&(!id&&domainId&&(id=domainId),DomainsConfig.status({id:id}).$promise.then(function(data){$config.DOMAIN_STAGING_STATUS_ICONS[data.staging_status]&&($scope.iconStaging=$config.DOMAIN_STAGING_STATUS_ICONS[data.staging_status]),$scope.tooltipStaging="Staging Status: "+data.staging_status,$config.DOMAIN_PRODUCTION_STATUS_ICONS[data.global_status]&&($scope.iconGlobal=$config.DOMAIN_PRODUCTION_STATUS_ICONS[data.global_status]),$scope.tooltipGlobal="Global Status: "+data.global_status,$scope.startRefresh()})["catch"](function(err){console.log(err),$scope.iconStaging="glyphicon-remove text-danger",$scope.tooltipStaging="Staging Status: Error",$scope.iconGlobal="glyphicon-remove text-danger",$scope.tooltipGlobal="Global Status: Error",$scope.stopRefresh()}))},$scope.$on("$destroy",function(){$scope.stopRefresh()}),$rootScope.$on("$stateChangeStart",function(event){$scope.stopRefresh()}),$scope.$watch("ngId",function(newValue){newValue&&(domainId=newValue,$scope.shouldRefresh=!0,$scope.fetchStatus(newValue))})}]}}domainStagingStatus.$inject=["DomainsConfig","$config","$interval","$rootScope","$state"],angular.module("revapm.Portal.Domains").directive("domainStagingStatus",domainStagingStatus)}(),function(){"use strict";function domainCachingRule(DomainsCachingRuleDefault){return{restrict:"E",replace:!0,scope:!0,bindToController:{rule:"=ngModel"},templateUrl:"parts/domains/domain-caching-rule/domain-caching-rule.tpl.html",controllerAs:"$ctrl",controller:["$scope",function($scope){"ngInject";var $ctrl=this;$ctrl.rule.cookies||($ctrl.rule.cookies={override:!1,ignore_all:!1,keep_or_ignore_list:[],list_is_keep:!1,remove_ignored_from_request:!1,remove_ignored_from_response:!1})}]}}domainCachingRule.$inject=["DomainsCachingRuleDefault"],angular.module("revapm.Portal.Domains").directive("domainCachingRule",domainCachingRule).run(["$templateRequest",function($templateRequest){"ngInject";$templateRequest("parts/domains/domain-caching-rule/domain-caching-rule.tpl.html",!0)}])}(),function(){"use strict";function originRequestHeaders(){return{restrict:"E",replace:!0,scope:!0,bindToController:{origin_request_headers:"=ngModel"},templateUrl:"parts/domains/origin-request-headers/origin-request-headers.tpl.html",controllerAs:"$ctrl",controller:["$scope","$uibModal",function($scope,$uibModal){"ngInject";var $ctrl=this;this.newOriginRequestHeader={operation:"add",header_name:"",header_value:""},this.onAddNew=function(newOriginRequestHeader){_.isArray($ctrl.origin_request_headers)||($ctrl.origin_request_headers=[]),$ctrl.origin_request_headers.push(_.clone(newOriginRequestHeader)),$ctrl.newOriginRequestHeader={operation:"add",header_name:"",header_value:""}},this.onDelete=function(index){var modalInstance=$uibModal.open({animation:!0,templateUrl:"parts/domains/modals/confirmDeleteHeaderInfo.tpl.html",controller:["$scope","$uibModalInstance","model",function($scope,$uibModalInstance,model){$scope.model=model,$scope.ok=function(){$uibModalInstance.close("ok")},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}],resolve:{model:function(){return $ctrl.origin_request_headers[index]}}});modalInstance.result.then(function(){$ctrl.origin_request_headers.splice(index,1)},function(){})}}]}}angular.module("revapm.Portal.Domains").directive("originRequestHeaders",originRequestHeaders)}(),function(){"use strict";function endUserResponseHeaders(){return{restrict:"E",replace:!0,scope:!0,bindToController:{end_user_response_headers:"=ngModel"},templateUrl:"parts/domains/end-user-response-headers/end-user-response-headers.tpl.html",controllerAs:"$ctrl",controller:["$scope","$uibModal",function($scope,$uibModal){"ngInject";var $ctrl=this;this.newEndUserResponseHeader={operation:"add"},this.onAddNew=function(newEndUserResponseHeader){_.isArray($ctrl.end_user_response_headers)||($ctrl.end_user_response_headers=[]),$ctrl.end_user_response_headers.push(_.clone(newEndUserResponseHeader)),$ctrl.newEndUserResponseHeader={operation:"add"}},this.onDelete=function(index){$ctrl.end_user_response_headers.splice(index,1)},this.onDelete=function(index){var modalInstance=$uibModal.open({animation:!0,templateUrl:"parts/domains/modals/confirmDeleteHeaderInfo.tpl.html",controller:["$scope","$uibModalInstance","model",function($scope,$uibModalInstance,model){$scope.model=model,$scope.ok=function(){$uibModalInstance.close("ok")},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}],resolve:{model:function(){return $ctrl.end_user_response_headers[index]}}});modalInstance.result.then(function(){$ctrl.end_user_response_headers.splice(index,1)},function(){})}}]}}angular.module("revapm.Portal.Domains").directive("endUserResponseHeaders",endUserResponseHeaders)}(),function(){"use strict";function DomainsCrudController($scope,$timeout,$localStorage,CRUDController,DomainsConfig,$injector,$stateParams,$config,Companies,$http,$q,$state,$anchorScroll,DomainsCachingRuleDefault,SSL_certs,SSL_conf_profiles){function setAccountName(){return $scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){_.forEach($scope.records,function(item){var index=_.findIndex(list,{id:item.account_id});index>=0&&(item.companyName=list[index].companyName)})}):$q.when()}function fetchSSL_certificates(){return $scope.SSL_certs.length=0,SSL_certs.query().$promise.then(function(list){$scope.auth.isReseller()||$scope.auth.isRevadmin(),$scope.SSL_certs=list}).$promise}function fetchSSL_conf_profiles(){return $scope.SSL_conf_profiles.length=0,SSL_conf_profiles.query().$promise.then(function(list){if($scope.SSL_conf_profiles=list,""===$scope.model.ssl_conf_profile)$scope.model.ssl_conf_profile=$scope.SSL_conf_profiles[0].id;else{var _conf_profile=_.find($scope.SSL_conf_profiles,{id:$scope.model.ssl_conf_profile});_conf_profile&&($scope.model.ssl_protocols=_conf_profile.ssl_protocols,$scope.model.ssl_ciphers=_conf_profile.ssl_ciphers,$scope.model.ssl_prefer_server_ciphers=_conf_profile.ssl_prefer_server_ciphers)}}).$promise}function syncSSL_conf_profile(id){var item=_.find($scope.SSL_conf_profiles,{id:id});item&&angular.extend($scope.model,{ssl_ciphers:item.ssl_ciphers,ssl_protocols:item.ssl_protocols,ssl_prefer_server_ciphers:item.ssl_prefer_server_ciphers})}$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.isAdvancedMode=$stateParams.isAdvanced||!1,$scope.jsoneditor={options:{mode:"code",modes:["code","view"],error:function(err){alert(err.toString())}}},$scope.setState("index.webApp.domains"),$scope.setResource(DomainsConfig),$scope.$on("$stateChangeSuccess",function(state){$state.is($scope.state)&&$scope.list().then(setAccountName).then(function(){$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500)})}),$scope.filterKeys=["domain_name","cname","companyName","updated_at"],$scope.locations=[],$scope.companies=[],$scope.model={},$scope.fetchLocations=function(){$http.get($config.API_URL+"/locations/firstmile").then(function(data){data.status===$config.STATUS.OK&&($scope.locations=data.data)})},$scope.fetchCompanies=function(companyIds){var promises=[];companyIds.forEach(function(id){promises.push(Companies.get({id:id}).$promise)}),$q.all(promises).then(function(data){$scope.companies=data})},$scope.prepareSimpleDomainUpdate=function(model_current){var model;if(model=void 0===model_current.toJSON?_.clone(model_current,!0):_.clone(model_current.toJSON(),!0),model.rev_component_bp&&(delete model.rev_component_bp.cache_opt_choice,delete model.rev_component_bp.certificate_urls,delete model.rev_component_bp.ssl_certificates,model.rev_component_bp.caching_rules&&angular.forEach(model.rev_component_bp.caching_rules,function(item){delete item.$$cachingRuleState})),model.domain_name&&delete model.domain_name,$scope.isCustomSSL_conf_profile)model.ssl_conf_profile="";else{var item=_.find($scope.SSL_conf_profiles,{id:model.ssl_conf_profile});item&&(model.ssl_ciphers=item.ssl_ciphers,model.ssl_protocols=item.ssl_protocols,model.ssl_prefer_server_ciphers=item.ssl_prefer_server_ciphers)}return null!==model.ssl_cert_id&&void 0!==model.ssl_cert_id||(model.ssl_cert_id=""),delete model.cname,delete model.origin_protocol,delete model.id,model},$scope.setAccountId=function(){$scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){$scope.companies=list,1===$scope.companies.length&&($scope.model.account_id=$scope.companies[0].id)}):angular.isArray($scope.auth.getUser().companyId)?1===$scope.auth.getUser().companyId.length?$scope.model.account_id=$scope.auth.getUser().companyId[0]:$scope.fetchCompanies($scope.auth.getUser().companyId):$scope.model.account_id=$scope.auth.getUser().companyId},$scope.setAccountId(),$scope.fetchLocations(),$scope.SSL_certs=[],$scope.SSL_conf_profiles=[],$scope.getDomain=function(id){function validateDomainProperties(domain){$timeout(function(){$scope.modelAdvance=angular.copy($scope.prepareSimpleDomainUpdate(domain))},2e3);var _domain_default_property={proxy_timeout:20,domain_aliases:[],origin_secure_protocol:"use_end_user_protocol",rev_component_co:{enable_rum:!1}};_.defaultsDeep($scope.model,_domain_default_property),delete $scope.model.domain_name,delete $scope.model.cname,delete $scope.model.id,angular.forEach($scope.model.rev_component_bp.caching_rules,function(item){angular.extend(item,{$$cachingRuleState:{isCollapsed:!0}}),item.edge_caching.query_string_keep_or_remove_list||(item.edge_caching.query_string_keep_or_remove_list=[])})}function saveNoChangingValue(model){return $scope.modelInfo={domain_name:model.domain_name,cname:model.cname},delete model.domain_name,delete model.cname,delete model.id,$q.when(model)}$scope.get(id).then(saveNoChangingValue).then(validateDomainProperties).then(function(){return""!==$scope.model.ssl_conf_profile?$scope.isCustomSSL_conf_profile=!1:$scope.isCustomSSL_conf_profile=!0,$q.all([fetchSSL_certificates(),fetchSSL_conf_profiles()])})["catch"](function(err){$scope.alertService.danger("Could not load domain details")})},$scope.deleteDomain=function(model){$scope.confirm("confirmModal.html",model).then(function(){var domainName=model.domain_name;$scope["delete"](model).then(function(data){$scope.alertService.success("Domain "+domainName+" deleted."),$scope.list().then(setAccountName)})["catch"](function(err){$scope.alertService.danger(err)})})},$scope.createDomain=function(model){$scope.create(model).then(function(){$scope.alertService.success("Domain created",5e3),$scope.setAccountId()})["catch"]($scope.alertService.danger)},$scope.publishDomain=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmPublishModal.html",model).then(function(){model=$scope.prepareSimpleDomainUpdate(model),$scope.update({id:modelId,options:"publish"},model).then(function(data){$scope.alertService.success("Domain configuration published",5e3)})["catch"](function(err){$scope.alertService.danger(err)})})}},$scope.validateDomain=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;model=$scope.prepareSimpleDomainUpdate(model),$scope.update({id:modelId,options:"verify_only"},model).then(function(data){$scope.alertService.success("The domain configuration is correct",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)})}},$scope.updateDomain=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmUpdateModal.html",model).then(function(){model=$scope.prepareSimpleDomainUpdate(model),$scope.update({id:modelId},model).then(function(){$scope.alertService.success("Domain updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)})})}},$scope.storeToStorage=function(model){$localStorage.selectedDomain=model},$scope.disableSubmit=function(model,isEdit){return isEdit?$scope._loading||!model.account_id||!model.origin_server||!model.origin_host_header||!model.origin_server_location_id||!model.proxy_timeout:$scope._loading||!model.domain_name||!model.account_id||!model.origin_server||!model.origin_host_header||!model.origin_server_location_id},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.jsonEditorEvent=function(instance){$scope.jsonEditorInstance=instance},$scope.$watch("jsonEditorInstance.getText()",function(val){if(!val)return void($scope.jsonIsInvalid=!0);try{var json=JSON.parse(val);$scope.jsonIsInvalid=!json||!Object.keys(json).length}catch(err){$scope.jsonIsInvalid=!0}}),$scope.onAddNewCachingRule=function(){var _newCachingRule={version:1,url:{is_wildcard:!0,value:""},edge_caching:{new_ttl:0,override_no_cc:!1,override_origin:!1,query_string_list_is_keep:!1,query_string_keep_or_remove_list:[]},browser_caching:{force_revalidate:!1,new_ttl:0,override_edge:!1},cookies:{ignore_all:!1,keep_or_ignore_list:[],list_is_keep:!1,override:!1,remove_ignored_from_request:!1,remove_ignored_from_response:!1},$$cachingRuleState:{isCollapsed:!0}};$scope.model.rev_component_bp.caching_rules.push(_newCachingRule),$scope.alertService.success("A new default caching rule has been added to the end of the list. Please configure the rule before saving the configuration.")},$scope.onRemoveCachingRule=function(index){$scope.confirm("confirmModalDeleteCachingRule.html",{url:$scope.model.rev_component_bp.caching_rules[index].url}).then(function(){$scope.model.rev_component_bp.caching_rules.splice(index,1),$scope.alertService.success("Caching Rule was deleted.")})},$scope.onUpCachingRule=function(element){var array=$scope.model.rev_component_bp.caching_rules,index=array.indexOf(element);return-1===index?!1:array[index-1]?void array.splice(index-1,2,array[index],array[index-1]):0},$scope.onDownCachingRule=function(element){var array=$scope.model.rev_component_bp.caching_rules,index=array.indexOf(element);return-1===index?!1:array[index+1]?void array.splice(index,2,array[index+1],array[index]):0},$scope.onCollapsAllCachingRule=function(){var _rules=$scope.model.rev_component_bp.caching_rules;angular.forEach(_rules,function(item){item.$$cachingRuleState.isCollapsed=!0})},$scope.onExpandAllCachingRule=function(){var _rules=$scope.model.rev_component_bp.caching_rules;angular.forEach(_rules,function(item){item.$$cachingRuleState.isCollapsed=!1})},$scope.onChangeModeView=function(){$scope.isAdvancedMode=!$scope.isAdvancedMode};var _id_ssl_conf_profile="";$scope.$watch("isAdvancedMode",function(newVal,oldVal){if(newVal!==oldVal&&newVal===!0){var newModel=$scope.prepareSimpleDomainUpdate($scope.model);_id_ssl_conf_profile=$scope.model.ssl_conf_profile,$scope.modelAdvance=angular.copy(newModel),$scope.isCustomSSL_conf_profile===!0&&($scope.modelAdvance.ssl_conf_profile="")}newVal!==oldVal&&newVal===!1&&(""!==_id_ssl_conf_profile&&($scope.modelAdvance.ssl_conf_profile=_id_ssl_conf_profile),_.merge($scope.model,$scope.modelAdvance),$scope.isCustomSSL_conf_profile===!1&&syncSSL_conf_profile($scope.model.ssl_conf_profile))}),$scope.$watch("model.ssl_conf_profile",function(newVal,oldVal){newVal!==oldVal&&newVal&&syncSSL_conf_profile(newVal)}),$scope.$watch("isCustomSSL_conf_profile",function(newVal,oldVal){newVal!==oldVal&&"undefuned"!==newVal&&newVal===!1&&syncSSL_conf_profile($scope.model.ssl_conf_profile)})}DomainsCrudController.$inject=["$scope","$timeout","$localStorage","CRUDController","DomainsConfig","$injector","$stateParams","$config","Companies","$http","$q","$state","$anchorScroll","DomainsCachingRuleDefault","SSL_certs","SSL_conf_profiles"],angular.module("revapm.Portal.Domains").controller("DomainsCrudController",DomainsCrudController)}(),function(){"use strict";function DomainVersionsController($scope,DomainsConfig,$stateParams,AlertService,$timeout,$window,$filter){$scope._loading=!0,$scope.id=$stateParams.id,$scope.domain=DomainsConfig.get({id:$stateParams.id}),$scope.versions=[],$scope.currentVersion={},$scope.obj={data:"Configuration will appear here",options:{mode:"code",modes:["code","view"],error:function(err){$window.alert(err.toString())}}},$scope.format=function(item){return"Version "+item.last_published_domain_version+" Last updated at "+$filter("date")(new Date(item.updated_at),"MMM dd, yyyy H:mm:ss a")},$scope.onChangeVersion=function(){return $scope.currentVersion?($scope._loading=!0,void DomainsConfig.get({id:$stateParams.id,version:$scope.currentVersion}).$promise.then(function(data){$scope.obj.data=JSON.stringify(data,null,2)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})):void($scope.obj.data="")},DomainsConfig.versions({id:$stateParams.id}).$promise.then(function(data){angular.isArray(data)&&($scope.versions=data)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1}),$timeout(function(){$scope.obj.options.mode="code"},10)}DomainVersionsController.$inject=["$scope","DomainsConfig","$stateParams","AlertService","$timeout","$window","$filter"],angular.module("revapm.Portal.Domains").controller("DomainVersionsController",DomainVersionsController)}(),function(){"use strict";angular.module("revapm.Portal.SSL_certs",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","ng.jsoneditor","ngSanitize","toggle-switch","toaster"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.webApp.ssl_certs",{url:"/ssl_certs",views:{main:{controller:"SSL_certsCrudController",templateUrl:"parts/ssl_certs/list.html"}}}).state("index.webApp.ssl_certs.new",{url:"/new",views:{page:{templateUrl:"parts/ssl_certs/new.html"}}}).state("index.webApp.ssl_certs.edit",{url:"/edit/:id?isAdvanced",views:{page:{templateUrl:"parts/ssl_certs/edit.html",controller:"SSL_certsCrudController"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.SSL_certs").config(routesConfig)}(),function(){"use strict";function SSL_certsCrudController($scope,$timeout,$localStorage,CRUDController,SSL_certs,$injector,$stateParams,$config,Companies,$http,$q,$state,$anchorScroll){function setAccountName(){return $scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){_.forEach($scope.records,function(item){var index=_.findIndex(list,{id:item.account_id});index>=0&&(item.companyName=list[index].companyName)})}):$q.when()}$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.isAdvancedMode=$stateParams.isAdvanced||!1,$scope.jsoneditor={options:{mode:"code",modes:["code","view"],error:function(err){alert(err.toString())}}},$scope.setState("index.webApp.ssl_certs"),$scope.setResource(SSL_certs),$scope.$on("$stateChangeSuccess",function(state){$state.is($scope.state)&&$scope.list().then(setAccountName).then(function(){
$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500)})}),$scope.filterKeys=["cert_name","companyName","expires_at","domains","updated_at"],$scope.locations=[],$scope.companies=[],$scope.model={},$scope.certs_types=[{id:"shared",typeName:"Shared RevAPM Certificate"},{id:"private",typeName:"Private With Customer-Provided Key"}],$scope.fetchCompanies=function(companyIds){var promises=[];companyIds.forEach(function(id){promises.push(Companies.get({id:id}).$promise)}),$q.all(promises).then(function(data){$scope.companies=data})},$scope.prepareSSL_certToUpdate=function(model_current){var model;return model=void 0===model_current.toJSON?_.clone(model_current,!0):_.clone(model_current.toJSON(),!0),delete model.id,delete model.created_by,delete model.created_at,delete model.updated_at,delete model.expires_at,delete model.domains,delete model.last_published_ssl_config_version,model},$scope.setAccountId=function(){$scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){$scope.companies=list,1===$scope.companies.length&&($scope.model.account_id=$scope.companies[0].id)}):angular.isArray($scope.auth.getUser().companyId)?1===$scope.auth.getUser().companyId.length?$scope.model.account_id=$scope.auth.getUser().companyId[0]:$scope.fetchCompanies($scope.auth.getUser().companyId):$scope.model.account_id=$scope.auth.getUser().companyId},$scope.setAccountId(),$scope.getSSL_cert=function(id){$scope.get(id)["catch"](function(err){$scope.toaster.pop({type:"error",body:"Could not load SSL certificate details",timeout:0,showCloseButton:!0})})},$scope.deleteSSL_cert=function(model){$scope.confirm("confirmModal.html",model).then(function(){var certName=model.cert_name;$scope["delete"](model).then(function(data){$scope.toaster.pop({type:"success",body:"SSL certificate "+certName+" deleted.",timeout:5e3}),$scope.list().then(setAccountName)})["catch"](function(err){$scope.toaster.pop({type:"error",body:err.data.message||"Oops something went wrong",timeout:0,showCloseButton:!0})})})},$scope.createSSL_cert=function(model){model.cert_type="private",$scope.create(model).then(function(){$scope.toaster.pop({type:"success",body:"SSL certificate created",timeout:5e3}),$scope.setAccountId()})["catch"](function(err){$scope.toaster.pop({type:"error",body:err.data.message||"Oops something went wrong",timeout:0,showCloseButton:!0})})},$scope.publishSSL_cert=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmPublishModal.html",model).then(function(){model=$scope.prepareSSL_certToUpdate(model),$scope.update({id:modelId,options:"publish"},model).then(function(data){$scope.toaster.pop({type:"success",body:"SSL certificate published",timeout:5e3})})["catch"](function(err){$scope.toaster.pop({type:"error",body:err.data.message||"Oops something went wrong",timeout:0,showCloseButton:!0})})})}},$scope.validateSSL_cert=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;model=$scope.prepareSSL_certToUpdate(model),$scope.update({id:modelId,options:"verify_only"},model).then(function(data){$scope.toaster.pop({type:"success",body:"The SSL certificate is correct",timeout:5e3})})["catch"](function(err){$scope.toaster.pop({type:"error",body:err.data.message||"Oops something went wrong",timeout:0,showCloseButton:!0})})}},$scope.updateSSL_cert=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmUpdateModal.html",model).then(function(){model=$scope.prepareSSL_certToUpdate(model),$scope.update({id:modelId},model).then(function(){$scope.toaster.pop({type:"success",body:"SSL certificate updated",timeout:5e3})})["catch"](function(err){$scope.toaster.pop({type:"error",body:err.data.message||"Oops something went wrong",timeout:0,showCloseButton:!0})})})}},$scope.storeToStorage=function(model){$localStorage.selectedDomain=model},$scope.disableSubmit=function(model,isEdit){return isEdit?$scope._loading||!model.account_id&&!$scope.model.account_id||!model.public_ssl_cert||!model.private_ssl_key:$scope._loading||!model.cert_name||!model.account_id&&!$scope.model.account_id||!model.public_ssl_cert||!model.private_ssl_key},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()}}SSL_certsCrudController.$inject=["$scope","$timeout","$localStorage","CRUDController","SSL_certs","$injector","$stateParams","$config","Companies","$http","$q","$state","$anchorScroll"],angular.module("revapm.Portal.SSL_certs").controller("SSL_certsCrudController",SSL_certsCrudController)}(),function(){"use strict";function ssl_certStagingStatus(SSL_certs,$config,$interval,$rootScope,$state){return{template:'<i class="glyphicon" ng-class="iconStaging" uib-tooltip="{{tooltipStaging}}"></i>&nbsp;&nbsp;&nbsp;<i class="glyphicon" ng-class="iconGlobal" uib-tooltip="{{tooltipGlobal}}"></i>',scope:{ngId:"="},controller:["$scope",function($scope){var intervalPromise,certId;$scope.iconStaging="glyphicon-refresh spin",$scope.tooltipStaging="Staging Status",$scope.iconGlobal="glyphicon-refresh spin",$scope.tooltipGlobal="Global Status",$scope.shouldRefresh=!0,$scope.startRefresh=function(){!certId||!$scope.shouldRefresh||$state.includes("index.webApp.ssl_certs.new")||$state.includes("index.webApp.ssl_certs.edit")||$state.includes("index.webApp.ssl_certs.advanced")||$state.includes("index.webApp.ssl_certs.versions")||(intervalPromise=$interval($scope.fetchStatus,$config.SSL_CERT_STATUS_REFRESH_INTERVAL,1))},$scope.stopRefresh=function(){angular.isDefined(intervalPromise)&&($interval.cancel(intervalPromise),intervalPromise=void 0,$scope.shouldRefresh=!1)},$scope.fetchStatus=function(id){(id||certId)&&(!id&&certId&&(id=certId),SSL_certs.status({id:id}).$promise.then(function(data){$config.SSL_CERT_STAGING_STATUS_ICONS[data.staging_status]&&($scope.iconStaging=$config.SSL_CERT_STAGING_STATUS_ICONS[data.staging_status]),$scope.tooltipStaging="Staging Status: "+data.staging_status,$config.SSL_CERT_PRODUCTION_STATUS_ICONS[data.global_status]&&($scope.iconGlobal=$config.SSL_CERT_PRODUCTION_STATUS_ICONS[data.global_status]),$scope.tooltipGlobal="Global Status: "+data.global_status,$scope.startRefresh()})["catch"](function(err){console.log(err),$scope.iconStaging="glyphicon-remove text-danger",$scope.tooltipStaging="Staging Status: Error",$scope.iconGlobal="glyphicon-remove text-danger",$scope.tooltipGlobal="Global Status: Error",$scope.stopRefresh()}))},$scope.$on("$destroy",function(){$scope.stopRefresh()}),$rootScope.$on("$stateChangeStart",function(event){$scope.stopRefresh()}),$scope.$watch("ngId",function(newValue){newValue&&(certId=newValue,$scope.shouldRefresh=!0,$scope.fetchStatus(newValue))})}]}}ssl_certStagingStatus.$inject=["SSL_certs","$config","$interval","$rootScope","$state"],angular.module("revapm.Portal.Domains").directive("certStagingStatus",ssl_certStagingStatus)}(),function(){"use strict";angular.module("revapm.Portal.Companies",["ui.router","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","revapm.Portal.Profile"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.companies",{url:"/companies",views:{main:{controller:"CompaniesCrudController",templateUrl:"parts/companies/list.html"}}}).state("index.accountSettings.companies.new",{url:"/new",views:{page:{templateUrl:"parts/companies/new.html"}}}).state("index.accountSettings.companies.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/profile/edit-company.html",controller:"CompanyProfileEditController"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Companies").config(routesConfig)}(),function(){"use strict";function CompaniesCrudController($scope,CRUDController,Companies,User,BillingPlans,$injector,$stateParams,$config,$state,$anchorScroll){$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Companies),$scope.setState("index.accountSettings.companies"),$scope.$on("$stateChangeSuccess",function(state){$state.is($scope.state)&&$scope.list().then(function(){return void 0!==$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500),BillingPlans.query().$promise}).then(function(res){$scope.records=$scope.records.map(function(r){var idx=_.findIndex(res,{id:r.billing_plan});return idx>=0?(r.subscription_name=res[idx].name,r):(r.subscription_name="Manual",r)})})}),$scope.filterKeys=["companyName","comment","createdBy","updated_at","created_at"],$scope.getCompany=function(id){$scope.get(id)["catch"](function(err){$scope.alertService.danger("Could not load company details")})},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.deleteCompany=function(model){$scope.confirm("confirmModal.html",model).then(function(){return $scope["delete"](model)})["catch"]($scope.alertService.danger)},$scope.createCompany=function(model){model&&$scope.create(model).then(function(){$scope.alertService.success("Company created",5e3),$scope.auth.reloadUser()})["catch"]($scope.alertService.danger)},$scope.updateCompany=function(model){$scope.update(model).then(function(){$scope.alertService.success("Company updated",5e3)})["catch"]($scope.alertService.danger)},$scope.onGoToUsageReport=function(model){model.acc_id=model.id,model.acc_name=model.companyName,model.plan_id=model.billing_plan,model.billing_plan=model.billing_plan,User.selectAccount(model),$state.go("index.billing.usage")},$scope.onGoToBillingPlans=function(model){model.acc_id=model.id,model.acc_name=model.companyName,model.plan_id=model.billing_plan,model.billing_plan=model.billing_plan,User.selectAccount(model),$state.go("index.billing.plans")},$scope.onGoToBillingStatement=function(model){model.acc_id=model.id,model.acc_name=model.companyName,model.plan_id=model.billing_plan,model.billing_plan=model.billing_plan,User.selectAccount(model),$state.go("index.billing.statements")}}CompaniesCrudController.$inject=["$scope","CRUDController","Companies","User","BillingPlans","$injector","$stateParams","$config","$state","$anchorScroll"],angular.module("revapm.Portal.Companies").controller("CompaniesCrudController",CompaniesCrudController)}(),function(){"use strict";angular.module("revapm.Portal.Cache",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ng.jsoneditor"])}(),function(){"use strict";function CacheRoutingConfig($stateProvider){$stateProvider.state("index.webApp.cache",{url:"/cache/purge",views:{main:{controller:"CachePurgeController",templateUrl:"parts/cache/purge.html"}}}).state("index.webApp.advanced",{url:"/cache/advanced",views:{main:{controller:"CachePurgeController",templateUrl:"parts/cache/purge_advanced.html"}}})}CacheRoutingConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Cache").config(CacheRoutingConfig)}(),function(){"use strict";function CachePurgeController($scope,Cache,DomainsConfig,AlertService,$timeout,$uibModal){$scope._loading=!1,$scope.json={purges:[{url:{is_wildcard:!0,expression:"/images/*.png"}}]},$scope.text="",$scope.options={mode:"code",modes:["code","view"],error:function(err){alert(err.toString())}},$scope.purge=function(){if($scope.domain){var json=angular.copy($scope.json);json.domainName=$scope.domain.domain_name,$scope._loading=!0,Cache.purge({},json).$promise.then(function(data){AlertService.success("The request has been successfully submitted",5e3)})["catch"](function(err){var message="Oops something went wrong";err&&err.data&&err.data.message&&(message=err.data.message),AlertService.danger(message,5e3)})["finally"](function(){$scope._loading=!1})}},$scope.purgeText=function(){if($scope.text&&$scope.domain){var json={domainName:$scope.domain.domain_name,purges:[]},list=$scope.text.split("\n");list.forEach(function(val){json.purges.push({url:{is_wildcard:!0,expression:val}})}),$scope._loading=!0,Cache.purge({},json).$promise.then(function(data){console.log(data),AlertService.success("The request has been successfully submitted",5e3)})["catch"](function(err){var message="Oops something went wrong";err&&err.data&&err.data.message&&(message=err.data.message),AlertService.danger(message,5e3)})["finally"](function(){$scope._loading=!1})}},$scope.purgeDefaultText=function(){if($scope.domain){$scope.confirm("confirmModal.html",$scope.domain).then(function(){$scope.domain.domain_name;$scope._loading=!0,Cache.purge({},json).$promise.then(function(data){AlertService.success("The request has been successfully submitted",5e3)})["catch"](function(err){var message="Oops something went wrong";err&&err.data&&err.data.message&&(message=err.data.message),AlertService.danger(message,5e3)})["finally"](function(){$scope._loading=!1})});var json={domainName:$scope.domain.domain_name,purges:[{url:{is_wildcard:!0,expression:"/**/*"}},{url:{is_wildcard:!0,expression:"/"}},{url:{is_wildcard:!0,expression:"/**"}}]}}},$scope.jsonEditorEvent=function(instance){$scope.jsonEditorInstance=instance},$scope.$watch("jsonEditorInstance.getText()",function(val){if(val)try{var json=JSON.parse(val);$scope.jsonIsInvalid=!json||!Object.keys(json).length}catch(err){$scope.jsonIsInvalid=!0}}),$scope.confirm=function(template,resolve){angular.isObject(template)&&(resolve=template,template=""),angular.isObject(resolve)&&(resolve={model:resolve});var modalInstance=$uibModal.open({animation:!0,templateUrl:template||"parts/modal/confirmDelete.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:resolve||{}});return modalInstance.result}}CachePurgeController.$inject=["$scope","Cache","DomainsConfig","AlertService","$timeout","$uibModal"],angular.module("revapm.Portal.Cache").controller("CachePurgeController",CachePurgeController)}(),function(){"use strict";angular.module("revapm.Portal.ImportConfig",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ng.jsoneditor"])}(),function(){"use strict";function ImportConfigRoutingConfig($stateProvider){$stateProvider.state("index.webApp.importConfig",{url:"/import-config",views:{main:{controller:"ImportConfigController",templateUrl:"parts/import-config/import-config.html"}}})}ImportConfigRoutingConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.ImportConfig").config(ImportConfigRoutingConfig)}(),function(){"use strict";function ImportConfigController($scope,CRUDController,$injector){$injector.invoke(CRUDController,this,{$scope:$scope}),$scope._loading=!1,$scope.config={type:"acc"},$scope["import"]=function(){$scope.confirm("confirmImportConfig.html",$scope.domain||{}).then(function(){$scope.alertService.success("The provided configuration has been scheduled for processing.",5e3),$scope.config={type:"acc"}})}}ImportConfigController.$inject=["$scope","CRUDController","$injector"],angular.module("revapm.Portal.ImportConfig").controller("ImportConfigController",ImportConfigController)}(),function(){"use strict";angular.module("revapm.Portal.Reports",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","chart.js","angular-intro"])}(),function(){"use strict";function ReportsRoutes($stateProvider){$stateProvider.state("index.reports.general",{url:"/reports/general",views:{main:{controller:"GeneralCtrl",controllerAs:"vm",templateUrl:"parts/reports/general.html"}}}).state("index.reports.proxy",{url:"/reports/proxy",views:{main:{controller:"ReportsProxyTrafficController",templateUrl:"parts/reports/proxy.html"}}}).state("index.reports.edge-cache",{url:"/reports/edge-cache",views:{main:{controller:"EdgeCacheReportsController",controllerAs:"vm",templateUrl:"parts/reports/edge-cache.html"}}}).state("index.reports.topreports",{url:"/reports/topreports",views:{main:{controller:"TopReportsTrafficController",templateUrl:"parts/reports/top-reports.html"}}}).state("index.reports.top",{url:"/reports/top",views:{main:{controller:"TopObjectsController",templateUrl:"parts/reports/top.html"}}}).state("index.reports.fbt",{url:"/reports/fbt",views:{main:{controller:"FBTReportsController",templateUrl:"parts/reports/fbt.html"}}}).state("index.reports.mob",{url:"/reports/mobile",views:{main:{controller:"MobileReportsController",templateUrl:"parts/reports/mobile.html"}}}).state("index.reports.heatmaps",{url:"/reports/heatmaps",views:{main:{controller:"TrafficHeatmapsController",templateUrl:"parts/reports/heatmaps.html"}}}).state("index.reports.lm_rtt_heatmaps",{url:"/reports/lm_rtt_heatmaps",views:{main:{controller:"LMRTTHeatmapsController",templateUrl:"parts/reports/lm-rtt-heatmaps.html"}}})}ReportsRoutes.$inject=["$stateProvider"],angular.module("revapm.Portal.Domains").config(ReportsRoutes)}(),function(){"use strict";function D3ChartHelper(){function createSvgElement(element){return element=element||"body",d3.select(element).append("svg")}return{createSvgElement:createSvgElement}}angular.module("revapm.Portal.Reports").factory("D3ChartHelper",D3ChartHelper)}(),function(){"use strict";function ChartColorService(){function getRandomRgbPart(){return Math.floor(256*Math.random())}function randomColors(amount){if(!amount)return[];for(var result=[];amount--;){var rgb=d3.rgb(getRandomRgbPart(),getRandomRgbPart(),getRandomRgbPart());result.push(rgb.toString())}return result}function randomScaleOrdinalRange(amount){return d3.scale.ordinal().range(randomColors(amount))}return{randomColors:randomColors,randomScaleOrdinalRange:randomScaleOrdinalRange}}angular.module("revapm.Portal.Reports").factory("ChartColorService",ChartColorService)}(),function(){"use strict";function PieChartHelper(ChartColorService,D3ChartHelper){function drawPieChart(element,data,config){function change(data){function midAngle(d){return d.startAngle+(d.endAngle-d.startAngle)/2}var slice=svg.select(".slices").selectAll("path.slice").data(pie(data),key);slice.enter().insert("path").style("fill",function(d){return color(d.data.label)}).attr("class","slice"),slice.transition().duration(1e3).attrTween("d",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){return arc(interpolate(t))}}),slice.exit().remove();var text=svg.select(".labels").selectAll("text").data(pie(data),key);text.enter().append("text").attr("dy",".35em").text(function(d){return d.data.label}),text.transition().duration(1e3).attrTween("transform",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){var d2=interpolate(t),pos=outerArc.centroid(d2);return pos[0]=radius*(midAngle(d2)<Math.PI?1:-1),"translate("+pos+")"}}).styleTween("text-anchor",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){var d2=interpolate(t);return midAngle(d2)<Math.PI?"start":"end"}}),text.exit().remove();var polyline=svg.select(".lines").selectAll("polyline").data(pie(data),key);polyline.enter().append("polyline"),polyline.transition().duration(1e3).attrTween("points",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){var d2=interpolate(t),pos=outerArc.centroid(d2);return pos[0]=.95*radius*(midAngle(d2)<Math.PI?1:-1),[arc.centroid(d2),outerArc.centroid(d2),pos]}}),polyline.exit().remove()}angular.isArray(element)&&(data=element,element="body"),data=data||[];var width=$(element).width()||400,height=$(element).height()||200,radius=Math.min(width,height)/2,svg=D3ChartHelper.createSvgElement(element).attr("width",width).attr("height",height).append("g"),pie=d3.layout.pie().sort(null).value(function(d){return d.value}),key=function(d){return d.data.label};svg.append("g").attr("class","slices"),svg.append("g").attr("class","labels"),svg.append("g").attr("class","lines");var arc=d3.svg.arc().outerRadius(.8*radius).innerRadius(.05*radius),outerArc=d3.svg.arc().innerRadius(.9*radius).outerRadius(.9*radius);svg.attr("transform","translate("+width/2+","+height/2+")");var color=d3.scale.category20();return change(data),change}return{drawPieChart:drawPieChart}}PieChartHelper.$inject=["ChartColorService","D3ChartHelper"],angular.module("revapm.Portal.Reports").factory("PieChartHelper",PieChartHelper)}(),function(angular){"use strict";function reportsFilterService(Stats){function getDevices(domainId){return Stats.device({domainId:domainId}).$promise.then(defaultResponseHandler)}function getOs(domainId){return Stats.os({domainId:domainId}).$promise.then(defaultResponseHandler)}function getProtocol(domainId){return Stats.protocol({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){var protocol="Unknows";80===os.key&&(protocol="HTTP"),443===os.key&&(protocol="HTTPS"),$scope.protocol.labels.push(protocol),$scope.protocol.data.push(os.count)})})}function getHttpMethod(domainId){return Stats.httpMethod({domainId:domainId}).$promise.then(defaultResponseHandler)}function getHttpProtocol(domainId){return Stats.httpProtocol({domainId:domainId}).$promise.then(defaultResponseHandler)}function defaultResponseHandler(response){var formattedData={labels:[],data:[]};return response.data&&response.data.length>0&&_.forEach(response.data,function(data){formattedData.labels.push(data.key),formattedData.data.push(data.count)}),formattedData}var api={getDevices:getDevices,getOs:getOs,getProtocol:getProtocol,getHttpMethod:getHttpMethod,getHttpProtocol:getHttpProtocol};return api}angular.module("revapm.Portal.Reports").service("reportsFilterService",reportsFilterService),reportsFilterService.$inject=["Stats"]}(angular),function(){"use strict";function filterTimePeriods(){var directive={restrict:"AE",templateUrl:"parts/reports/filters/time-period.html",scope:{ngFilters:"=",onFilter:"&",flCountry:"=",flOs:"=",flDevice:"="},controller:FilterTimePeriodCtrl};return directive}function FilterTimePeriodCtrl($scope,filterGeneratorService){function callbackOnGlobalFilterChange($event,eventDataObject){$scope.ngFilters||($scope.ngFilters={}),_.forIn(eventDataObject.data,function(value,key){$scope.ngFilters[key]=value}),_.forIn($scope.ngFilters,function(value,key){eventDataObject.data[key]||delete $scope.ngFilters[key]}),$scope.onFilter()}function updateFilters(){$scope.ngFilters||($scope.ngFilters={}),$scope.ngFilters.from_timestamp=moment(Date.now()).subtract(parseInt($scope.delay),"days").valueOf(),$scope.ngFilters.to_timestamp=Date.now(),$scope.onFilter()}$scope.delay="1",$scope.updateFilters=updateFilters,filterGeneratorService.subscribeOnFilterChangeEvent($scope,callbackOnGlobalFilterChange)}angular.module("revapm.Portal.Reports").directive("filterTimePeriods",filterTimePeriods),FilterTimePeriodCtrl.$inject=["$scope","filterGeneratorService"]}(),function(){"use strict";function filterTopObjects(){return{restrict:"AE",templateUrl:"parts/reports/filters/top-objects-filter.html",scope:{ngFilters:"=",onFilter:"&",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","filterGeneratorService",function($scope,filterGeneratorService){function callbackOnGlobalFilterChange($event,eventDataObject){$scope.ngFilters||($scope.ngFilters={}),_.forIn(eventDataObject.data,function(value,key){$scope.ngFilters[key]=value}),_.forIn($scope.ngFilters,function(value,key){eventDataObject.data[key]||delete $scope.ngFilters[key]}),$scope.ngFilters.from_timestamp<moment().subtract(1,"days").valueOf()&&($scope.ngFilters.from_timestamp=moment().subtract(1,"days").valueOf()),$scope.ngFilters.to_timestamp>Date.now()&&($scope.ngFilters.to_timestamp=Date.now()),$scope.onFilter()}$scope.delay="24",$scope.ngFilters||($scope.ngFilters={}),$scope.ngFilters.count="20",filterGeneratorService.subscribeOnFilterChangeEvent($scope,callbackOnGlobalFilterChange),$scope.updateFilters=function(){$scope.ngFilters.from_timestamp=moment(Date.now()).subtract(parseInt($scope.delay),"hours").valueOf(),$scope.ngFilters.to_timestamp=Date.now(),$scope.onFilter()}}]}}angular.module("revapm.Portal.Reports").directive("filterTopObjects",filterTopObjects)}(),function(){"use strict";function mobileTrafficFilters(){return{restrict:"AE",templateUrl:"parts/reports/filters/mobile-traffic-filters.html",scope:{ngFilters:"=",onFilter:"&",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"="},controller:["$scope",function($scope){$scope.span="1",$scope.update=function(){$scope.ngFilters||($scope.ngFilters={}),$scope.ngFilters.from_timestamp=moment().subtract($scope.span,"days").valueOf(),$scope.ngFilters.to_timestamp=Date.now(),$scope.onFilter()}}]}}angular.module("revapm.Portal.Reports").directive("mobileTrafficFilters",mobileTrafficFilters)}(),function(){"use strict";function mobileTopObjectsFilters(){return{restrict:"AE",templateUrl:"parts/reports/filters/mobile-top-objects-filters.html",scope:{ngFilters:"=",onFilter:"&",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"="},controller:["$scope",function($scope){$scope.span="24",$scope.count="10",$scope.update=function(){$scope.ngFilters||($scope.ngFilters={}),$scope.ngFilters.count=parseInt($scope.count),$scope.ngFilters.from_timestamp=moment().subtract($scope.span,"hours").valueOf(),$scope.ngFilters.to_timestamp=Date.now(),$scope.onFilter()}}]}}angular.module("revapm.Portal.Reports").directive("mobileTopObjectsFilters",mobileTopObjectsFilters)}(),function(){"use strict";function pieChartDirective(){function link($scope,element,attrs){var el=element[0],chartOpts={chart:{renderTo:el,type:"pie"},title:!1,tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,0)+"% ("+Highcharts.numberFormat(this.y,0,".",",")+" requests)"}},plotOptions:{pie:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,format:"<b>{point.name}</b>: {point.percentage:.1f} %",style:{color:Highcharts.theme&&Highcharts.theme.contrastTextColor||"black"}},depth:45}},credits:{enabled:!1},series:[{data:[]}]},chart=new Highcharts.Chart(angular.merge(chartOpts,$scope.ngChartOptions||{}));$scope.$watch("ngData",function(value){value&&_.isArray(value)&&chart.series[0].setData(value)})}return{scope:{ngChartOptions:"=",ngData:"="},link:link}}angular.module("revapm.Portal.Reports").directive("pieChart",pieChartDirective)}(),function(){"use strict";function barChartDirective(){function link($scope,element,attrs){var el=element[0],chartOpts={chart:{renderTo:el,type:"bar"},title:!1,tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,0)+"% ("+Highcharts.numberFormat(this.y,0,".",",")+" requests)"}},plotOptions:{bar:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,format:"<b>{point.name}</b>: {point.percentage:.1f} %",style:{color:Highcharts.theme&&Highcharts.theme.contrastTextColor||"black"}},innerSize:100,depth:45}},credits:{enabled:!1},series:[{data:[]}]},chart=new Highcharts.Chart(angular.merge(chartOpts,$scope.ngChartOptions||{}));$scope.$watch("ngData",function(value){value&&_.isArray(value)&&chart.series[0].setData(value)})}return{scope:{ngChartOptions:"=",ngData:"="},link:link}}angular.module("revapm.Portal.Reports").directive("barChart",barChartDirective)}(),function(){"use strict";function lineChartDirective(){function link($scope,element,attrs){var el=element[0],chartOptions={chart:{renderTo:el,type:"areaspline"},title:{text:""},xAxis:{categories:[],tickInterval:4,crosshair:{width:1,color:"#000000"}},yAxis:{title:{text:"RPS"},plotLines:[{value:0,width:1,color:"#808080"}]},legend:{borderWidth:0},plotOptions:{areaspline:{marker:{enabled:!1}}},credits:{enabled:!1},series:[]},chart=new Highcharts.Chart(angular.merge(chartOptions,$scope.ngChartOptions||{}));$scope.reload=function(){chart.redraw()},$scope.clearChart=function(){chart.series.forEach(function(series){series.remove()}),$scope.reload()},$scope.$watch("ngData",function(value){if(value&&_.isObject(value)){if($scope.clearChart(),_.isArray(value.labels)){if(0===value.labels.length)return;chart.xAxis[0].setCategories(value.labels)}if(_.isArray(value.series)){if(0===value.series.length)return;value.series.forEach(function(val){chart.addSeries(val)})}$scope.reload()}}),$scope.$watch("xAxis",function(value){return value&&_.isArray(value)?0===value.length?void $scope.clearChart():void chart.xAxis[0].update(value):void 0})}return{scope:{ngChartOptions:"=",ngData:"="},link:link}}angular.module("revapm.Portal.Reports").directive("lineChart",lineChartDirective)}(),function(){"use strict";function d3PieChart(PieChartHelper){return{restrict:"AE",template:"<div></div>",scope:{ngData:"="},link:function(scope,element,attrs){scope.ngData||(scope.ngData=[]);var redraw=PieChartHelper.drawPieChart(element[0],[]);scope.$watch("ngData",function(){return scope.ngData&&0!==scope.ngData.length?void redraw(scope.ngData):void redraw([])})}}}d3PieChart.$inject=["PieChartHelper"],angular.module("revapm.Portal.Reports").directive("d3PieChart",d3PieChart)}(),function(){"use strict";function requestsChartDirective(){var directive={restrict:"AE",templateUrl:"parts/reports/charts/requests.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"="},controller:RequestsChartCtrl};return directive}function RequestsChartCtrl($scope,Stats,Util){function generateFilterParams(filters){var params={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};return _.forEach(filters,function(val,key){-1!==_.indexOf(_filters_field_list,key)?"-"!==val&&""!==val&&(params[key]=val):"count_last_day"===key&&(params.from_timestamp=moment().subtract(val,"days").valueOf(),params.to_timestamp=Date.now(),delete params.count_last_day)}),params}function reloadTrafficStats(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Incoming Bandwidth",data:[]},{name:"Outgoing Bandwidth",data:[]}]},Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters))).$promise.then(function(data){if(traffic_avg_=traffic_max_=traffic_total_=0,data.data&&data.data.length>0){var series=[{name:"Incoming Bandwidth",data:[]},{name:"Outgoing Bandwidth",data:[]}],interval=parseInt(data.metadata.interval_sec||1800),labels=[],offset=1e3*interval;data.data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label});var sent_bw=8*item.sent_bytes/interval;series[1].data.push(sent_bw),series[0].data.push(item.received_bytes/interval*8),traffic_total_+=item.sent_bytes,sent_bw>traffic_max_&&(traffic_max_=sent_bw),traffic_avg_+=sent_bw}),traffic_avg_/=data.data.length,$scope.traffic={labels:labels,series:series}}})["finally"](function(){$scope._loading=!1}))}var _filters_field_list=["from_timestamp","to_timestamp","country","device","os"];$scope._loading=!1,$scope.reloadTrafficStats=reloadTrafficStats,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets);var info_=null,traffic_avg_=0,traffic_max_=0,traffic_total_=0,tickInterval_=10;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('Traffic Level Avg <span style="font-weight: bold; color: #3c65ac;">'+Util.convertTraffic(traffic_avg_)+'</span> Max <span style="font-weight: bold; color: #3c65ac;">'+Util.convertTraffic(traffic_max_)+'</span><br>Traffic Total <span style="font-weight: bold; color: #3c65ac;">'+Util.humanFileSizeInGB(traffic_total_,3)+"</span>",this.xAxis[0].toPixels(0),3,"",0,0,!0).css({
color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Bandwidth"},labels:{formatter:function(){return Util.convertTraffic(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": "+Util.convertTraffic(this.y)}}},$scope.traffic={labels:[],series:[{name:"Incoming Bandwidth",data:[]},{name:"Outgoing Bandwidth",data:[]}]},$scope.$watch("ngDomain",function(){$scope.ngDomain&&reloadTrafficStats()})}RequestsChartCtrl.$inject=["$scope","Stats","Util"],angular.module("revapm.Portal.Reports").directive("requestsChart",requestsChartDirective),requestsChartDirective.$inject=[]}(),function(){"use strict";function histCacheChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/hits-cache.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"=",hideFilters:"="},controller:["$scope","Stats","$q","Util","filterGeneratorService",function($scope,Stats,$q,Util,filterGeneratorService){function generateFilterParams(filters){var params={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};return _.forEach(filters,function(val,key){-1!==_.indexOf(_filters_field_list,key)?"-"!==val&&""!==val&&(params[key]=val):"count_last_day"===key&&(params.from_timestamp=moment().subtract(val,"days").valueOf(),params.to_timestamp=Date.now(),delete params.count_last_day)}),params}function callbackOnGlobalFilterChange($event,eventDataObject){$scope.filters||($scope.filters={}),_.forIn(eventDataObject.data,function(value,key){$scope.filters[key]=value}),_.forIn($scope.filters,function(value,key){eventDataObject.data[key]||delete $scope.filters[key]}),$scope.reload()}var _filters_field_list=["from_timestamp","to_timestamp","country","device","os"];$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets),$scope.traffic={labels:[],series:[{name:"Cache Hit",data:[]},{name:"Cache Miss",data:[]}]};var info_=null,hit_=0,miss_=0,tickInterval_=10;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null);var rel_hit=0,rel_miss=0;miss_+hit_!==0&&(rel_hit=Math.round(1e3*hit_/(miss_+hit_))/10,rel_miss=Math.round(1e3*miss_/(miss_+hit_))/10),info_=this.renderer.label('Cache Hits <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(hit_)+'</span> Requests, <span style="font-weight: bold; color: #3c65ac;">'+rel_hit+'</span>%<br> Cache Miss <span style="font-weight: bold; color: darkred;">'+Util.formatNumber(miss_)+'</span> Requests, <span style="font-weight: bold; color: darkred;">'+rel_miss+"</span>%",this.xAxis[0].toPixels(0),3,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},filterGeneratorService.subscribeOnFilterChangeEvent($scope,callbackOnGlobalFilterChange),$scope.reload=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Cache Hit",data:[]},{name:"Cache Miss",data:[]}]},$q.all([Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters),{cache_code:"HIT"})).$promise,Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters),{cache_code:"MISS"})).$promise]).then(function(data){var interval=data[0].metadata.interval_sec||1800,offset=1e3*interval,labels=[],series=[{name:"Cache Hit",data:[]},{name:"Cache Miss",data:[]}];hit_=miss_=0,data[0].data&&data[0].data.length>0&&data[0].data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label}),hit_+=item.requests,series[0].data.push(item.requests/interval)}),data[1].data&&data[1].data.length>0&&data[1].data.forEach(function(item){miss_+=item.requests,series[1].data.push(item.requests/interval)}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("hitsCacheChart",histCacheChartDirective)}(),function(){"use strict";function httpStatusCodeChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/http-status-code.html",scope:{ngDomain:"=",statusCodes:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"="},controller:["$scope","Stats","$q","Util",function($scope,Stats,$q,Util){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets),$scope.traffic={labels:[],series:[]};var tickInterval_=10;$scope.chartOptions={yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reload=function(){if($scope.ngDomain&&$scope.ngDomain.id&&$scope.statusCodes&&$scope.statusCodes.length){$scope.traffic={labels:[],series:[]};var promises={},series=[],labels=[];$scope.statusCodes.forEach(function(code){code&&(promises[code]=Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{status_code:code})).$promise)}),$scope._loading=!0;var timeSet=!1;$q.all(promises).then(function(data){labels=[];var interval=1800;_.forEach(data,function(val,idx){data[idx].metadata.interval_sec&&(interval=data[idx].metadata.interval_sec);var offset=1e3*interval,results=[];data[idx].data&&data[idx].data.length>0&&(data[idx].data.forEach(function(item,idx,items){if(!timeSet){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label})}results.push(item.requests/interval)}),timeSet=!0),series.push({name:idx,data:results})}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.reload()}),$scope.$watch("statusCodes",function(){$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("httpStatusCodeChart",httpStatusCodeChartDirective)}(),function(){"use strict";function httpHttpsChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/http-https.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"="},controller:["$scope","Stats","$q","Util",function($scope,Stats,$q,Util){function generateFilterParams(filters){var params={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};return _.forEach(filters,function(val,key){-1!==_.indexOf(_filters_field_list,key)?"-"!==val&&""!==val&&(params[key]=val):"count_last_day"===key&&(params.from_timestamp=moment().subtract(val,"days").valueOf(),params.to_timestamp=Date.now(),delete params.count_last_day)}),params}var _filters_field_list=["from_timestamp","to_timestamp","country","device","os"];$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets),$scope.traffic={labels:[],series:[{name:"HTTP",data:[]},{name:"HTTPS",data:[]}]};var info_=null,https_=0,http_=0,tickInterval_=10;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null);var rel_http=0,rel_https=0;https_+http_!==0&&(rel_http=Math.round(1e3*http_/(https_+http_))/10,rel_https=Math.round(1e3*https_/(https_+http_))/10),info_=this.renderer.label('HTTPS <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(https_)+'</span> Requests, <span style="font-weight: bold; color: #3c65ac;">'+rel_https+'</span>%<br> HTTP <span style="font-weight: bold; color: black;">'+Util.formatNumber(http_)+'</span> Requests, <span style="font-weight: bold; color: black;">'+rel_http+"</span>%",this.xAxis[0].toPixels(0),3,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reload=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"HTTP",data:[]},{name:"HTTPS",data:[]}]},$q.all([Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters),{protocol:"HTTP"})).$promise,Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters),{protocol:"HTTPS"})).$promise]).then(function(data){var interval=data[0].metadata.interval_sec||1800,offset=1e3*interval,labels=[],series=[{name:"HTTP",data:[]},{name:"HTTPS",data:[]}];https_=http_=0,data[0].data&&data[0].data.length>0&&data[0].data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label}),http_+=item.requests,series[0].data.push(item.requests/interval)}),data[1].data&&data[1].data.length>0&&data[1].data.forEach(function(item){https_+=item.requests,series[1].data.push(item.requests/interval)}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("httpHttpsChart",httpHttpsChartDirective)}(),function(){"use strict";function requestStatusChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/request-status.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"="},controller:["$scope","Stats","$q","Util",function($scope,Stats,$q,Util){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets),$scope.traffic={labels:[],series:[{name:"Successful",data:[]},{name:"Failed",data:[]}]};var info_=null,success_=0,failure_=0,tickInterval_=10;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null);var rel_success=0,rel_failure=0;failure_+success_!==0&&(rel_success=Math.round(1e3*success_/(failure_+success_))/10,rel_failure=Math.round(1e3*failure_/(failure_+success_))/10),info_=this.renderer.label('Successful <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(success_)+'</span> Requests, <span style="font-weight: bold; color: #3c65ac;">'+rel_success+'</span>%<br> Failed <span style="font-weight: bold; color: darkred;">'+Util.formatNumber(failure_)+'</span> Requests, <span style="font-weight: bold; color: darkred;">'+rel_failure+"</span>%",this.xAxis[0].toPixels(0),3,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reload=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Successful",data:[]},{name:"Failed",data:[]}]},$q.all([Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{request_status:"OK"})).$promise,Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{request_status:"ERROR"})).$promise]).then(function(data){var interval=data[0].metadata.interval_sec||1800,offset=1e3*interval,labels=[],series=[{name:"Successful",data:[]},{name:"Failed",data:[]}];success_=failure_=0,data[0].data&&data[0].data.length>0&&data[0].data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label}),success_+=item.requests,series[0].data.push(item.requests/interval)}),data[1].data&&data[1].data.length>0&&data[1].data.forEach(function(item){failure_+=item.requests,series[1].data.push(item.requests/interval)}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("requestStatusChart",requestStatusChartDirective)}(),function(){"use strict";function proxyTrafficChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/proxy-traffic.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"=",filtersSets:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){function generateFilterParams(filters){var params={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};return _.forEach(filters,function(val,key){-1!==_.indexOf(_filters_field_list,key)?"-"!==val&&""!==val&&(params[key]=val):"count_last_day"===key&&(params.from_timestamp=moment().subtract(val,"days").valueOf(),params.to_timestamp=Date.now(),delete params.count_last_day)}),params}var _filters_field_list=["from_timestamp","to_timestamp","country","device","os"];$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.filtersSets&&_.extend($scope.filters,$scope.filtersSets),$scope.traffic={labels:[],series:[{name:"Total",data:[]}]};var info_=null,rps_avg_=0,rps_max_=0,hits_total_=0,tickInterval_=10;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('RPS Avg <span style="font-weight: bold; color: #3c65ac;">'+Math.round(1e3*rps_avg_)/1e3+'</span> Max <span style="font-weight: bold; color: #3c65ac;">'+Math.round(1e3*rps_max_)/1e3+'</span><br>Hits Total <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(hits_total_)+"</span>",this.xAxis[0].toPixels(0),3,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reloadTrafficStats=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Total",data:[]}]},Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},generateFilterParams($scope.filters))).$promise.then(function(data){if(rps_avg_=rps_max_=hits_total_=0,data.data&&data.data.length>0){var interval=data.metadata.interval_sec||1800,offset=1e3*interval,series=[{name:"Total",data:[]}],labels=[];data.data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label});var rps=item.requests/interval;rps_avg_+=rps,rps>rps_max_&&(rps_max_=rps),hits_total_+=item.requests,series[0].data.push(rps)}),rps_avg_/=data.data.length,$scope.traffic={labels:labels,series:series}}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reloadTrafficStats()})}]}}angular.module("revapm.Portal.Reports").directive("proxyTrafficChart",proxyTrafficChartDirective)}(),function(){"use strict";function fbtAverageChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/fbt-average.html",scope:{flCountry:"=",flOs:"=",flDevice:"=",ngDomain:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.delay="1",$scope.os="",$scope.country="",$scope.device="",$scope._loading=!1;var info_=null,avg_=0,median_=0,max_=0,tickInterval_=4;$scope.chartOptions={chart:{type:"column",events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('FBT Avg <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(avg_/1e3,1)+'</span> Median <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(median_/1e3,1)+'</span> Max <span style="font-weight: bold; color: black;">'+Util.formatNumber(max_/1e3,1)+"</span> ms",this.xAxis[0].toPixels(0),0,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"First Byte Time, ms"},labels:{formatter:function(){return Util.formatNumber(Math.round(this.value/1e3))}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y/1e3,2)+"</strong> ms"}}},$scope.reloadTrafficStats=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0;var opts={domainId:$scope.ngDomain.id,from_timestamp:moment().subtract($scope.delay,"days").valueOf(),to_timestamp:Date.now()};""!==$scope.country&&(opts.country=$scope.country),""!==$scope.device&&(opts.device=$scope.device),""!==$scope.os&&(opts.os=$scope.os),Stats.fbt_average(opts).$promise.then(function(data){var series=[{name:"Average FBT",data:[]}];if(data.data&&data.data.length>0){avg_=max_=median_=0;var labels=[],offset=1e3*(data.metadata.interval_sec||1800),cnt_=0;if(data.data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label}),max_<item.avg_fbt&&(max_=item.avg_fbt),item.requests?(avg_+=item.avg_fbt,++cnt_,series[0].data.push(item.avg_fbt)):series[0].data.push(null)}),$scope.traffic={labels:labels,series:series},cnt_){avg_/=cnt_;var avg_t=data.data.filter(function(item){return 0!==item.requests}).map(function(item){return item.avg_fbt}).sort(function(lhs,rhs){return lhs-rhs}),idx0=avg_t.length-1,idx1=Math.ceil(idx0/2);idx0=Math.floor(idx0/2),median_=idx0===idx1?avg_t[idx0]:(avg_t[idx0]+avg_t[idx1])/2}}else $scope.traffic={labels:[],series:series}})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reloadTrafficStats()})}]}}angular.module("revapm.Portal.Reports").directive("fbtAverageChart",fbtAverageChartDirective)}(),function(){"use strict";function fbtDistributionChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/fbt-distribution.html",scope:{flCountry:"=",flOs:"=",flDevice:"=",ngDomain:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.delay="24",$scope.os="",$scope.country="",$scope.device="",$scope._ims=300,$scope._loading=!1,$scope.chartOptions={chart:{type:"column"},yAxis:{title:{text:"Requests"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},tooltip:{formatter:function(){return"<strong>"+this.x+"÷"+(this.x+$scope._ims)+"</strong> ms<br/>Count: <strong>"+Util.formatNumber(this.y)+"</strong>"}},plotOptions:{column:{minPointLength:2,dataLabels:{enabled:!1}}}},$scope.reloadTrafficStats=function(){if($scope.ngDomain&&$scope.ngDomain.id){var opts={domainId:$scope.ngDomain.id,from_timestamp:moment().subtract($scope.delay,"hours").valueOf(),to_timestamp:Date.now(),interval_ms:50,limit_ms:1e4};""!==$scope.country&&(opts.country=$scope.country),""!==$scope.device&&(opts.device=$scope.device),""!==$scope.os&&(opts.os=$scope.os),$scope._loading=!0,Stats.fbt_distribution(opts).$promise.then(function(data){var series=[{name:"FBT Distribution",data:[]}];if(data.data&&data.data.length>0){var labels=[];$scope._ims=data.metadata.interval_ms||300,angular.forEach(data.data,function(data){labels.push(data.key/1e3),series[0].data.push(data.requests)}),$scope.traffic={labels:labels,series:series}}else $scope.traffic={labels:[],series:series}})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reloadTrafficStats()})}]}}angular.module("revapm.Portal.Reports").directive("fbtDistributionChart",fbtDistributionChartDirective)}(),function(){"use strict";function fbtHeatmapChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/fbt-heatmap.html",scope:{flCountry:"=",ngDomain:"="},controller:["$scope","Stats","HeatmapsDrawer","Util",function($scope,Stats,HeatmapsDrawer,Util){$scope.delay="24",$scope._loading=!1;var drawer=HeatmapsDrawer.create("#canvas-svg");$scope.reloadFBTStats=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0;var opts={domainId:$scope.ngDomain.id,from_timestamp:moment().subtract($scope.delay,"hours").valueOf(),to_timestamp:Date.now()};Stats.fbt_heatmap(opts).$promise.then(function(data){var world=[],usa=[];data.data&&data.data.length>0&&(data.data.forEach(function(item){var key=item.key.toUpperCase();world.push({name:$scope.flCountry[key]||item.key,id:key,value:item.fbt_avg_ms,tooltip:"Avg: <strong>"+Util.formatNumber(item.fbt_avg_ms)+"</strong> Min: <strong>"+Util.formatNumber(item.fbt_min_ms)+"</strong> Max: <strong>"+Util.formatNumber(item.fbt_max_ms)+"</strong> ms"}),"US"===key&&item.regions&&(usa=item.regions)}),usa=usa.map(function(item){return{id:item.key,name:item.key,value:item.fbt_avg_ms,tooltip:"Avg: <strong>"+Util.formatNumber(item.fbt_avg_ms)+"</strong> Min: <strong>"+Util.formatNumber(item.fbt_min_ms)+"</strong> Max: <strong>"+Util.formatNumber(item.fbt_max_ms)+"</strong> ms"}})),drawer.drawCurrentMap({world:world,usa:usa})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reloadFBTStats()})}]}}angular.module("revapm.Portal.Reports").directive("fbtHeatmapChart",fbtHeatmapChartDirective)}(),function(){"use strict";function topRequestsDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-requests.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now()},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.topObjects(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.path),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("topRequests",topRequestsDirective)}(),function(){"use strict";function topCacheMissDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-cache-miss.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now(),cache_code:"MISS"},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.topObjects(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.path),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("topCacheMiss",topCacheMissDirective)}(),function(){"use strict";function top404Directive(){return{restrict:"AE",templateUrl:"parts/reports/top/top-404.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now(),status_code:404},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.topObjects(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.path),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("top404",top404Directive)}(),function(){"use strict";function topRefererDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-referer.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now()},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.referer(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.key),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("topReferer",topRefererDirective)}(),function(){"use strict";function top5xxDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-5xx.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now()},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0;var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters),http_codes={500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",510:"Not Extended",511:"Network Authentication Required"};$scope.codes=[],Stats.top5xx(params).$promise.then(function(res){for(var code in res.data)$scope.codes.push({name:code+(http_codes[code]?" ("+http_codes[code]+")":""),count:res.data[code].count,requests:res.data[code].requests})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("top5xx",top5xxDirective)}(),function(){"use strict";function topFailedDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-failed.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now(),request_status:"ERROR"},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.topObjects(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.path),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("topFailed",topFailedDirective)}(),function(){"use strict";function HeatmapsDrawer(){function getConfig_(){return{credits:{enabled:!1},chart:{style:{fontFamily:"Verdana, Arial, Helvetica, sans-serif",fontSize:"12px"}},title:{text:null},mapNavigation:{enabled:!0,enableButtons:!0,enableMouseWheelZoom:!1,enableTouchZoom:!1,buttonOptions:{align:"left",verticalAlign:"bottom"}},colorAxis:{minColor:"#99CCFF",maxColor:"#0050A1",type:"logarithmic",tickPixelInterval:100},tooltip:{useHTML:!0,formatter:function(){return'<span style="font-weight: bold; color: #004090;">'+this.point.name+"</span><br>"+this.point.tooltip}},legend:{enabled:!0,itemDistance:60,symbolHeight:6,symbolWidth:400},series:[{name:"",borderColor:"white",states:{hover:{color:"#A9DCFF"}},dataLabels:{enabled:!1,formatter:function(){return this.point.labelrank&&this.point.name&&this.point.labelrank>1e6?this.point.name:null}},nullColor:"#B0B0B0"}]}}function Drawer(containerID){this.reInit(containerID),this.currentMap="",
this.currentOpts={},this.currentData=null}return Drawer.prototype.reInit=function(containerID){if(!containerID)throw new Error("Drawer: containerID should be provided");this.destroy(),this.$el=$(containerID),this.$el.css({width:"100%","padding-bottom":"55%"}),this.$wrapper=$("<div></div>"),this.$el.append(this.$wrapper),this.$wrapper.css({position:"absolute",top:0,bottom:0,left:0,right:0}),this.$btn=$('<button style="position:absolute;top:0px;left:0px;" class="btn">Show USA Map</button>'),this.$el.append(this.$btn),this.$btn.on("click",function(){"world"===this.currentMap?this.drawUSAMap(this.currentData,this.currentOpts):this.drawWorldMap(this.currentData,this.currentOpts)}.bind(this))},Drawer.prototype.destroy=function(){this.$el&&(this.$wrapper.highcharts().destroy(),this.$wrapper.remove(),this.$btn.off(),this.$btn.remove(),this.$btn=null,this.$wrapper=null,this.$el=null)},Drawer.prototype.drawWorldMap=function(data,opts){this.currentData=data,this.currentOpts=opts;var conf=getConfig_();conf.colorAxis.max=data.world.reduce(function(prev,curr){return void 0===curr.value||"--"===curr.id||curr.value<=prev?prev:curr.value},0),conf.colorAxis.min=data.world.reduce(function(prev,curr){return void 0===curr.value||"--"===curr.id||curr.value>=prev?prev:curr.value},conf.colorAxis.max),data.world&&data.world.length&&conf.colorAxis.min?conf.colorAxis.type="logarithmic":conf.colorAxis.type="linear",conf.series[0].joinBy=["iso-a2","id"],conf.series[0].data=data.world.map(function(item){return _.clone(item)}),conf.series[0].mapData=Highcharts.maps["custom/world-highres"],this.$wrapper.highcharts("Map",_.defaultsDeep({},opts||{},conf)),this.currentMap="world",this.$btn.html("Show USA Map")},Drawer.prototype.drawUSAMap=function(data,opts){this.currentData=data,this.currentOpts=opts;var conf=getConfig_();conf.colorAxis.max=data.usa.reduce(function(prev,curr){return void 0===curr.value||"--"===curr.id||curr.value<=prev?prev:curr.value},0),conf.colorAxis.min=data.usa.reduce(function(prev,curr){return void 0===curr.value||"--"===curr.id||curr.value>=prev?prev:curr.value},conf.colorAxis.max),conf.colorAxis.type="linear",conf.series[0].joinBy=["postal-code","id"],conf.series[0].data=data.usa.map(function(item){return _.clone(item)}),conf.series[0].mapData=Highcharts.maps["countries/us/us-all"],this.$wrapper.highcharts("Map",_.defaultsDeep({},opts||{},conf)),this.currentMap="usa",this.$btn.html("Show World Map")},Drawer.prototype.drawCurrentMap=function(data,opts){"usa"===this.currentMap?this.drawUSAMap(data,opts):this.drawWorldMap(data,opts)},{create:function(containerID){return new Drawer(containerID)}}}angular.module("revapm.Portal.Domains").factory("HeatmapsDrawer",HeatmapsDrawer)}(),function(){"use strict";function ReportsProxyTrafficController($scope,$rootScope,$localStorage,User,AlertService,Stats,Countries,$timeout,$state,$config){$scope.userService=User,$scope._loading=!0,$scope.domain=$rootScope.domain,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.pieOpts={scaleOverride:!0},$scope.os={labels:[],data:[]},$scope.device={labels:[],data:[]},$scope.country={labels:[],data:[]},$scope.statusCode={labels:[],data:[]},$scope.countries=Countries.query(),$scope.reloadOS=function(domainId){$scope.os={labels:[],data:[]},Stats.os({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.os.labels.push(os.key),$scope.os.data.push(os.count)})})},$scope.reloadDevice=function(domainId){$scope.device={labels:[],data:[]},Stats.device({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.device.labels.push(os.key),$scope.device.data.push(os.count)})})},$scope.reloadProtocol=function(domainId){$scope.protocol={labels:[],data:[]},Stats.protocol({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){var protocol="Unknows";80===os.key&&(protocol="HTTP"),443===os.key&&(protocol="HTTPS"),$scope.protocol.labels.push(protocol),$scope.protocol.data.push(os.count)})})},$scope.reloadHttpMethod=function(domainId){$scope.httpMethod={labels:[],data:[]},Stats.httpMethod({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.httpMethod.labels.push(os.key),$scope.httpMethod.data.push(os.count)})})},$scope.reloadHttpProtocol=function(domainId){$scope.httpProtocol={labels:[],data:[]},Stats.httpProtocol({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.httpProtocol.labels.push(os.key),$scope.httpProtocol.data.push(os.count)})})},$scope.reloadStatusCode=function(domainId){$scope.statusCode={labels:[],data:[]},Stats.statusCode({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&($scope.statusCode={labels:[],data:[]},angular.forEach(data.data,function(os){$scope.statusCode.labels.push(os.key),$scope.statusCode.data.push(os.count)}))})},$scope.reloadContentType=function(domainId){$scope.contentType={labels:[],data:[]},Stats.contentType({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.contentType.labels.push(os.key),$scope.contentType.data.push(os.count)})})},$scope.reloadCacheStatus=function(domainId){$scope.cacheStatus={labels:[],data:[]},Stats.cacheStatus({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.cacheStatus.labels.push(os.key),$scope.cacheStatus.data.push(os.count)})})},$scope.reloadCountry=function(domainId){$scope.country={labels:[],data:[]},Stats.country({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.country.labels.push(os.key),$scope.country.data.push(os.count)})})},$scope.reload=function(){$scope.reloadOS($scope.domain.id),$scope.reloadDevice($scope.domain.id),$scope.reloadCountry($scope.domain.id),$scope.reloadStatusCode($scope.domain.id)},$scope.onDomainSelected=function(){$scope.domain&&$scope.domain.id&&$scope.reload()}}ReportsProxyTrafficController.$inject=["$scope","$rootScope","$localStorage","User","AlertService","Stats","Countries","$timeout","$state","$config"],angular.module("revapm.Portal.Reports").controller("ReportsProxyTrafficController",ReportsProxyTrafficController)}(),function(){"use strict";function TopReportsTrafficController($scope,User,AlertService,Stats,Countries){$scope.userService=User,$scope._loading=!0,$scope.domain=null,$scope.domains=[],$scope.pieOpts={scaleOverride:!0},$scope.os=[],$scope.device=[],$scope.country=[],$scope.statusCode=[],$scope.requestStatus=[],$scope.countries=Countries.query(),$scope.delay="24",$scope.country_filter="",$scope.reloadOS=function(filters){$scope.os=[],Stats.os(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:"--"!==val.key?val.key:"Unknown",y:val.count})}),$scope.os=newData}})},$scope.reloadDevice=function(filters){$scope.device=[],Stats.device(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:"--"!==val.key?val.key:"Unknown",y:val.count})}),$scope.device=newData}})},$scope.reloadProtocol=function(filters){$scope.protocol=[],Stats.protocol(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){var protocol="Unknows";80!==val.key&&"80"!==val.key||(protocol="HTTP"),443!==val.key&&"443"!==val.key||(protocol="HTTPS"),newData.push({name:protocol,y:val.count})}),$scope.protocol=newData}})},$scope.reloadHttpMethod=function(filters){$scope.httpMethod=[],Stats.httpMethod(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.httpMethod=newData}})},$scope.reloadHttpProtocol=function(filters){$scope.httpProtocol=[],Stats.httpProtocol(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.httpProtocol=newData}})},$scope.reloadStatusCode=function(filters){$scope.statusCode=[],Stats.statusCode(filters).$promise.then(function(data){var newData=[];data.data&&data.data.length>0&&(angular.forEach(data.data,function(os){newData.push({name:os.key,y:os.count})}),$scope.statusCode=newData)})},$scope.reloadContentType=function(filters){$scope.contentType=[],Stats.contentType(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.contentType=newData}})},$scope.reloadCacheStatus=function(filters){$scope.cacheStatus=[],Stats.cacheStatus(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),2===newData.length&&(newData[0].y>0||newData[1].y>0)&&($scope.cacheStatus=newData)}})},$scope.reloadQUIC=function(filters){$scope.quic=[],Stats.quic(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:"-"===val.key?"Non-QUIC":val.key,y:val.count})}),$scope.quic=newData}})},$scope.reloadHTTP2=function(filters){$scope.http2=[],Stats.http2(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var http2=[];angular.forEach(data.data,function(val){http2.push({name:""===val.key?"Non-HTTP2":val.key.toUpperCase(),y:val.count})}),$scope.http2=http2}})},$scope.reloadCountry=function(filters){$scope.country=[],Stats.country(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){var name=$scope.countries[val.key.toUpperCase()]||"Unknown";newData.push({name:name,y:val.count})}),$scope.country=newData}})},$scope.reloadRequestStatus=function(filters){$scope.requestStatus=[],Stats.requestStatus(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var st=[{name:"Successfull",y:0},{name:"Failed",y:0}];angular.forEach(data.data,function(item){"OK"===item.key?st[0].y=item.count:st[1].y+=item.count}),$scope.requestStatus=st}})},$scope.reload=function(){var filters={domainId:$scope.domain.id,from_timestamp:moment().subtract($scope.delay,"hours").valueOf(),to_timestamp:Date.now()};$scope.country_filter&&(filters.country=$scope.country_filter),$scope.reloadOS(filters),$scope.reloadDevice(filters),$scope.reloadCountry(filters),$scope.reloadProtocol(filters),$scope.reloadHttpMethod(filters),$scope.reloadHttpProtocol(filters),$scope.reloadStatusCode(filters),$scope.reloadContentType(filters),$scope.reloadCacheStatus(filters),$scope.reloadQUIC(filters),$scope.reloadHTTP2(filters),$scope.reloadRequestStatus(filters)},User.getUserDomains(!0).then(function(domains){$scope.domains=domains})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.onDomainSelected=function(domain){$scope.domain&&$scope.domain.id&&$scope.reload()}}TopReportsTrafficController.$inject=["$scope","User","AlertService","Stats","Countries"],angular.module("revapm.Portal.Reports").controller("TopReportsTrafficController",TopReportsTrafficController)}(),function(){"use strict";function TopObjectsController($scope,User,AlertService,Stats,Countries,$q){$scope._loading=!0,$scope.domain=null,$scope.domains=[],$scope.countries=Countries.query(),$scope.os=[],$scope.devices=[],$scope.reload=function(){if($scope.domain&&$scope.domain.id){$scope.os=[],$scope.devices=[];var promises=[Stats.os({domainId:$scope.domain.id}).$promise,Stats.device({domainId:$scope.domain.id}).$promise];$q.all(promises).then(function(data){data&&data[0]&&data[1]&&data[0].data&&data[1].data&&(data[0].data.map(function(os){$scope.os.push(os.key)}),data[1].data.map(function(device){$scope.devices.push(device.key)}))})}},User.getUserDomains(!0).then(function(domains){$scope.domains=domains})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.onDomainSelected=function(){$scope.reload()}}TopObjectsController.$inject=["$scope","User","AlertService","Stats","Countries","$q"],angular.module("revapm.Portal.Reports").controller("TopObjectsController",TopObjectsController)}(),function(){"use strict";function FBTReportsController($scope,User,AlertService,Stats,Countries,$q){$scope._loading=!0,$scope.domain=null,$scope.domains=[],$scope.countries=Countries.query(),$scope.oses=[],$scope.devices=[],$scope.reload=function(){if($scope.domain&&$scope.domain.id){$scope.oses=[],$scope.devices=[];var promises=[Stats.os({domainId:$scope.domain.id}).$promise,Stats.device({domainId:$scope.domain.id}).$promise];$q.all(promises).then(function(data){if(data&&data[0]&&data[1]&&data[0].data&&data[1].data){var oses=[],devices=[];data[0].data.map(function(os){oses.push(os.key)}),data[1].data.map(function(device){devices.push(device.key)}),$scope.oses=oses,$scope.devices=devices}})}},User.getUserDomains(!0).then(function(domains){$scope.domains=domains})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.onDomainSelected=function(){$scope.reload()}}FBTReportsController.$inject=["$scope","User","AlertService","Stats","Countries","$q"],angular.module("revapm.Portal.Reports").controller("FBTReportsController",FBTReportsController)}(),function(){"use strict";function TrafficHeatmapsController($scope,HeatmapsDrawer,Countries,Stats,$q,Util){var hitsDrawer=HeatmapsDrawer.create("#canvas-svg-hits"),gbtDrawer=HeatmapsDrawer.create("#canvas-svg-gbt");$scope._loading=!1,$scope.domain=null,$scope.delay="24",$scope.countries=Countries.query(),$scope.reloadHitsCountry=function(domainId){return $scope._loading=!0,Stats.country({domainId:domainId,count:250,from_timestamp:moment().subtract($scope.delay||6,"hours").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){var world=[],usa=[];return data.data&&data.data.length>0&&(data.data.forEach(function(item){var key=item.key.toUpperCase();world.push({name:$scope.countries[key]||item.key,id:key,value:item.count,tooltip:"<strong>"+Util.convertValue(item.count)+"</strong> requests"}),"US"===key&&item.regions&&(usa=item.regions)}),usa=usa.map(function(item){return{id:item.key,name:item.key,value:item.count,tooltip:"<strong>"+Util.convertValue(item.count)+"</strong> requests"}})),{world:world,usa:usa}})},$scope.reloadGBTCountry=function(domainId){return $scope._loading=!0,Stats.gbt_country({domainId:domainId,count:250,from_timestamp:moment().subtract($scope.delay||6,"hours").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){var world=[],usa=[];return data.data&&data.data.length>0&&(data.data.forEach(function(item){var key=item.key.toUpperCase();world.push({name:$scope.countries[key]||item.key,id:key,value:item.sent_bytes,tooltip:"Sent: <strong>"+Util.humanFileSizeInGB(item.sent_bytes)+"</strong> Received: <strong>"+Util.humanFileSizeInGB(item.received_bytes)+"</strong>"}),"US"===key&&item.regions&&(usa=item.regions)}),usa=usa.map(function(item){return{id:item.key,name:item.key,value:item.sent_bytes,tooltip:"Sent: <strong>"+Util.humanFileSizeInGB(item.sent_bytes)+"</strong> Received: <strong>"+Util.humanFileSizeInGB(item.received_bytes)+"</strong>"}})),{world:world,usa:usa}})},$scope.onDomainSelect=function(){$scope.domain&&$scope.domain.id&&$q.all([$scope.reloadHitsCountry($scope.domain.id),$scope.reloadGBTCountry($scope.domain.id)]).then(function(data){hitsDrawer.drawCurrentMap(data[0]),gbtDrawer.drawCurrentMap(data[1])})["finally"](function(){$scope._loading=!1})}}TrafficHeatmapsController.$inject=["$scope","HeatmapsDrawer","Countries","Stats","$q","Util"],angular.module("revapm.Portal.Reports").controller("TrafficHeatmapsController",TrafficHeatmapsController)}(),function(){"use strict";function LMRTTHeatmapsController($scope,HeatmapsDrawer,Countries,Stats){$scope._loading=!1,$scope.domain=null,$scope.delay="24",$scope.countries=Countries.query();var drawer=HeatmapsDrawer.create("#canvas-svg");$scope.reloadCountry=function(domainId){return $scope._loading=!0,Stats.lm_rtt_country({domainId:domainId,count:250,from_timestamp:moment().subtract($scope.delay||6,"hours").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){var world=[],usa=[];return data.data&&data.data.length>0&&(data.data.forEach(function(item){var key=item.key.toUpperCase();world.push({name:$scope.countries[key]||item.key,id:key,value:item.lm_rtt_avg_ms,tooltip:"Avg: <strong>"+item.lm_rtt_avg_ms+"</strong> Min: <strong>"+item.lm_rtt_min_ms+"</strong> Max: <strong>"+item.lm_rtt_max_ms+"</strong> ms"}),"US"===key&&item.regions&&(usa=item.regions)}),usa=usa.map(function(item){return{id:item.key,name:item.key,value:item.lm_rtt_avg_ms,tooltip:"Avg: <strong>"+item.lm_rtt_avg_ms+"</strong> Min: <strong>"+item.lm_rtt_min_ms+"</strong> Max: <strong>"+item.lm_rtt_max_ms+"</strong> ms"}})),{world:world,usa:usa}})["finally"](function(){$scope._loading=!1})},$scope.onDomainSelect=function(){$scope.domain&&$scope.domain.id&&$scope.reloadCountry($scope.domain.id).then(function(lm_rtt_data){drawer.drawCurrentMap(lm_rtt_data)})}}LMRTTHeatmapsController.$inject=["$scope","HeatmapsDrawer","Countries","Stats"],angular.module("revapm.Portal.Reports").controller("LMRTTHeatmapsController",LMRTTHeatmapsController)}(),function(angular,_,empty){"use strict";function GeneralCtrl($scope,Stats,filterGeneratorConst,Countries,filterGeneratorService){function init(){filterGeneratorService.subscribeOnFilterChangeEvent($scope,function($event,filterData){_.forEach(PIE_CHART_FILTERS_FIELDS,function(objKey){filterData.data[objKey]?filter[objKey]=filterData.data[objKey]:delete filter[objKey]}),filter.from_timestamp<moment().subtract(1,"days").valueOf()&&(filter.from_timestamp=moment().subtract(1,"days").valueOf()),filter.to_timestamp>Date.now()&&(filter.to_timestamp=Date.now()),getFilterData()})}function onDomainChange(){vm.model.domain&&(filter.domainId=vm.model.domain.id,getFilterData())}function getFilterData(){reloadCacheStatus(filter),reloadHttpMethod(filter),reloadProtocol(filter),getTotal()}function reloadCacheStatus(filters){filters=filters,$scope.cacheStatus=[],Stats.cacheStatus(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];_.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.cacheStatus=newData}})}function reloadHttpMethod(filters){filters=filters,$scope.httpMethod=[],Stats.httpMethod(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];_.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.httpMethod=newData}})}function reloadProtocol(filters){$scope.protocol=[],Stats.protocol(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];_.forEach(data.data,function(val){var protocol="Unknows";80===val.key&&(protocol="HTTP"),443===val.key&&(protocol="HTTPS"),newData.push({name:protocol,y:val.count})}),$scope.protocol=newData}})}function getTotal(){vm.model.total={traficThisMonth:123,cacheHitRate:68,failedRequests:.01,ajaxHttpResponses:.01,averageResponseTime:1243,averageTTFBTime:45}}var PIE_CHART_FILTERS_FIELDS=["from_timestamp","to_timestamp","country"],vm=this,filter={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};vm.model={total:{},domain:empty,filtersList:[filterGeneratorConst.COUNTRIES,filterGeneratorConst.OS,filterGeneratorConst.DEVICES]},vm.actions={onDomainChange:onDomainChange},init()}angular.module("revapm.Portal.Reports").controller("GeneralCtrl",GeneralCtrl),GeneralCtrl.$inject=["$scope","Stats","filterGeneratorConst","Countries","filterGeneratorService"]}(angular,_),function(angular,_,empty){"use strict";function EdgeCacheReportsController($scope,Stats,filterGeneratorConst,filterGeneratorService){function init(){filterGeneratorService.subscribeOnFilterChangeEvent($scope,function($event,filterData){_.forEach(CHART_FILTERS_FIELDS,function(objKey){filterData.data[objKey]?filter[objKey]=filterData.data[objKey]:delete filter[objKey]}),filter.from_timestamp<moment().subtract(1,"days").valueOf()&&(filter.from_timestamp=moment().subtract(1,"days").valueOf()),filter.to_timestamp>Date.now()&&(filter.to_timestamp=Date.now()),getFilterData()})}function onDomainChange(){vm.model.domain&&(filter.domainId=vm.model.domain.id,getFilterData())}function getFilterData(){reloadCacheStatus(filter),getTotal()}function reloadCacheStatus(filters){filters=filters,$scope.cacheStatus=[],Stats.cacheStatus(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];_.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.cacheStatus=newData}})}function getTotal(){vm.model.total={traficThisMonth:123,cacheHitRate:68,failedRequests:.01,ajaxHttpResponses:.01,averageResponseTime:1243,averageTTFBTime:45}}var CHART_FILTERS_FIELDS=["from_timestamp","to_timestamp","country"],vm=this,filter={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()};vm.model={total:{},domain:empty,filtersList:[filterGeneratorConst.COUNTRIES,filterGeneratorConst.OS,filterGeneratorConst.DEVICES]},vm.actions={onDomainChange:onDomainChange},init()}angular.module("revapm.Portal.Reports").controller("EdgeCacheReportsController",EdgeCacheReportsController),EdgeCacheReportsController.$inject=["$scope","Stats","filterGeneratorConst","filterGeneratorService"]}(angular,_),function(){"use strict";angular.module("revapm.Portal.Mobile",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","chart.js"])}(),function(){"use strict";function ReportsRoutes($stateProvider){$stateProvider.state("index.mobile.traffic",{url:"/mobile/traffic",views:{main:{controller:"MobileTrafficController",templateUrl:"parts/reports/mobile-traffic.html"}}}).state("index.mobile.tops",{url:"/mobile/tops",views:{main:{controller:"MobileTopsController",templateUrl:"parts/reports/mobile-tops.html"}}}).state("index.mobile.objects",{url:"/mobile/top_objects",views:{main:{controller:"MobileTopObjectsController",templateUrl:"parts/reports/mobile-top-objects.html"}}}).state("index.mobile.distributions",{url:"/mobile/distributions",views:{main:{controller:"MobileDistributionsController",templateUrl:"parts/reports/mobile-distributions.html"}}}).state("index.mobile.ab",{url:"/mobile/ab",views:{main:{controller:"MobileAbController",templateUrl:"parts/reports/mobile-ab.html"}}})}ReportsRoutes.$inject=["$stateProvider"],angular.module("revapm.Portal.Mobile").config(ReportsRoutes)}(),function(){"use strict";function MobileTrafficController($scope,User,AlertService,Stats){$scope._loading=!0,$scope.application=null;var u=User.getUser();$scope.account=u.companyId[0]||null,$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],$scope.networks=["Cellular","WiFi"],$scope.reloadDirs=function(){$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],($scope.account||$scope.application&&$scope.application.app_id)&&($scope._loading=!0,Stats.sdk_dirs({account_id:$scope.account,app_id:$scope.application&&$scope.application.app_id||null,from_timestamp:moment().subtract(7,"days").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){data.data&&($scope.oses=data.data.oses,$scope.devices=data.data.devices,$scope.countries=data.data.countries,$scope.operators=data.data.operators)})["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1}))}}MobileTrafficController.$inject=["$scope","User","AlertService","Stats"],angular.module("revapm.Portal.Mobile").controller("MobileTrafficController",MobileTrafficController)}(),function(){"use strict";function mobileRpsChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="Requests Per Second Graph",$scope.span="1",$scope._loading=!1,$scope.hits={labels:[],series:[]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null};var info_=null,rps_avg_=0,rps_max_=0,hits_total_=0,tickInterval_=4;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('RPS Avg <span style="font-weight: bold; color: #3c65ac;">'+Math.round(1e3*rps_avg_)/1e3+'</span> Max <span style="font-weight: bold; color: #3c65ac;">'+Math.round(1e3*rps_max_)/1e3+'</span><br>Hits Total <span style="font-weight: bold; color: #3c65ac;">'+Util.formatNumber(hits_total_)+"</span>",this.xAxis[0].toPixels(0),0,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reload=function(){return $scope._loading=!0,$scope.hits={labels:[],series:[{name:"RPS",data:[]}]},$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_flow($scope.filters).$promise.then(function(data){var hits_series=[{name:"RPS",data:[]}];if(rps_avg_=rps_max_=hits_total_=0,data.data&&data.data.length>0){var labels=[],interval=data.metadata.interval_sec||1800,offset=1e3*interval;data.data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label});var rps=item.hits/interval;rps_avg_+=rps,rps>rps_max_&&(rps_max_=rps),hits_series[0].data.push(Math.round(1e3*rps)/1e3),hits_total_+=item.hits}),rps_avg_/=data.data.length,hits_total_&&($scope.hits={labels:labels,series:hits_series})}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileRpsChart",mobileRpsChartDirective)}(),function(){"use strict";function mobileBwChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="Bandwidth Usage Graph",$scope.span="1",$scope._loading=!1,$scope.hits={labels:[],series:[]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null};var info_=null,traffic_avg_=0,traffic_max_=0,traffic_total_=0,hits_total_=0,tickInterval_=4;$scope.chartOptions={chart:{events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('Traffic Level Avg <span style="font-weight: bold; color: #3c65ac;">'+Util.convertTraffic(traffic_avg_)+'</span> Max <span style="font-weight: bold; color: #3c65ac;">'+Util.convertTraffic(traffic_max_)+'</span><br>Traffic Total <span style="font-weight: bold; color: #3c65ac;">'+Util.humanFileSizeInGB(traffic_total_,3)+"</span>",this.xAxis[0].toPixels(0),0,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Bandwidth"},labels:{formatter:function(){return Util.convertTraffic(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.convertTraffic(this.y)+"</strong>"}}},$scope.reload=function(){return $scope._loading=!0,$scope.hits={labels:[],series:[{name:"Incoming Bandwidth",data:[]},{name:"Outgoing Bandwidth",data:[]}]},$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_flow($scope.filters).$promise.then(function(data){var hits_series=[{name:"Incoming Bandwidth",data:[]},{name:"Outgoing Bandwidth",data:[]}];if(hits_total_=traffic_total_=traffic_max_=traffic_avg_=0,data.data&&data.data.length>0){var labels=[],interval=data.metadata.interval_sec||1800,offset=1e3*interval;data.data.forEach(function(item,idx,items){var label,val=moment(item.time+offset);label=idx%tickInterval_?"":0===idx||new Date(item.time+offset).getDate()!==new Date(items[idx-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label});var sent_bw=item.sent_bytes/interval;hits_series[0].data.push(Math.round(1e3*item.received_bytes/interval)/1e3),hits_series[1].data.push(Math.round(1e3*sent_bw)/1e3),hits_total_+=item.received_bytes+item.sent_bytes,traffic_total_+=item.sent_bytes,sent_bw>traffic_max_&&(traffic_max_=sent_bw),traffic_avg_+=sent_bw}),traffic_avg_/=data.data.length,hits_total_&&($scope.hits={labels:labels,series:hits_series})}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileBwChart",mobileBwChartDirective)}(),function(){"use strict";function mobileHttpCodesChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="HTTP Status Codes Graph",$scope.span="1",$scope._loading=!1,$scope.hits={labels:[],series:[]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),report_type:"status_code",os:null,device:null,country:null,operator:null,network:null};var tickInterval_=4;$scope.chartOptions={yAxis:{title:{text:"Requests Per Second"},labels:{formatter:function(){return Util.formatNumber(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,3)+"</strong>"}}},$scope.reload=function(){return $scope._loading=!0,$scope.hits={labels:[],series:[]},$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_agg_flow($scope.filters).$promise.then(function(data){if(data.data&&data.data.length>0){var hits_series=[],labels=[],interval=data.metadata.interval_sec||1800,offset=1e3*interval,labels_filled_up=!1;
angular.forEach(data.data,function(code){for(var s={name:""+code.key,data:[],visible:!1},i=0,len=code.flow.length;len>i;++i){var item=code.flow[i];if(!labels_filled_up){var label,val=moment(item.time+offset);label=i%tickInterval_?"":0===i||new Date(item.time+offset).getDate()!==new Date(code.flow[i-tickInterval_].time+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label})}var rps=Math.round(1e3*item.hits/interval)/1e3;s.data.push(rps),rps>.01&&(s.visible=!0)}hits_series.push(s),labels_filled_up=!0}),hits_series[0].visible=!0,$scope.hits={labels:labels,series:hits_series}}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileHttpCodesChart",mobileHttpCodesChartDirective)}(),function(){"use strict";function mobileTopObjectsDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-top-objects.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"=",reportType:"@",heading:"@"},controller:["$scope","Stats",function($scope,Stats){$scope.span="24",$scope._loading=!1,$scope.items=[],$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null,count:10},$scope.reportType&&($scope.filters.report_type=$scope.reportType),$scope.reload=function(){return $scope._loading=!0,$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,$scope.items=[],Stats.sdk_top_objects($scope.filters).$promise.then(function(data){$scope.items=data.data})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("mobileTopObjects",mobileTopObjectsDirective)}(),function(){"use strict";function mobileTopObjectsTimeDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-top-objects-time.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"=",reportType:"@",heading:"@"},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.span="24",$scope._loading=!1,$scope.items=[],$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null,count:10},$scope.filters.report_type=$scope.reportType,$scope.reload=function(){return $scope._loading=!0,$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,$scope.items=[],Stats.sdk_top_objects_time($scope.filters).$promise.then(function(data){for(var i=0,len=data.data.length;len>i;++i)data.data[i].val=Util.formatNumber(data.data[i].val,0);$scope.items=data.data})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("mobileTopObjectsTime",mobileTopObjectsTimeDirective)}(),function(){"use strict";function mobileTopObjects5xxDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-top-objects-5xx.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flNetworks:"=",flDisabled:"=",heading:"@"},controller:["$scope","Stats",function($scope,Stats){$scope.span="24",$scope._loading=!1;var http_codes={500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",510:"Not Extended",511:"Network Authentication Required"};$scope.items=[],$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null,count:10},$scope.reload=function(){return $scope._loading=!0,$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,$scope.items=[],Stats.sdk_top_objects_5xx($scope.filters).$promise.then(function(data){for(var items=[],i=0,len=data.data.length;len>i;++i){var item=data.data[i];items.push({key:item.key+(http_codes[item.key]?" ("+http_codes[item.key]+")":""),count:item.count,items:item.items})}$scope.items=items})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("mobileTopObjects5xx",mobileTopObjects5xxDirective)}(),function(){"use strict";function MobileTopsController($scope,$q,User,AlertService,Stats,Countries,Util){$scope._loading=!1,$scope.application=null;var u=User.getUser();$scope.account=u.companyId[0]||null,$scope.countries=Countries.query(),$scope.country_hits=[],$scope.country_users=[],$scope.country_gbt=[],$scope.os_hits=[],$scope.os_users=[],$scope.os_gbt=[],$scope.device_hits=[],$scope.device_users=[],$scope.device_gbt=[],$scope.operator_hits=[],$scope.operator_users=[],$scope.operator_gbt=[],$scope.network_hits=[],$scope.network_users=[],$scope.network_gbt=[],$scope.domain_hits=[],$scope.domain_gbt=[],$scope.status_code_hits=[],$scope.span="24",$scope.gbtChartOpts={tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,1)+"% ("+Util.humanFileSize(this.y,2)+")"}}},$scope.hitsChartOpts={tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,1)+"% ("+Highcharts.numberFormat(this.y,0,".","'")+" hits)"}}},$scope.usersChartOpts={tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,1)+"% ("+Highcharts.numberFormat(this.y,0,".","'")+" users)"}}},$scope.reloadOne=function(type,name,count,filters){return $scope[name+"_"+type]=[],filters.report_type=name,filters.count=count,Stats["sdk_top_"+type](filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(item){"country"===name&&(item.key=$scope.countries[item.key.toUpperCase()]||item.key),newData.push({name:item.key,y:"gbt"===type?item.received_bytes:item.count})}),$scope[name+"_"+type]=newData}})},$scope.reloadOther=function(type,name,count,filters){return $scope[name+"_"+type]=[],filters.report_type=name,filters.count=count,Stats.sdk_distributions(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(item){newData.push({name:item.key,y:"gbt"===type?item.received_bytes+item.sent_bytes:item.count})}),$scope[name+"_"+type]=newData}})},$scope.reload=function(){if($scope.account||$scope.application&&$scope.application.app_id){var filters={account_id:$scope.account,app_id:$scope.application&&$scope.application.app_id||null,from_timestamp:moment().subtract($scope.span,"hours").valueOf(),to_timestamp:Date.now()};return $scope._loading=!0,$q.all([$scope.reloadOne("hits","country",20,filters),$scope.reloadOne("users","country",20,filters),$scope.reloadOne("gbt","country",20,filters),$scope.reloadOne("hits","os",10,filters),$scope.reloadOne("users","os",10,filters),$scope.reloadOne("gbt","os",10,filters),$scope.reloadOne("hits","device",20,filters),$scope.reloadOne("users","device",20,filters),$scope.reloadOne("gbt","device",20,filters),$scope.reloadOne("hits","operator",20,filters),$scope.reloadOne("users","operator",20,filters),$scope.reloadOne("gbt","operator",20,filters),$scope.reloadOne("hits","network",2,filters),$scope.reloadOne("users","network",2,filters),$scope.reloadOne("gbt","network",2,filters),$scope.reloadOther("gbt","domain",10,filters),$scope.reloadOther("hits","domain",10,filters),$scope.reloadOther("hits","status_code",10,filters)])["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1})}}}MobileTopsController.$inject=["$scope","$q","User","AlertService","Stats","Countries","Util"],angular.module("revapm.Portal.Mobile").controller("MobileTopsController",MobileTopsController)}(),function(){"use strict";function MobileDistributionsController($scope,$q,User,AlertService,Stats,Util){$scope._loading=!0,$scope.application=null;var u=User.getUser();$scope.account=u.companyId[0]||null,$scope.destination_hits=[],$scope.destination_gbt=[],$scope.transport_hits=[],$scope.transport_gbt=[],$scope.status_hits=[],$scope.status_gbt=[],$scope.cache_hits=[],$scope.cache_gbt=[],$scope.domain_hits=[],$scope.domain_gbt=[],$scope.status_code_hits=[],$scope.span="24",$scope.gbtChartOpts={tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,1)+"% ("+Util.humanFileSize(this.y,2)+")"}}},$scope.hitsChartOpts={tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,1)+"% ("+Highcharts.numberFormat(this.y,0,".","'")+" hits)"}}},$scope.reloadTwo=function(name,filters){return $scope[name+"_hits"]=[],$scope[name+"_gbt"]=[],filters.report_type=name,Stats.sdk_distributions(filters).$promise.then(function(data){if(data.data&&data.data.length>0){var hits=[],gbt=[];angular.forEach(data.data,function(item){hits.push({name:item.key,y:item.count}),gbt.push({name:item.key,y:item.received_bytes})}),$scope[name+"_hits"]=hits,$scope[name+"_gbt"]=gbt}})},$scope.reload=function(){if($scope.account||$scope.application&&$scope.application.app_id){var filters={account_id:$scope.account,app_id:$scope.application&&$scope.application.app_id||null,from_timestamp:moment().subtract($scope.span,"hours").valueOf(),to_timestamp:Date.now(),count:10};$scope._loading=!0,$q.all([$scope.reloadTwo("destination",filters),$scope.reloadTwo("transport",filters),$scope.reloadTwo("status",filters),$scope.reloadTwo("cache",filters)])["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1})}}}MobileDistributionsController.$inject=["$scope","$q","User","AlertService","Stats","Util"],angular.module("revapm.Portal.Mobile").controller("MobileDistributionsController",MobileDistributionsController)}(),function(){"use strict";function MobileTopObjectsController($scope,User,AlertService,Stats,Util){$scope._loading=!0,$scope.application=null;var u=User.getUser();$scope.account=u.companyId[0]||null,$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],$scope.networks=["Cellular","WiFi"],$scope.reloadDirs=function(){($scope.account||$scope.application&&$scope.application.app_id)&&($scope._loading=!0,$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],Stats.sdk_dirs({account_id:$scope.account,app_id:$scope.application&&$scope.application.app_id||null,from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){data.data&&($scope.oses=data.data.oses,$scope.devices=data.data.devices,$scope.countries=data.data.countries,$scope.operators=data.data.operators)})["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1}))}}MobileTopObjectsController.$inject=["$scope","User","AlertService","Stats","Util"],angular.module("revapm.Portal.Mobile").controller("MobileTopObjectsController",MobileTopObjectsController)}(),function(){"use strict";function MobileAbController($scope,User,AlertService,Stats){$scope._loading=!0,$scope.application=null;var u=User.getUser();$scope.account=u.companyId[0]||null,$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],$scope.networks=["Cellular","WiFi"],$scope.reloadDirs=function(){$scope.oses=[],$scope.devices=[],$scope.countries=[],$scope.operators=[],($scope.account||$scope.application&&$scope.application.app_id)&&($scope._loading=!0,Stats.sdk_dirs({account_id:$scope.account,app_id:$scope.application&&$scope.application.app_id||null,from_timestamp:moment().subtract(7,"days").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){data.data&&($scope.oses=data.data.oses,$scope.devices=data.data.devices,$scope.countries=data.data.countries,$scope.operators=data.data.operators)})["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1}))}}MobileAbController.$inject=["$scope","User","AlertService","Stats"],angular.module("revapm.Portal.Mobile").controller("MobileAbController",MobileAbController)}(),function(){"use strict";function mobileAbFbtChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flDisabled:"=",flNetworks:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="First Byte Time Graph",$scope.span="1",$scope._loading=!1;var info_=null,rev_avg_=0,origin_avg_=0,rev_median_=0,origin_median_=0,imp_avg_=0,imp_median_=0,tickInterval_=4;$scope.chartOptions={chart:{type:"column",events:{redraw:function(){info_&&(info_.destroy(),info_=null),info_=this.renderer.label('Origin Avg <span style="font-weight: bold; color: #3c65ac;">'+origin_avg_+'</span> Median <span style="font-weight: bold; color: #3c65ac;">'+origin_median_+'</span> ms<br>RevAPM Avg <span style="font-weight: bold; color: black;">'+rev_avg_+'</span> Median <span style="font-weight: bold; color: black;">'+rev_median_+'</span> ms<br>Improvement Avg <span style="font-weight: bold; color: darkred;">'+imp_avg_+'</span> Median <span style="font-weight: bold; color: darkred;">'+imp_median_+"</span> %",this.xAxis[0].toPixels(0),0,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"FBT ms"},labels:{formatter:function(){return Util.formatNumber(this.value,1)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,1)+"</strong>"}}},$scope.hits={labels:[],series:[{name:"Origin, Avg",data:[],color:"#3c65ac",marker:{radius:4,symbol:"circle"}},{name:"Origin, Min",data:[],color:"#7cb5ec",marker:{radius:2,symbol:"circle"},visible:!1},{name:"Origin, Max",data:[],color:"#7cb5ec",marker:{radius:2,symbol:"circle"},visible:!1},{name:"RevAPM, Avg",data:[],color:"#000000",marker:{radius:4,symbol:"diamond"}},{name:"RevAPM, Min",data:[],color:"#808080",marker:{radius:2,symbol:"diamond"},visible:!1},{name:"RevAPM, Max",data:[],color:"#808080",marker:{radius:2,symbol:"diamond"},visible:!1}]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null},$scope.reload=function(){return $scope._loading=!0,$scope.hits.labels=[],$scope.hits.series[0].data=[],$scope.hits.series[1].data=[],$scope.hits.series[2].data=[],$scope.hits.series[3].data=[],$scope.hits.series[4].data=[],$scope.hits.series[5].data=[],$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_ab_fbt($scope.filters).$promise.then(function(data){if(data.data&&data.data.length>0){var labels=[],hits={rev_edge:{min:[],max:[],avg:[]},origin:{min:[],max:[],avg:[]}},interval=data.metadata.interval_sec||1800,offset=1e3*interval,labels_filled=!1;data.data.forEach(function(dest){dest.items.forEach(function(item,idx,items){if(!labels_filled){var label,val=moment(item.key+offset);label=idx%tickInterval_?"":0===idx||new Date(item.key+offset).getDate()!==new Date(items[idx-tickInterval_].key+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label})}hits[dest.key].max.push(item.fbt_max),hits[dest.key].min.push(item.fbt_min),hits[dest.key].avg.push(item.fbt_average)}),labels_filled=!0}),$scope.hits.labels=labels,$scope.hits.series[0].data=hits.origin.avg,$scope.hits.series[1].data=hits.origin.min,$scope.hits.series[2].data=hits.origin.max,$scope.hits.series[3].data=hits.rev_edge.avg,$scope.hits.series[4].data=hits.rev_edge.min,$scope.hits.series[5].data=hits.rev_edge.max;var avg_t=hits.origin.avg.filter(function(item){return null!=item});origin_avg_=avg_t.reduce(function(prev,curr){return prev+curr}),origin_avg_/=avg_t.length,avg_t.sort(function(lhs,rhs){return lhs-rhs});var idx0=avg_t.length-1,idx1=Math.ceil(idx0/2);idx0=Math.floor(idx0/2),origin_median_=idx0===idx1?avg_t[idx0]:(avg_t[idx0]+avg_t[idx1])/2,avg_t=hits.rev_edge.avg.filter(function(item){return null!=item}),rev_avg_=avg_t.reduce(function(prev,curr){return prev+curr}),rev_avg_/=avg_t.length,avg_t.sort(function(lhs,rhs){return lhs-rhs}),idx0=avg_t.length-1,idx1=Math.ceil(idx0/2),idx0=Math.floor(idx0/2),rev_median_=idx0===idx1?avg_t[idx0]:(avg_t[idx0]+avg_t[idx1])/2,imp_avg_=Math.round((origin_avg_-rev_avg_)/origin_avg_*1e3)/10,rev_avg_=Math.round(100*rev_avg_)/100,origin_avg_=Math.round(100*origin_avg_)/100,imp_median_=Math.round((origin_median_-rev_median_)/origin_median_*1e3)/10,origin_median_=Math.round(100*origin_median_)/100,rev_median_=Math.round(100*rev_median_)/100}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileAbFbtChart",mobileAbFbtChartDirective)}(),function(){"use strict";function mobileAbFbtDistributionChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flDisabled:"=",flNetworks:"=",flInterval:"@",flLimit:"@"},controller:["$scope","Stats","Util",function($scope,Stats,Util){var _interval=parseInt($scope.flInterval||100),_limit=parseInt($scope.flLimit||5e3);$scope.heading="First Byte Time Values Distribution Graph",$scope.span="1",$scope._loading=!1,$scope.chartOptions={chart:{type:"column"},yAxis:{title:{text:"Hits"},labels:{formatter:function(){return Util.formatNumber(this.value,0)}}},xAxis:{title:{text:"FBT ms",align:"low"}},legend:{margin:0},tooltip:{formatter:function(){return"<strong>"+this.x+"÷"+(this.x+_interval)+"</strong> ms<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,0)+"</strong> hits"}}},$scope.hits={labels:[],series:[{name:"Origin",data:[],color:Highcharts.getOptions().colors[0],marker:{radius:4,symbol:"circle"}},{name:"RevAPM",data:[],color:Highcharts.getOptions().colors[1],marker:{radius:4,symbol:"diamond"}}]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null,interval_ms:_interval,limit_ms:_limit},$scope.reload=function(){return $scope._loading=!0,$scope.hits.labels=[],$scope.hits.series[0].data=[],$scope.hits.series[1].data=[],$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_ab_fbt_distribution($scope.filters).$promise.then(function(data){if(data.data&&data.data.length>0){var labels=[],hits={rev_edge:[],origin:[]},labels_filled=!1;angular.forEach(data.data,function(dest){angular.forEach(dest.items,function(item){labels_filled||labels.push(item.key),hits[dest.key].push(item.count)}),labels_filled=!0}),$scope.hits.labels=labels,$scope.hits.series[0].data=hits.origin,$scope.hits.series[1].data=hits.rev_edge}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileAbFbtDistributionChart",mobileAbFbtDistributionChartDirective)}(),function(){"use strict";function mobileAbErrorsChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flDisabled:"=",flNetworks:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="SDK Failed Requests Graph",$scope.span="1",$scope._loading=!1;var tickInterval_=4;$scope.chartOptions={yAxis:{title:{text:"Errors Count"},labels:{formatter:function(){return Util.formatNumber(this.value,0)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.formatNumber(this.y,0)+"</strong>"}}},$scope.hits={labels:[],series:[{name:"Origin",data:[],color:Highcharts.getOptions().colors[0],marker:{radius:4,symbol:"circle"}},{name:"RevAPM",data:[],color:Highcharts.getOptions().colors[1],marker:{radius:4,symbol:"diamond"}}]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null},$scope.reload=function(){return $scope._loading=!0,$scope.hits.labels=[],$scope.hits.series[0].data=[],$scope.hits.series[1].data=[],$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_ab_errors($scope.filters).$promise.then(function(data){if(data.data&&data.data.length>0){var labels=[],hits={rev_edge:[],origin:[]},interval=data.metadata.interval_sec||1800,offset=1e3*interval,labels_filled=!1;data.data.forEach(function(dest){dest.items.forEach(function(item,idx,items){if(!labels_filled){var label,val=moment(item.key+offset);label=idx%tickInterval_?"":0===idx||new Date(item.key+offset).getDate()!==new Date(items[idx-tickInterval_].key+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label})}hits[dest.key].push(item.count)}),labels_filled=!0}),$scope.hits.labels=labels,$scope.hits.series[0].data=hits.origin,$scope.hits.series[1].data=hits.rev_edge,0===hits.origin.length&&($scope.hits.series[0].visible=!1),0===hits.rev_edge.length&&($scope.hits.series[1].visible=!1)}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileAbErrorsChart",mobileAbErrorsChartDirective)}(),function(){"use strict";function mobileAbSpeedChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/mobile-base-traffic.html",scope:{ngAccount:"=",ngApp:"=",flOses:"=",flDevices:"=",flCountries:"=",flOperators:"=",flDisabled:"=",flNetworks:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.heading="Average Request Speed Graph",$scope.span="1",$scope._loading=!1;var lbl_=null,rev_avg_=0,origin_avg_=0,imp_avg_=0,tickInterval_=4;$scope.chartOptions={chart:{type:"column",events:{redraw:function(){lbl_&&(lbl_.destroy(),lbl_=null),lbl_=this.renderer.label('Origin Avg <span style="font-weight: bold; color: #3c65ac;">'+origin_avg_+'</span><br>RevAPM Avg <span style="font-weight: bold; color: black;">'+rev_avg_+'</span><br>Improvement <span style="font-weight: bold; color: darkred;">'+imp_avg_+"</span> %",this.xAxis[0].toPixels(0),0,"",0,0,!0).css({color:"#444"}).attr({fill:"rgba(240, 240, 240, 0.6)",stroke:"#3c65ac","stroke-width":1,padding:6,r:2,zIndex:5}).add()}}},yAxis:{title:{text:"Speed"},labels:{formatter:function(){return Util.convertTraffic(this.value)}}},xAxis:{crosshair:{width:1,color:"#000000"},tickInterval:tickInterval_,labels:{autoRotation:!1,useHTML:!0,formatter:function(){return this.value.label}}},tooltip:{formatter:function(){return this.key.tooltip+"<br/>"+this.series.name+": <strong>"+Util.convertTraffic(this.y)+"</strong>"}}},$scope.hits={labels:[],series:[{name:"Origin",data:[],color:Highcharts.getOptions().colors[0],marker:{radius:4,symbol:"circle"}},{name:"RevAPM",data:[],color:Highcharts.getOptions().colors[1],marker:{radius:4,symbol:"diamond"}}]},$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now(),os:null,device:null,country:null,operator:null,network:null},$scope.reload=function(){return $scope._loading=!0,$scope.hits.labels=[],$scope.hits.series[0].data=[],$scope.hits.series[1].data=[],$scope.filters.account_id=$scope.ngAccount,$scope.filters.app_id=$scope.ngApp||null,Stats.sdk_ab_speed($scope.filters).$promise.then(function(data){if(data.data&&data.data.length>0){var labels=[],hits={rev_edge:[],origin:[]},interval=data.metadata.interval_sec||1800,offset=1e3*interval,labels_filled=!1;data.data.forEach(function(dest){dest.items.forEach(function(item,idx,items){if(!labels_filled){var label,val=moment(item.key+offset);label=idx%tickInterval_?"":0===idx||new Date(item.key+offset).getDate()!==new Date(items[idx-tickInterval_].key+offset).getDate()?val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span><br>]MMM D'):val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>]'),labels.push({tooltip:val.format('[<span style="color: #000; font-weight: bold;">]HH:mm[</span>] MMMM Do YYYY'),label:label})}hits[dest.key].push(item.count?1e3*item.sent_bytes/item.time_spent_ms:null)}),labels_filled=!0}),$scope.hits.labels=labels,$scope.hits.series[0].data=hits.origin,$scope.hits.series[1].data=hits.rev_edge;var avg_t=hits.origin.filter(function(item){return null!=item});origin_avg_=avg_t.reduce(function(prev,curr){return prev+curr}),origin_avg_/=avg_t.length,avg_t=hits.rev_edge.filter(function(item){return null!=item}),rev_avg_=avg_t.reduce(function(prev,curr){return prev+curr}),rev_avg_/=avg_t.length,imp_avg_=Math.round((rev_avg_-origin_avg_)/origin_avg_*1e3)/10,rev_avg_=Util.convertTraffic(Math.round(100*rev_avg_)/100),origin_avg_=Util.convertTraffic(Math.round(100*origin_avg_)/100)}})["finally"](function(){$scope._loading=!1})},$scope.$watch("ngApp",function(){($scope.ngAccount||$scope.ngApp)&&$scope.reload()})}]}}angular.module("revapm.Portal.Mobile").directive("mobileAbSpeedChart",mobileAbSpeedChartDirective)}(),function(){"use strict";angular.module("revapm.Portal.Usage",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","ui.bootstrap.datetimepicker","ng.jsoneditor","ngSanitize"])}(),function(){"use strict";function UsageRoutes($stateProvider){$stateProvider.state("index.billing.usage",{url:"/usage",views:{main:{controller:"UsageWebController",templateUrl:"parts/reports/usage-web.html"}}}).state("index.billing.company",{url:"/account",views:{main:{controller:"CompanyProfileEditController",templateUrl:"parts/profile/edit-company.html "}}})}UsageRoutes.$inject=["$stateProvider"],angular.module("revapm.Portal.Usage").config(UsageRoutes)}(),function(){"use strict";function UsageWebController($scope,User,DTOptionsBuilder,DTColumnDefBuilder,AlertService,Stats,Util){$scope._loading=!0,$scope.accounts=[],$scope.selected={val:null},$scope.month_year=new Date,$scope.month_year_symbol=$scope.month_year.toISOString().slice(0,7),$scope.report=null;var pageLength=10;$scope.accountsDtOptions=DTOptionsBuilder.newOptions().withPaginationType("full_numbers").withDisplayLength(pageLength).withBootstrap().withDOM('<<"pull-left"pl>f<t>i<"pull-left"p>>').withOption("order",[[1,"desc"]]),$scope.colDefs=[{targets:[1],type:"num-fmt"},{targets:[6,7],type:"num"},{targets:[2,3,4,5],orderable:!1}],$scope.onAccountSelect=function(acc){$scope.selected.val=acc,""!==acc.acc_id&&User.selectAccount(acc)},$scope.onAccountClick=function(acc_id){var acc=$scope.accounts.find(function(a){return a.acc_id===acc_id});$scope.selected.val=acc,""!==acc.acc_id&&User.selectAccount(acc),$scope.onUpdate()},$scope.onTimeSet=function(newDate){newDate=new Date(newDate+864e5),$scope.month_year=newDate,$scope.month_year_symbol=newDate.toISOString().slice(0,7)},$scope.showTraffic=function(){return!$scope._loading&&$scope.report&&"0"!==$scope.report.traffic.count},$scope.showDomainsUsage=function(){return $scope.report&&$scope.report.domains_usage},$scope.showAccounts=function(){return $scope.report&&$scope.report.accounts};var subFormat_=function(data){if(void 0!==data.count&&(data.count=Util.formatNumber(data.count),data.received_bytes=Util.humanFileSizeInGB(data.received_bytes,3),data.sent_bytes=Util.humanFileSizeInGB(data.sent_bytes,3)),void 0!==data.billable_received_bps&&(data.billable_received_bps=Util.convertTrafficMbps(data.billable_received_bps,3),data.billable_sent_bps=Util.convertTrafficMbps(data.billable_sent_bps,3)),void 0!==data.cache_hits){data.cache_hits.MISS=Util.formatNumber(data.cache_hits.MISS),data.cache_hits.HIT=Util.formatNumber(data.cache_hits.HIT);for(var port in data.port_hits)data.port_hits[port]=Util.formatNumber(data.port_hits[port])}},format_=function(data){subFormat_(data);for(var zone in data.traffic_per_billing_zone)subFormat_(data.traffic_per_billing_zone[zone]);for(var d in data.domains_usage){var dmn=data.domains_usage[d];subFormat_(dmn);for(var t in dmn.traffic_per_billing_zone)subFormat_(dmn.traffic_per_billing_zone[t])}if(data.traffic&&subFormat_(data.traffic),data.accounts)for(var i=0,len=data.accounts.length;len>i;++i)subFormat_(data.accounts[i]);void 0!==data.domains_usage&&data.domains.list&&data.domains.list.forEach(function(domain){data.domains_usage[domain]||(data.domains_usage[domain]={count:"0",received_bytes:"0 GB",sent_bytes:"0 GB",billable_received_bps:"0 Mbps",billable_sent_bps:"0 Mbps"})})};$scope.onUpdate=function(){if(0===$scope.accounts.length||!$scope.selected.val)return void($scope._loading=!1);$scope._loading=!0;var q={from:moment($scope.month_year).utc().startOf("month").toISOString().slice(0,10),to:moment($scope.month_year).utc().endOf("month").toISOString().slice(0,10)};$scope.selected.val.acc_id&&(q.account_id=$scope.selected.val.acc_id),Stats.usage_web(q).$promise.then(function(data){var overall=data.data[data.data.length-1];format_(overall),$scope.report=overall})["catch"](function(err){AlertService.danger("Oops! Something went wrong"),console.log(err)})["finally"](function(){$scope._loading=!1,$scope.accountsDtOptions=DTOptionsBuilder.newOptions().withPaginationType("full_numbers").withDisplayLength(pageLength).withBootstrap().withDOM('<<"pull-left"pl>f<t>i<"pull-left"p>>').withOption("paging",$scope.report.accounts.length>pageLength).withOption("order",[[1,"desc"]])})};var sel_account=User.getSelectedAccount();sel_account&&""!==sel_account.acc_id&&($scope.selected.val=sel_account),User.getUserAccounts().then(function(accs){$scope.accounts=accs,1===accs.length&&($scope.selected.val=accs[0]),$scope.onUpdate()})["catch"](function(err){AlertService.danger("Oops! Something went wrong"),$scope._loading=!1})}UsageWebController.$inject=["$scope","User","DTOptionsBuilder","DTColumnDefBuilder","AlertService","Stats","Util"],angular.module("revapm.Portal.Usage").controller("UsageWebController",UsageWebController)}(),function(){"use strict";angular.module("revapm.Portal.Keys",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","angular-clipboard"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.keys",{url:"/keys",views:{main:{controller:"KeysListController",templateUrl:"parts/keys/list.html"}}}).state("index.accountSettings.keys.edit",{
url:"/edit/:id",views:{page:{controller:"KeysEditController",templateUrl:"parts/keys/edit.html"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Keys").config(routesConfig)}(),function(){"use strict";function KeysListController($scope,$rootScope,$q,CRUDController,ApiKeys,$injector,$stateParams,Companies,DomainsConfig,$state,$uibModal,clipboard){function setAccountName(){return $scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){_.forEach($scope.records,function(item){var index=_.findIndex(list,{id:item.account_id});index>=0&&(item.companyName=list[index].companyName)})}):$q.when()}function clearUpdateData(data){var fields=["key_name","account_id","domains","allowed_ops","read_only_status","active"];return _.pick(_.clone(data),fields)}return $injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.auth.isUser()?void $state.go("index.accountSettings.profile"):($scope.setState("index.accountSettings.keys"),$scope.setResource(ApiKeys),Companies.query().$promise.then(function(data){$scope.companies=data})["catch"](function(err){if(403===err.status){var user=$scope.auth.getUser();$scope.companies=[{id:user.companyId[0]}]}}),$scope.domains=DomainsConfig.query(),$scope.deleteKey=function(model){$scope.confirm("confirmModal.html",model).then(function(){$scope["delete"](model).then(function(){$rootScope.$broadcast("update:searchData")})["catch"]($scope.alertService.danger)})},$scope.createKey=function(account){return account&&account.id?($scope._loading=!0,$scope.alertService.clear(),ApiKeys.create({account_id:account.id}).$promise.then(function(data){return $rootScope.$broadcast("update:searchData"),$scope.alertService.success("API Key created",5e3),$scope.list().then(setAccountName),data})["catch"]($scope.alertService.danger)["finally"](function(){$scope._loading=!1})):void 0},$scope.openCreateDialog=function(){if($scope.alertService.clear(),$scope.companies&&1===$scope.companies.length)return $scope.createKey($scope.companies[0]);var modalInstance=$uibModal.open({animation:!0,templateUrl:"parts/keys/dialog/create.html",controller:"KeysCreateController",size:"md",resolve:{companies:function(){return $scope.companies}}});modalInstance.result.then($scope.createKey)},$scope.openUpdateDialogFor=function(keyId){$scope.alertService.clear();var modalInstance=$uibModal.open({animation:!0,templateUrl:"parts/keys/dialog/edit.html",controller:"KeysEditController",size:"md",resolve:{data:function(){return{companies:$scope.companies,domains:$scope.domains,keyId:keyId}}}});modalInstance.result.then(function(account){$scope.alertService.success("API Key updated",5e3),$scope.list().then(setAccountName)})},$scope.toggleProperty=function(key,property){return key&&key.id&&!key.loading?(key[property]=!key[property],key.loading=!0,ApiKeys.update({id:key.id},clearUpdateData(key)).$promise.then(function(data){return data})["catch"]($scope.alertService.danger)["finally"](function(){key.loading=!1})):void 0},$scope.list().then(setAccountName),$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.switchKeyVisibility=function(item){item.showKey=!item.showKey},void($scope.copyCallback=function(err){err?$scope.alertService.danger("Copying failed, please try manual approach",2e3):$scope.alertService.success("The API key has been copied to the clipboard",2e3)}))}KeysListController.$inject=["$scope","$rootScope","$q","CRUDController","ApiKeys","$injector","$stateParams","Companies","DomainsConfig","$state","$uibModal","clipboard"],angular.module("revapm.Portal.Keys").controller("KeysListController",KeysListController)}(),function(){"use strict";function KeysCreateController($scope,$uibModalInstance,companies){$scope.companies=companies,$scope.selected=null,$scope.onModelSelect=function(model){$scope.selected=model},$scope.ok=function(){$uibModalInstance.close($scope.selected)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}KeysCreateController.$inject=["$scope","$uibModalInstance","companies"],angular.module("revapm.Portal.Keys").controller("KeysCreateController",KeysCreateController)}(),function(){"use strict";function KeysEditController($scope,$rootScope,$injector,$stateParams,$location,CRUDController,ApiKeys,Companies,DomainsConfig,AlertService){function clearUpdateData(data){var fields=["key_name","account_id","domains","allowed_ops","read_only_status","active"];return _.pick(_.clone(data),fields)}$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),Companies.query().$promise.then(function(data){$scope.companies=data})["catch"](function(err){if(403===err.status){var user=$scope.auth.getUser();$scope.companies=[{id:user.companyId[0]}]}}),DomainsConfig.query().$promise.then(function(data){$scope.domains=data})["catch"](function(err){$scope.domains=[]}),$scope._loading=!1,$scope.selected=null,$scope.key=null,$scope.selectedDomains=[],$scope.selectDomains=function(accountId){$scope.selectedDomains=[],accountId&&angular.forEach($scope.domains,function(domain){domain.account_id===accountId&&$scope.selectedDomains.push(domain)})},$scope.loadKeyDetails=function(id){id&&($scope._loading=!0,$scope.key=null,ApiKeys.get({id:id}).$promise.then(function(key){$scope.key=key})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1}))},$scope.onModelSelect=function(model){$scope.selected=model},$scope.update=function(){$scope.key&&$scope.key.id&&($scope._loading=!0,ApiKeys.update({id:$scope.key.id},clearUpdateData($scope.key)).$promise.then(function(data){$rootScope.$broadcast("update:searchData"),AlertService.success("API Key updated"),$scope.$parent.list()})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1}))},$scope.goToList=function(){$location.path("/keys")},$scope.$watch("key.account_id",function(account_id){$scope.selectDomains(account_id)}),$scope.switchKeyVisibility=function(item){item.showKey=!item.showKey},$scope.copyCallback=function(err){err?$scope.alertService.danger("Copying failed, please try manual.",2e3):$scope.alertService.success("The API key has been copied to the clipboard.",2e3)}}KeysEditController.$inject=["$scope","$rootScope","$injector","$stateParams","$location","CRUDController","ApiKeys","Companies","DomainsConfig","AlertService"],angular.module("revapm.Portal.Keys").controller("KeysEditController",KeysEditController)}(),function(){"use strict";function widgetBTTConversionReportController($sce,BTTPortalService,config){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep(config,_defaultConfig),vm.config=config,vm._loading=!1,BTTPortalService.generateUrlConversionReport(config).then(function(url){config.url=url,config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))})["finally"](function(){vm._loading=!1})}function widgetBTTBounceRateReportController($sce,BTTPortalService,config){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep(config,_defaultConfig),vm.config=config,vm._loading=!1,BTTPortalService.generateUrlBounceRateReport(config).then(function(url){config.url=url,config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))})["finally"](function(){vm._loading=!1})}function widgetBTTBrandConversionRateReportController($sce,BTTPortalService,config){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep(config,_defaultConfig),vm.config=config,vm._loading=!1,BTTPortalService.generateUrlBrandConversionRateReport(config).then(function(url){config.url=url,config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))})["finally"](function(){vm._loading=!1})}function widgetBTTLostRevenueCalculatorReportController($sce,BTTPortalService,config){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep(config,_defaultConfig),vm.config=config,vm._loading=!1,BTTPortalService.generateUrlLostRevenueCalculatorReport(config).then(function(url){config.url=url,config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))})["finally"](function(){vm._loading=!1})}function widgetBTTTrafficInfoReportController($sce,BTTPortalService,config){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep(config,_defaultConfig),vm.config=config,vm._loading=!1,BTTPortalService.generateUrlTrafficInfoReport(config).then(function(url){config.url=url,config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))})["finally"](function(){vm._loading=!1})}function widgetEditBTTiframeController($scope,$localStorage,Countries,User,AlertService){"ngInject";var vm=this,_defaultConfig={filters:{country:"All Countries",count_last_day:"1"},info:{country:"All countries"}};_.defaultsDeep($scope.config,_defaultConfig),vm._loading=!0,vm.domains=[],vm.domain=$scope.config.domain,vm.refCountry=Countries.query(),User.getUserDomains(!0).then(function(domains){if(vm.domains=_.filter(domains,function(item){return!!item.btt_key&&""!==item.btt_key}),(!vm.domain||!vm.domain.id)&&(1===domains.length&&$scope.selectOne&&(vm.onDomainSelected($scope.domains[0]),vm.domain=$scope.domains[0]),$localStorage.selectedDomain&&$localStorage.selectedDomain.id)){var ind=_.findIndex(domains,function(d){return d.id===$localStorage.selectedDomain.id});vm.domain=vm.domains[ind],vm.onDomainSelected(vm.domains[ind])}return vm.domains})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){vm._loading=!1}),vm.onDomainSelected=function(domain){domain&&($localStorage.selectedDomain=domain),vm.domain&&vm.domain.id&&vm.reload()},vm.reload=function(){angular.extend($scope.config,{domain:angular.copy(vm.domain)})}}widgetBTTConversionReportController.$inject=["$sce","BTTPortalService","config"],widgetBTTBounceRateReportController.$inject=["$sce","BTTPortalService","config"],widgetBTTBrandConversionRateReportController.$inject=["$sce","BTTPortalService","config"],widgetBTTLostRevenueCalculatorReportController.$inject=["$sce","BTTPortalService","config"],widgetBTTTrafficInfoReportController.$inject=["$sce","BTTPortalService","config"],widgetEditBTTiframeController.$inject=["$scope","$localStorage","Countries","User","AlertService"],angular.module("revapm.Portal.Dashboard",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ngSanitize","adf.provider","revapm.Portal.BlueTriangleTech"]).config(["dashboardProvider",function(dashboardProvider){dashboardProvider.structure("8-4",{title:"(One Wide Column And One Narrow Column)",rows:[{columns:[{styleClass:"col-md-8",widgets:[]},{styleClass:"col-md-4",widgets:[]}]}]}).structure("12",{title:"(One Wide Column)",rows:[{columns:[{styleClass:"col-md-12",widgets:[]}]}]}).structure("6-6",{title:"(Two Columns Of Equal Width)",rows:[{columns:[{styleClass:"col-md-6",widgets:[]},{styleClass:"col-md-6",widgets:[]}]}]}).structure("4-4-4",{title:"(Three Columns of Equal Width)",rows:[{columns:[{styleClass:"col-md-4",widgets:[]},{styleClass:"col-md-4",widgets:[]},{styleClass:"col-md-4",widgets:[]}]}]}).structure("3-3-3-3",{title:"(Four Columns Of Equal Width)",rows:[{columns:[{styleClass:"col-md-3",widgets:[]},{styleClass:"col-md-3",widgets:[]},{styleClass:"col-md-3",widgets:[]},{styleClass:"col-md-3",widgets:[]}]}]})}]).config(["dashboardProvider",function(dashboardProvider){dashboardProvider.widget("bluetriangletech-conversions-subcategories",{title:"Conversion Rate",description:"Conversion Rate, Average Order Value and Page Views by PRT for Subcategories",templateUrl:"parts/dashboard/widgets/bluetriangletech/view-iframe-bluetriangletech.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/bluetriangletech/widget-title-with-params-bluetriangletech.html",controller:"widgetBTTConversionReportController",controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/bluetriangletech/edit-bluetriangletech.html",controller:"widgetEditBTTiframeController",controllerAs:"vm"},config:{height:"100%",country:"All Countries",count_last_day:"1"}}).widget("bluetriangletech-bounce-rate",{title:"Bounce Rate",description:"Bounce Rate and Page Views Per Session by PRT for subcategory",templateUrl:"parts/dashboard/widgets/bluetriangletech/view-iframe-bluetriangletech.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/bluetriangletech/widget-title-with-params-bluetriangletech.html",controller:"widgetBTTBounceRateReportController",controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/bluetriangletech/edit-bluetriangletech.html",controller:"widgetEditBTTiframeController",controllerAs:"vm"},config:{height:"100%",className:"bluetriangletech--bounce-rate",country:"All Countries",count_last_day:"1"}}).widget("bluetriangletech-brand-conversion-rate",{title:"Brand Conversion Rate",description:"Brand Conversion Rate, Average Brand and Page Views by PRT for subcategory",templateUrl:"parts/dashboard/widgets/bluetriangletech/view-iframe-bluetriangletech.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/bluetriangletech/widget-title-with-params-bluetriangletech.html",controller:"widgetBTTBrandConversionRateReportController",controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/bluetriangletech/edit-bluetriangletech.html",controller:"widgetEditBTTiframeController",controllerAs:"vm"},config:{height:"100%",className:"bluetriangletech--brand-conversion-rate",country:"All Countries",count_last_day:"1"}}).widget("bluetriangletech-lost-revenue-calculator",{title:"Lost Revenue Calculator",description:"Lost Revenue Calculator for subcategory",templateUrl:"parts/dashboard/widgets/bluetriangletech/view-iframe-bluetriangletech.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/bluetriangletech/widget-title-with-params-bluetriangletech.html",controller:"widgetBTTLostRevenueCalculatorReportController",controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/bluetriangletech/edit-bluetriangletech.html",controller:"widgetEditBTTiframeController",controllerAs:"vm"},config:{height:"100%",className:"bluetriangletech--lost-revenue-calculator",country:"All Countries",count_last_day:"1"}}).widget("bluetriangletech-traffic-info",{title:"BTT Traffic Parameters",description:"BTT Traffic Parameters",templateUrl:"parts/dashboard/widgets/bluetriangletech/view-iframe-bluetriangletech.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/bluetriangletech/widget-title-with-params-bluetriangletech.html",controller:"widgetBTTTrafficInfoReportController",controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/bluetriangletech/edit-bluetriangletech.html",controller:"widgetEditBTTiframeController",controllerAs:"vm"},config:{height:"100%",className:"bluetriangletech--traffic-info",country:"All Countries",count_last_day:"1"}}).widget("widget-norse-live-attack-map",{title:"Norse Live Attack Map",description:"Display Norse Live Attack Map",templateUrl:"parts/dashboard/widgets/norse/view-iframe-norse.tpl.html",titleTemplateUrl:"parts/dashboard/widgets/norse/widget-title-without-params-norse.html",controller:["$sce","config",function($sce,config){"ngInject";var vm=this;config.url&&(vm.url=$sce.trustAsResourceUrl(config.url))}],controllerAs:"iframe",edit:{templateUrl:"parts/dashboard/widgets/norse/edit-norse.html",controller:["$sce","config",function($sce,config){"ngInject"}],controllerAs:"vm"},config:{url:"https://map.norsecorp.com/#/"}})}]).controller("widgetBTTConversionReportController",widgetBTTConversionReportController).controller("widgetBTTBounceRateReportController",widgetBTTBounceRateReportController).controller("widgetBTTBrandConversionRateReportController",widgetBTTBrandConversionRateReportController).controller("widgetBTTLostRevenueCalculatorReportController",widgetBTTLostRevenueCalculatorReportController).controller("widgetBTTTrafficInfoReportController",widgetBTTTrafficInfoReportController).controller("widgetEditBTTiframeController",widgetEditBTTiframeController)}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.dashboard",{url:"/dashboard","abstract":!0,views:{page:{template:'<div class="container-fluid" ui-view="page"></div>'}},resolve:{loadModules:["$ocLazyLoad",function($ocLazyLoad){return $ocLazyLoad.load(["bower_components/angular-dashboard-framework/dist/angular-dashboard-framework.min.js","widgets/adf-widget-analytics-proxy-traffic/dist/adf-widget-analytics-proxy-traffic.js"])}]}}).state("index.dashboard.main",{url:"",views:{page:{templateUrl:"parts/dashboard/dashboard.tpl.html",controller:"DashdoardController",controllerAs:"dashboard"}}}).state("index.dashboard.details",{url:"/:dashboardId",views:{page:{templateUrl:"parts/dashboard/dashboard.tpl.html",controller:"DashdoardController",controllerAs:"dashboard"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.Dashboard").config(routesConfig)}(),function(){function orderWidgets(){return function(widgets,keys){if(orderWidgets.widgetList)return orderWidgets.widgetList;var _widgets=angular.copy(widgets);return orderWidgets.widgetList={},angular.forEach(_default_order_widgets,function(key){widgets[key].edit.immediate=!0,orderWidgets.widgetList[key]=_widgets[key],delete _widgets[key]}),angular.forEach(_widgets,function(item,key){orderWidgets.widgetList[key]=item}),orderWidgets.widgetList}}angular.module("revapm.Portal.Dashboard").filter("orderWidgets",orderWidgets);var _default_order_widgets=["analytics-proxy-traffic-bandwidth-usage","analytics-proxy-traffic-chart","analytics-proxy-traffic-http-https-chart","analytics-proxy-hits-cache-chart","adf-widget-gbt-heatmaps","adf-widget-top-10-countries","adf-widget-http-https-requests-ratio","bluetriangletech-conversions-subcategories","bluetriangletech-bounce-rate","bluetriangletech-brand-conversion-rate","bluetriangletech-lost-revenue-calculator","bluetriangletech-traffic-info","widget-norse-live-attack-map"]}(),function(){"use strict";function DashboardSrv($rootScope,$q,$http,$localStorage,$config,dashboard){"ngInject";function getAll(){var deferred=$q.defer();return $http.get(API_URL+"/dashboards").success(function(data){dashboardsList.length=0,angular.forEach(data,function(item){dashboardsList.push(item)}),deferred.resolve(dashboardsList)}).error(function(){deferred.reject()}),deferred.promise}function updateDashboardsListItem(item){var index=_.find(dashboardsList,{id:item.id});-1!==index&&(index.title=item.title)}var API_URL=$config.API_URL,dashboardsList=[];return{dashboardsList:dashboardsList,getAll:getAll,get:function(id){var deferred=$q.defer();return $http.get(API_URL+"/dashboards/"+id).success(function(data){data.titleTemplateUrl="parts/dashboard/dashboard-title.tpl.html",deferred.resolve(data)}).error(function(){deferred.reject()}),deferred.promise},create:function(data){var deferred=$q.defer(),model={title:"New Dashboard ",structure:"6-6",rows:[{columns:[{styleClass:"col-md-6",widgets:[]},{styleClass:"col-md-6",widgets:[]}]}]};return data.rows||(data.rows=dashboard.structures[data.structure].rows),angular.extend(model,data),$http.post(API_URL+"/dashboards",model).success(function(data){$rootScope.$broadcast("update:searchData"),model.id=data.object_id,getAll(),deferred.resolve(model)}).error(function(){deferred.reject()}),deferred.promise},set:function(id,data){var deferred=$q.defer();return $http.put(API_URL+"/dashboards/"+id,data).success(function(res){$rootScope.$broadcast("update:searchData"),updateDashboardsListItem(data),deferred.resolve()}).error(function(){deferred.reject()}),deferred.promise},"delete":function(id){var deferred=$q.defer();return $http["delete"](API_URL+"/dashboards/"+id).success(function(data){$rootScope.$broadcast("update:searchData"),deferred.resolve(data),getAll()}).error(function(){deferred.reject()}),deferred.promise}}}DashboardSrv.$inject=["$rootScope","$q","$http","$localStorage","$config","dashboard"],angular.module("revapm.Portal.Dashboard").factory("DashboardSrv",DashboardSrv).run(["DashboardSrv",function(DashboardSrv){}])}(),function(){"use strict";function DashdoardController($scope,$state,$window,$interval,$localStorage,DashboardSrv,$stateParams){"ngInject";function onResize(){resizing&&$interval.cancel(resizing),resizing=$interval(function(){var event=new Event("resize");window.dispatchEvent(event),onResize()},1e3,1)}function initDashboard(dashboardId){return vm.model={},vm._isLoading=!0,DashboardSrv.get(dashboardId).then(function(data){angular.extend(vm.model,data),vm.model.getCountDashboardWidget=vm.getCountDashboardWidget,vm.model.addTemplateUrl="parts/dashboard/widgets/widget-add.html",vm.model.editTemplateUrl="parts/dashboard/modals/dashboard-edit-with-options.tpl.html",$scope.autoRefresh(vm.model.options)},function(){})["finally"](function(){vm._isLoading=!1})}var resizing,vm=this;onResize(),$stateParams.dashboardId?(vm.dashboardId=$stateParams.dashboardId,initDashboard($stateParams.dashboardId)):DashboardSrv.getAll().then(function(){var firstDashboard=DashboardSrv.dashboardsList[0];firstDashboard.id&&$state.go("index.dashboard.details",{dashboardId:firstDashboard.id})}),$scope.$watch(function(){return DashboardSrv.dashboardsList.length},function(newVal){vm.model&&(vm.model.isLast=2>newVal)},!0),$scope.$on("adfDashboardChanged",function(event,dashboardId,model){DashboardSrv.set(vm.dashboardId,model)}),vm.reload=function(){$scope.$broadcast("widgetReload")},$scope.$watch(function(){return vm.model?vm.model.options:void 0},function(newVal,oldVal){newVal&&oldVal&&newVal.autorefresh!==oldVal.autorefresh&&$scope.autoRefresh(newVal)},!0),$scope.$watch(function(){return vm.model?vm.model.refreshNow:null},function(newVal,oldVal){newVal!==oldVal&&(vm.model.refreshNow=!1,$scope.refreshWidgets())},!0);var timeReload;$scope.autoRefresh=function(option){timeReload&&$interval.cancel(timeReload),option&&option.autorefresh&&""!==option.autorefresh&&(timeReload=$interval(function(){$scope.$broadcast("widgetReload"),$scope.autoRefresh(option)},60*option.autorefresh*1e3,1))},$scope.refreshWidgets=function(){timeReload&&$interval.cancel(timeReload),vm.model.option&&""!==vm.model.option.autorefresh?$scope.autoRefresh(vm.model.option):$scope.$broadcast("widgetReload")},$scope.$on("destroy",function(){timeReload&&$interval.cancel(timeReload),resizing&&$interval.cancel(resizing)}),vm.getCountDashboardWidget=function(rows){var wc=0;return angular.forEach(rows,function(cols){angular.forEach(cols.columns,function(col){col.widgets&&col.widgets.length>0&&(wc+=col.widgets.length)})}),wc}}DashdoardController.$inject=["$scope","$state","$window","$interval","$localStorage","DashboardSrv","$stateParams"],angular.module("revapm.Portal.Dashboard").controller("DashdoardController",DashdoardController)}(),function(){"use strict";function dashboardNavMenu(DashboardSrv){return{restrict:"AE",replace:!0,template:'<li id="left-menu-dashboard-section" class="dashboard_menu list"  ui-sref-active-if="{class: \'active-side-menu-item\', state: \'index.dashboard\'}", ng-class="{\'active-side-menu-item\': menuExpanded(\'index.dashboard\')}"><a class="side-menu-item" ng-if="vm.dashboardsList.length>0" ng-click="goToState(\'dashboard\', vm.dashboardsList[0].id)"  ><div class="left-menu-start" style="margin-right: 3px;"><i class="fa fa-tachometer"></i> </div>Dashboards<i ng-click="expandMenu(\'index.dashboard\', $event)" ng-if="vm.dashboardsList.length > 0" class="pull-right {{ menuExpanded(\'index.dashboard\') ? \'fa fa-caret-down\' : \'fa fa-caret-up\' }}"></i></a><span ng-if="vm.dashboardsList.length==0"  class="side-menu-item item-title"><div class="left-menu-start"><i class="fa fa-tachometer"></i> </div> Dashboards <dashboard-btn-new></dashboard-btn-new></span>  <a  ng-if="vm.dashboardsList.length>0"  ng-repeat="dash in vm.dashboardsList"       ui-sref-active="active" class="side-menu-sub-item" ui-sref="index.dashboard.details({dashboardId:dash.id})">{{dash.title}}</a></li>',scope:!1,controller:["$scope","$state","$uibModal","User","DashboardSrv","dashboard",function($scope,$state,$uibModal,User,DashboardSrv,dashboard){"igInject";this.dashboardsList=DashboardSrv.dashboardsList,this.structures=dashboard.structures,User.isAuthed()&&DashboardSrv.getAll().then(function(){}),this.changeStructure=function(name,structure){},this.onCreateDashboard=function(e){var newDashboardScope=$scope.$new();newDashboardScope._isLoading=!1,newDashboardScope.structures=dashboard.structures,newDashboardScope.model={title:"Dashboard",structure:"6-6"};var instance=$uibModal.open({scope:newDashboardScope,templateUrl:"parts/dashboard/modals/dashboard-new.modal.tpl.html",backdrop:"static"});newDashboardScope.closeDialog=function(){instance.close(),newDashboardScope.$destroy()},newDashboardScope.applyDialog=function(model){newDashboardScope._isLoading=!0,DashboardSrv.create(model).then(function(data){newDashboardScope.closeDialog(),$state.go("index.dashboard.details",{dashboardId:data.id})},function(err){})["finally"](function(){newDashboardScope._isLoading=!1})}}}],controllerAs:"vm",controllerBind:!0}}dashboardNavMenu.$inject=["DashboardSrv"],angular.module("revapm.Portal.Dashboard").directive("dashboardNavMenu",dashboardNavMenu)}(),function(){"use strict";function dashboardBtnNew(DashboardSrv){return{restrict:"AE",replace:!0,template:'<a ng-click="vm.onCreateDashboard($event)" class="btn btn-link pull-right"  style="padding-right:0; padding-top:2px;" title="Add New Dashboard"> <i class="glyphicon glyphicon-plus" style="margin-right: 7px;"></i></a>',scope:!1,controller:["$scope","$state","$uibModal","DashboardSrv","dashboard",function($scope,$state,$uibModal,DashboardSrv,dashboard){"igInject";this.structures=dashboard.structures,this.changeStructure=function(name,structure){},this.onCreateDashboard=function(e){var newDashboardScope=$scope.$new();newDashboardScope._isLoading=!1,newDashboardScope.structures=dashboard.structures,newDashboardScope.model={title:"Dashboard",structure:"6-6",options:{autorefresh:"1"}};var instance=$uibModal.open({scope:newDashboardScope,templateUrl:"parts/dashboard/modals/dashboard-new.modal.tpl.html",backdrop:"static"});newDashboardScope.closeDialog=function(){instance.close(),newDashboardScope.$destroy()},newDashboardScope.applyDialog=function(model){newDashboardScope._isLoading=!0,DashboardSrv.create(model).then(function(data){newDashboardScope.closeDialog(),$state.go("index.dashboard.details",{dashboardId:data.id})},function(err){})["finally"](function(){newDashboardScope._isLoading=!1})}}}],controllerAs:"vm",controllerBind:!0}}dashboardBtnNew.$inject=["DashboardSrv"],angular.module("revapm.Portal.Dashboard").directive("dashboardBtnNew",dashboardBtnNew)}(),function(){"use strict";function dashboardBtnDelete(DashboardSrv){return{restrict:"AE",replace:!0,template:'<button type="button" ng-click="vm.onDeleteDashboard($event)" ng-disabled="model.isLast" class="btn btn-danger" title="Delete Dashboard"> <i class="glyphicon glyphicon-remove"></i> Delete Dashboard </button>',scope:{model:"="},controller:["$scope","$state","$uibModal","DashboardSrv","dashboard",function($scope,$state,$uibModal,DashboardSrv,dashboard){"igInject";this.onDeleteDashboard=function(e){var deleteDashboardScope=$scope.$new();deleteDashboardScope._isLoading=!1,deleteDashboardScope.model=angular.copy($scope.model);var instance=$uibModal.open({scope:deleteDashboardScope,templateUrl:"parts/dashboard/modals/dashboard-delete.modal.tpl.html",backdrop:"static"});deleteDashboardScope.isLast=function(){return 1===DashboardSrv.dashboardsList.length},deleteDashboardScope.closeDialog=function(){instance.close(),deleteDashboardScope.$destroy()},deleteDashboardScope.deleteDialog=function(model){deleteDashboardScope._isLoading=!0,DashboardSrv["delete"](model.id).then(function(data){deleteDashboardScope.closeDialog(),$state.go("index.dashboard.main")},function(err){})["finally"](function(){deleteDashboardScope._isLoading=!1})}}}],controllerAs:"vm",controllerBind:!0}}dashboardBtnDelete.$inject=["DashboardSrv"],angular.module("revapm.Portal.Dashboard").directive("dashboardBtnDelete",dashboardBtnDelete)}(),function(){"use strict";angular.module("revapm.Portal.BlueTriangleTech",[])}(),function(){"use strict";angular.module("revapm.Portal.BlueTriangleTech").value("BTTPortalConfig",{authKey:"a340ef373d412edcb431cf11a0b627c9",url_api:"https://portal.bluetriangletech.com/BTTPortal/api",url_demo:"https://portal.bluetriangletech.com/BTTPortal/api/conversions_html.php?&ReportPage%5B%5D=subcategory&BrowserType=All%20Browsers&Country=All%20Countries&GranularitySelect=1.0&StatSig=0&siteID=567&authKey=a340ef373d412edcb431cf11a0b627c9&timePeriod=hours_3&slowestFastest=slowest_500&refresh_rate=60&StatMethod=85&TimeZone=America/New_York&startEpoch=1458872580&endEpoch=1458883380&offset=10800&startTime=22:23&endTime=01:23&startDate=2016-3-24&endDate=2016-3-24",url_demo_bounceRate_html:"https://portal.bluetriangletech.com/BTTPortal/api/bounceRate_html.php?&ReportPage%5B%5D=subcategory&BrowserType=All%20Browsers&Country=All%20Countries&GranularitySelect=1.0&StatSig=0&siteID=567&authKey=a340ef373d412edcb431cf11a0b627c9&timePeriod=hours_3&slowestFastest=slowest_500&refresh_rate=60&StatMethod=85&TimeZone=America/New_York&startEpoch=1458752400&endEpoch=1458763200&offset=10800&startTime=13:00&endTime=16:00&startDate=2016-3-23&endDate=2016-3-23",url_demo_brandConversions_html:"https://portal.bluetriangletech.com/BTTPortal/api/brandConversions_html.php?&ReportPage%5B%5D=subcategory&BrowserType=All%20Browsers&Country=All%20Countries&GranularitySelect=1.0&StatSig=0&siteID=567&authKey=a340ef373d412edcb431cf11a0b627c9&timePeriod=hours_3&slowestFastest=slowest_500&refresh_rate=60&StatMethod=85&TimeZone=America/New_York&startEpoch=1458752400&endEpoch=1458763200&offset=10800&startTime=13:00&endTime=16:00&startDate=2016-3-23&endDate=2016-3-23",url_demo_lostRevenue_html:"https://portal.bluetriangletech.com/BTTPortal/api/lostRevenue_html.php?BrowserType=All+Browsers&Country=All+Countries&authKey=a340ef373d412edcb431cf11a0b627c9&timePeriod=hours_3&startEpoch=1458752400&endEpoch=1458763200&offset=10800&startTime=13%3A00&endTime=16%3A00&startDate=2016-3-23&endDate=2016-3-23&excluded_9=1&siteID=567&reportType=lostRevenue&ReportPage%5B%5D=subcategory&GranularitySelect=1.0&StatMethod=85&refreshRate=60&TimeZone=America%2FNew_York&panelID=1458763239486&TimeZone=America/New_York&slowestFastest=slowest_500"})}(),function(){"use strict";function BTTPortalService($q,BTTPortalConfig,$httpParamSerializerJQLike){"ngInject";function generateUrlConversionReport(config){var filters=config.filters,def=$q.defer(),_count_last_days="7";filters&&(_count_last_days=filters.count_last_day||"7",filters.country&&_.merge(_def,{Country:[filters.country]}));var _startTime=moment().subtract(_count_last_days,"days"),_endTime=moment(),__def=angular.copy(_def),_btt_key=config.domain?config.domain.btt_key:BTTPortalConfig.authKey,_now={authKey:_btt_key,startEpoch:_startTime.valueOf().toString().substr(0,10),startDate:_startTime.format("YYYY-M-DD"),startTime:_startTime.format("HH:mm"),endEpoch:_endTime.valueOf().toString().substr(0,10),endDate:_endTime.format("YYYY-M-DD"),endTime:_endTime.format("HH:mm")},url_data=$httpParamSerializerJQLike(_.merge(__def,_now));return def.resolve(BTTPortalConfig.url_api+"/conversions_html.php?&"+url_data),def.promise}function generateUrlBounceRateReport(config){var filters=config.filters,def=$q.defer(),_count_last_days="7";filters&&(_count_last_days=filters.count_last_day||"7",filters.country&&_.merge(_def,{Country:[filters.country]}));var _startTime=moment().subtract(_count_last_days,"days"),_endTime=moment(),__def=angular.copy(_def),_btt_key=config.domain?config.domain.btt_key:BTTPortalConfig.authKey,_now={ReportPage:["Item Page"],BrowserType:"All Browsers",GranularitySelect:"1.0",StatSig:0,
StatMethod:85,refresh_rate:60,authKey:_btt_key,startEpoch:_startTime.valueOf().toString().substr(0,10),startDate:_startTime.format("YYYY-M-DD"),startTime:_startTime.format("HH:mm"),endEpoch:_endTime.valueOf().toString().substr(0,10),endDate:_endTime.format("YYYY-M-DD"),endTime:_endTime.format("HH:mm")},url_data=$httpParamSerializerJQLike(_.merge(__def,_now));return def.resolve(BTTPortalConfig.url_api+"/bounceRate_html.php?&"+url_data),def.promise}function generateUrlBrandConversionRateReport(config){var filters=config.filters,def=$q.defer(),_count_last_days="7";filters&&(_count_last_days=filters.count_last_day||"7",filters.country&&_.merge(_def,{Country:[filters.country]}));var _startTime=moment().subtract(_count_last_days,"days"),_endTime=moment(),__def=angular.copy(_def),_btt_key=config.domain?config.domain.btt_key:BTTPortalConfig.authKey,_now={BrowserType:"All Browsers",GranularitySelect:1,StatSig:0,timePeriod:"hours_3",slowestFastest:"slowest_500",refresh_rate:60,authKey:_btt_key,startEpoch:_startTime.valueOf().toString().substr(0,10),startDate:_startTime.format("YYYY-M-DD"),startTime:_startTime.format("HH:mm"),endEpoch:_endTime.valueOf().toString().substr(0,10),endDate:_endTime.format("YYYY-M-DD"),endTime:_endTime.format("HH:mm")},url_data=$httpParamSerializerJQLike(_.merge(__def,_now));return def.resolve(BTTPortalConfig.url_api+"/brandConversions_html.php?&"+url_data),def.promise}function generateUrlLostRevenueCalculatorReport(config){var filters=config.filters,def=$q.defer(),_count_last_days="7";filters&&(_count_last_days=filters.count_last_day||"7",filters.country&&_.merge(_def,{Country:[filters.country]}));var _startTime=moment().subtract(_count_last_days,"days"),_endTime=moment(),__def=angular.copy(_def),_btt_key=config.domain?config.domain.btt_key:BTTPortalConfig.authKey,_now={BrowserType:"All Browsers",excluded_9:1,reportType:"lostRevenue",panelID:1458763239486,timePeriod:"hours_3",slowestFastest:"slowest_500",refreshRate:60,authKey:_btt_key,startEpoch:_startTime.valueOf().toString().substr(0,10),startDate:_startTime.format("YYYY-M-DD"),startTime:_startTime.format("HH:mm"),endEpoch:_endTime.valueOf().toString().substr(0,10),endDate:_endTime.format("YYYY-M-DD"),endTime:_endTime.format("HH:mm")},url_data=$httpParamSerializerJQLike(_.merge(__def,_now));return def.resolve(BTTPortalConfig.url_api+"/lostRevenue_html.php?&"+url_data),def.promise}function generateUrlTrafficInfoReport(config){var filters=config.filters,def=$q.defer(),_count_last_days="7";filters&&(_count_last_days=filters.count_last_day||"7",filters.country&&_.merge(_def,{Country:[filters.country]}));var _startTime=moment().subtract(_count_last_days,"days"),_endTime=moment(),__def=angular.copy(_def),_btt_key=config.domain?config.domain.btt_key:BTTPortalConfig.authKey,_now={BrowserType:"All Browsers",excluded_9:1,reportType:"lostRevenue",panelID:1458763239486,timePeriod:"hours_3",slowestFastest:"slowest_500",refreshRate:60,authKey:_btt_key,startEpoch:_startTime.valueOf().toString().substr(0,10),startDate:_startTime.format("YYYY-M-DD"),startTime:_startTime.format("HH:mm"),endEpoch:_endTime.valueOf().toString().substr(0,10),endDate:_endTime.format("YYYY-M-DD"),endTime:_endTime.format("HH:mm")},url_data=$httpParamSerializerJQLike(_.merge(__def,_now));return def.resolve(BTTPortalConfig.url_api+"/trafficInfo_html.php?&"+url_data),def.promise}var _def={ReportPage:["subcategory"],GranularitySelect:1,TimeZone:"America/New_York",siteID:567,startDate:"2016-03-24",startTime:"22:23",endDate:"2016-03-24",endTime:"01:23",StatMethod:85,startEpoch:"1458872580",endEpoch:"1458883380",offset:10800};return{generateUrlConversionReport:generateUrlConversionReport,generateUrlBounceRateReport:generateUrlBounceRateReport,generateUrlBrandConversionRateReport:generateUrlBrandConversionRateReport,generateUrlLostRevenueCalculatorReport:generateUrlLostRevenueCalculatorReport,generateUrlTrafficInfoReport:generateUrlTrafficInfoReport}}BTTPortalService.$inject=["$q","BTTPortalConfig","$httpParamSerializerJQLike"],angular.module("revapm.Portal.BlueTriangleTech").factory("BTTPortalService",BTTPortalService)}(),function(){"use strict";angular.module("revapm.Portal.LogShippers",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","ng.jsoneditor","ngSanitize"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.logshippers",{url:"/logshippers",views:{main:{controller:"LogShippersCrudController",templateUrl:"parts/logshippers/list.html"}}}).state("index.accountSettings.logshippers.new",{url:"/new",views:{page:{templateUrl:"parts/logshippers/new.html"}}}).state("index.accountSettings.logshippers.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/logshippers/edit.html",controller:"LogShippersCrudController"}}})}routesConfig.$inject=["$stateProvider"],angular.module("revapm.Portal.LogShippers").config(routesConfig)}(),function(){"use strict";function LogShippersCrudController($scope,$timeout,$localStorage,CRUDController,LogShippingJobs,$injector,$stateParams,$config,Companies,$http,$q,$state,$anchorScroll,DomainsConfig,Apps){function setAccountName(){return $scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){_.forEach($scope.records,function(item){var index=_.findIndex(list,{id:item.account_id});index>=0&&(item.companyName=list[index].companyName)})}):$q.when()}function setMappingInformation(){return $scope._loading=!0,$q.all([Apps.query().$promise,DomainsConfig.query().$promise]).then(function(res){angular.forEach($scope.records,function(item){if(item.sourceTypeName=$scope.sourceTypes[item.source_type],item.operationalModeName=$scope.operationalModeType[item.operational_mode],"app"===item.source_type){var _app=_.find(res[0],{id:item.source_id})||{};item.sourceName=_app.app_name||""}if("domain"===item.source_type){var _domain=_.find(res[1],{id:item.source_id})||{};item.sourceName=_domain.domain_name||""}})})["finally"](function(){$scope._loading=!1})}$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.sourceTypes=$config.LOGSHIPPERS_SOURCE_TYPES,$scope.destinationTypes=$config.LOGSHIPPERS_DESTINATIONA_TYPES,$scope.operationalMode={active:"Active",pause_with_log_piling:"Pause With Log Piling",stop:"Stop"},$scope.operationalModeType=$config.LOGSHIPPERS_OPERATIONAL_MODES,$scope.operationalStates={active:"Active",pause:"Pause Log Shipping And Hold Log Files",stop:"Stop"},$scope.generalJobStatusies=$config.LOGSHIPPERS_GENERAL_JOB_STATUSIES,$scope.setState("index.accountSettings.logshippers"),$scope.setResource(LogShippingJobs),$scope.$on("$stateChangeSuccess",function(state){$state.is($scope.state)&&$scope.list().then(setAccountName).then(setMappingInformation).then(function(){$scope.elementIndexForAnchorScroll&&setTimeout(function(){$anchorScroll("anchor"+$scope.elementIndexForAnchorScroll),$scope.$digest()},500)})}),$scope.locations=[],$scope.companies=[],$scope.model={},$scope.fetchCompanies=function(companyIds){var promises=[];companyIds.forEach(function(id){promises.push(Companies.get({id:id}).$promise)}),$q.all(promises).then(function(data){$scope.companies=data})},$scope.prepareJobToUpdate=function(model_current,isStateChange){var model;return model=void 0===model_current.toJSON?_.clone(model_current,!0):_.clone(model_current.toJSON(),!0),delete model.id,delete model.created_by,delete model.updated_by,delete model.created_at,delete model.updated_at,isStateChange?(delete model.companyName,delete model.sourceTypeName,delete model.operationalModeName,delete model.sourceName):("app"===model.source_type&&(_.findIndex($scope.appsList,{id:$scope.selectedAppSourceId,account_id:model.account_id})<0?model.source_id="":model.source_id=$scope.selectedAppSourceId),"domain"===model.source_type&&(_.findIndex($scope.domainsList,{id:$scope.selectedDomainSourceId,account_id:model.account_id})<0?model.source_id="":model.source_id=$scope.selectedDomainSourceId)),model},$scope.setAccountId=function(){$scope.auth.isReseller()||$scope.auth.isRevadmin()?Companies.query(function(list){$scope.companies=list,1===$scope.companies.length&&($scope.model.account_id=$scope.companies[0].id)}):angular.isArray($scope.auth.getUser().companyId)?1===$scope.auth.getUser().companyId.length?$scope.model.account_id=$scope.auth.getUser().companyId[0]:$scope.fetchCompanies($scope.auth.getUser().companyId):$scope.model.account_id=$scope.auth.getUser().companyId},$scope.setAccountId(),$scope.getJob=function(id){$scope.get(id).then(function(){return $q.all([Apps.query().$promise,DomainsConfig.query().$promise]).then(function(res){$scope.appsList=res[0],$scope.domainsList=res[1],""!==$scope.model.source_id&&("app"===$scope.model.source_type&&($scope.selectedAppSourceId=$scope.model.source_id),"domain"===$scope.model.source_type&&($scope.selectedDomainSourceId=$scope.model.source_id))})})["catch"](function(err){$scope.alertService.danger("Could not load job details")})},$scope.deleteJob=function(model){$scope.confirm("confirmModal.html",model).then(function(){var jobName=model.job_name;$scope["delete"](model).then(function(data){$scope.alertService.success("Job "+jobName+" deleted."),$scope.list().then(setAccountName).then(setMappingInformation)})["catch"](function(err){$scope.alertService.danger(err)})})},$scope.createLogShippingJob=function(model){$scope.create(model).then(function(){$scope.alertService.success("Jod created",5e3),$scope.setAccountId()})["catch"]($scope.alertService.danger)},$scope.updateJob=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmUpdateModal.html",model).then(function(){model=$scope.prepareJobToUpdate(model),$scope.update({id:modelId},model).then(function(){$scope.alertService.success("Job updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)})})}},$scope.storeToStorage=function(model){$localStorage.selectedDomain=model},$scope.disableSubmit=function(model,isEdit){return isEdit?$scope._loading||!model.job_name||!model.account_id||!model.operational_mode||!model.source_type||!model.source_id&&!$scope.selectedAppSourceId&&!$scope.selectedDomainSourceId||!model.destination_type:$scope._loading||!model.job_name||!model.account_id},$scope.getRelativeDate=function(datetime){return moment.utc(datetime).fromNow()},$scope.onDomainSelect=function(id){$scope.selectedDomainSourceId=id},$scope.onAppSelect=function(id){$scope.selectedAppSourceId=id},$scope.onAccountSelect=function(accountId){var index_app=-1,index_domain=-1;(index_app=_.findIndex($scope.appsList,{account_id:accountId}))<0?$scope.selectedAppSourceId="":$scope.selectedAppSourceId=$scope.appsList[index_app].id,(index_domain=_.findIndex($scope.domainsList,{account_id:accountId}))<0?$scope.selectedDomainSourceId="":$scope.selectedDomainSourceId=$scope.domainsList[index_domain].id},$scope.onChangeSourceType=function(item){var index_app=-1,index_domain=-1,accountId=$scope.model.account_id;""!==$scope.selectedAppSourceId&&void 0!==$scope.selectedAppSourceId||((index_app=_.findIndex($scope.appsList,{account_id:accountId}))<0?$scope.selectedAppSourceId="":$scope.selectedAppSourceId=$scope.appsList[index_app].id),""!==$scope.selectedDomainSourceId&&void 0!==$scope.selectedDomainSourceId||((index_domain=_.findIndex($scope.domainsList,{account_id:accountId}))<0?$scope.selectedDomainSourceId="":$scope.selectedDomainSourceId=$scope.domainsList[index_domain].id)},$scope.onChangeLogShippingState=function(model,state){if(model&&model.operational_mode!==state){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmChangeLogShippingStateModal.html",model).then(function(){model.operational_mode=state,model=$scope.prepareJobToUpdate(model,!0);var params={id:modelId};$scope.loading(!0),$scope.resource.update(params,model).$promise.then(function(data){return data}).then(function(){$scope.alertService.success("Job updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)})["finally"](function(){$scope.loading(!1)})})}}}LogShippersCrudController.$inject=["$scope","$timeout","$localStorage","CRUDController","LogShippingJobs","$injector","$stateParams","$config","Companies","$http","$q","$state","$anchorScroll","DomainsConfig","Apps"],angular.module("revapm.Portal.LogShippers").controller("LogShippersCrudController",LogShippersCrudController)}(),function(){"use strict";function logshippersStagingStatus(LogShippingJobs,$config,$interval,$rootScope,$state){return{template:'<div><i class="glyphicon" ng-class="iconStaging" uib-tooltip="{{tooltipStaging}}"></i> {{operationalModeName}}</div>',scope:{ngId:"=",currentState:"=",onChangeState:"&"},controller:["$scope",function($scope){var intervalPromise,logShipperId;$scope.iconStaging="glyphicon-refresh spin",$scope.tooltipStaging="Staging Status",$scope.shouldRefresh=!0,$scope.startRefresh=function(){!logShipperId||!$scope.shouldRefresh||$state.includes("index.accountSettings.logshippers.new")||$state.includes("index.accountSettings.logshippers.edit")||$state.includes("index.accountSettings.logshippers.versions")||(intervalPromise=$interval($scope.fetchStatus,$config.LOGSHIPPERS_STATUS_REFRESH_INTERVAL,1))},$scope.stopRefresh=function(){angular.isDefined(intervalPromise)&&($interval.cancel(intervalPromise),intervalPromise=void 0,$scope.shouldRefresh=!1)},$scope.fetchStatus=function(id){(id||logShipperId)&&(!id&&logShipperId&&(id=logShipperId),LogShippingJobs.status({id:id}).$promise.then(function(data){$config.LOGSHIPPERS_STAGING_STATUS_ICONS[data.general_job_status]&&($scope.iconStaging=$config.LOGSHIPPERS_STAGING_STATUS_ICONS[data.general_job_status]),$scope.tooltipStaging="Log Shipping Status: "+data.general_job_status,$scope.operationalModeName=$config.LOGSHIPPERS_OPERATIONAL_MODES[data.general_job_status],$scope.startRefresh(),$scope.onChangeState(),$scope.currentState=$scope.operationalModeName})["catch"](function(err){console.log(err),$scope.iconStaging="glyphicon-remove text-danger",$scope.tooltipStaging="Log Shipping Status: Error",$scope.stopRefresh()}))},$scope.$on("$destroy",function(){$scope.stopRefresh()}),$rootScope.$on("$stateChangeStart",function(event){$scope.stopRefresh()}),$scope.$watch("ngId",function(newValue){newValue&&(logShipperId=newValue,$scope.shouldRefresh=!0,$scope.fetchStatus(newValue))})}]}}logshippersStagingStatus.$inject=["LogShippingJobs","$config","$interval","$rootScope","$state"],angular.module("revapm.Portal.Domains").directive("logshippersStagingStatus",logshippersStagingStatus)}(),function(){"use strict";angular.module("revapm.Portal",["revapm.Portal.Auth","revapm.Portal.Profile","revapm.Portal.Users","revapm.Portal.Domains","revapm.Portal.SSL_certs","revapm.Portal.Companies","revapm.Portal.Cache","revapm.Portal.ImportConfig","revapm.Portal.Reports","revapm.Portal.Mobile","revapm.Portal.Usage","revapm.Portal.Keys","revapm.Portal.Apps","revapm.Portal.Signup","ui.router","ui.bootstrap.typeahead","ui.bootstrap.tpls","ui.bootstrap.tooltip","ui.bootstrap.popover","hljs","oc.lazyLoad","revapm.Portal.Dashboard","datatables","datatables.bootstrap","ngFileSaver","revapm.Portal.LogShippers","angular-intro","ngMessages","ngAnimate"])}(),function(){"use strict";function configure(){}angular.module("revapm.Portal").config(configure)}(),function(){"use strict";function routesConfig($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/users"),$stateProvider.state("index",{url:"",views:{layout:{templateUrl:"parts/layout.html",controller:["$scope","$state","User",function($scope,$state,User){$scope.userService=User,User.isAuthed()||"index.restore"===$state.current.name||"signup"===$state.current.name||"billing_plans"===$state.current.name?"index"===$state.current.name&&$state.go("index.reports.proxy"):$state.go("login")}]}},resolve:{isUserActive:["User","$location",function(User,$location){return($location.path()||"").indexOf("password/reset")>=0?void 0:User.reloadUser()}]}}).state("index.apps",{url:"/apps",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.webApp",{url:"",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.accountSettings",{url:"",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.billing",{url:"",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.reports",{url:"",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.mobile",{url:"",views:{page:{templateUrl:"parts/layout/page.html"}}}).state("index.help",{url:"/help",views:{page:{templateUrl:"parts/help/contactus.html"}}}).state("index.security",{url:"/security",views:{page:{template:"<span></span>"}}})}routesConfig.$inject=["$stateProvider","$urlRouterProvider"],angular.module("revapm.Portal").config(routesConfig)}(),function(){"use strict";function runApp($rootScope,$http,$location,AlertService,$state){function initFooterInfo(){$http.get(window.API_URL+"/healthcheck").success(function(data){data&&($rootScope.apiVersion=data.version),$http.get("/version.txt").success(function(data){data&&($rootScope.portalVersion=data)})})}$rootScope.alertService=AlertService,$rootScope.contactUsLink="https://revapm.zendesk.com/hc/en-us/requests/new",$rootScope.$on("$stateChangeStart",function(event){AlertService.clear()}),$rootScope.$on("$stateChangeSuccess",function(event){setTimeout(function(){$("[autofocus]").focus()},0)}),$rootScope.$on("$stateChangeError",console.log.bind(console)),$rootScope.goToState=function(state,dashboardID){dashboardID?$location.path(state+"/"+dashboardID):$state.go(state)},$rootScope.menuExpanded=function(menuState){return $rootScope.menuExpandedNodes&&$rootScope.menuExpandedNodes[menuState]},$rootScope.expandMenu=function(menuState,event){return $rootScope.menuExpandedNodes.current===menuState?void event.stopPropagation():($rootScope.menuExpandedNodes[menuState]?delete $rootScope.menuExpandedNodes[menuState]:$rootScope.menuExpandedNodes[menuState]=!0,void event.stopPropagation())},initFooterInfo()}runApp.$inject=["$rootScope","$http","$location","AlertService","$state"],angular.module("revapm.Portal").run(runApp)}(),function(){"use strict";function Analytics(){"ngInject";this.recordPageview=function(url){ga("set","page",url),ga("send","pageview")}}function runGoogleAnalitic($rootScope,$location,Analytics){"ngInject";$rootScope.$on("$stateChangeSuccess",function(){Analytics.recordPageview($location.url())})}runGoogleAnalitic.$inject=["$rootScope","$location","Analytics"],angular.module("revapm.Portal").run(runGoogleAnalitic).service("Analytics",Analytics)}(),function(){"use strict";function runIntro($config,$rootScope,$localStorage,$timeout,$window,$state,$stateParams){"ngInject";$rootScope.menuExpandedNodes={};var introduction_application={steps:[{intro:"Welcome to the RevAPM Customer Portal! It looks like you are a new user of the service, and we would like to run for you a quick introduction tour."},{element:"#side-menu-sub-item__webApp-domains",intro:'The "Domains" section allows you to manage the way how your websites (domains) are accelerated by RevAPM.',position:"right"},{element:"#side-menu-sub-item__webApp-ssl_certs",intro:"We highly recommend to use SSL protocol for your websites - it will increase the website security and also allow your visitors to use modern and fast HTTP/2 protocol",position:"right"},{element:"#side-menu-sub-item__webApp-cache ",intro:'If you use our global edge caching feature then the "Purge Cache" section will allow you to instantly purge cached objects when you make changes on your origin server.',position:"right"},{element:"#side-menu-web-analytics-item",intro:'The "Web Analytics" section will provide you with a lot of insights about your website\'s performance, avaiability, user geography, popular content and many other important metrics!',position:"right"},{element:"#side-menu-apps-item",intro:'The "Mobile Apps" section is the right place to supercharge your mobile application with RevSDK. In the section your can create new SDK keys and manage RevAPM acceleration options.',position:"right"},{element:"#side-menu-mobile-analytics-item",intro:"This section is full of information about mobile application availability, performance, userbase, top objects, etc.",position:"right"},{element:"#left-menu-dashboard-section",intro:"Here you can easily build your own dashboards using different graphs from mobile and web analytics sections.",position:"right"}]};$rootScope.IntroOptions=introduction_application,$config.INTRO_IS_ACTIVE===!0?(void 0===$localStorage.intro?($localStorage.intro={isShowMainIntro:!1,pages:{}},$rootScope.menuExpandedNodes={},$rootScope.isShowMainIntro=!1):($rootScope.isShowMainIntro=!1,$rootScope.isShowMainIntro=$localStorage.intro.isShowMainIntro),$rootScope.isShowMainIntro===!1&&["index.apps","index.reports","index.webApp","index.accountSettings"].forEach(function(menuState){$rootScope.menuExpandedNodes[menuState]=!0})):$rootScope.isShowMainIntro=!0,$rootScope.BeforeChangeEvent=function(e,scope){var el=angular.element(e);return el.addClass(".intro-active"),el.focus()},$rootScope.AfterChangeEvent=function(e,scope){var el=angular.element(e);el.removeClass("intro-active")},$rootScope.onIntroCompletedEvent=function(e){$localStorage.intro&&$localStorage.intro.isShowMainIntro===!1?($localStorage.intro.isShowMainIntro=!0,$rootScope.isShowMainIntro=!0,$state.transitionTo($state.current,$stateParams,{reload:!0,inherit:!0,notify:!0})):$localStorage.intro.pages&&$localStorage.intro.pages[$state.current.name]!==!0&&($localStorage.intro.pages[$state.current.name]=!0)}}runIntro.$inject=["$config","$rootScope","$localStorage","$timeout","$window","$state","$stateParams"],angular.module("revapm.Portal").run(runIntro)}();
>>>>>>> 8711aa6075ed28be02821d3d2292e8b493f615dd
